import pir._
import pir.node._
import arch._
import pirc.enums._

object BlackScholes extends PIRApp {
  def main(top:Top) = {
    val bus_1023_v = Vector("bus_1023")
    val bus_1113_v = Vector("bus_1113")
    val x7664_b8315_x7674_data_v = Vector("x7664_b8315_x7674_data")
    val bus_932_v = Vector("bus_932")
    val x7745_b8341_x7754_b8344_s = Scalar("x7745_b8341_x7754_b8344")
    val x7572_x7572_dsp0_bank0_data_v = Vector("x7572_x7572_dsp0_bank0_data")
    val bus_760_v = Vector("bus_760")
    val x7765_b8348_x7774_b8351_s = Scalar("x7765_b8348_x7774_b8351")
    val bus_655_v = Vector("bus_655")
    val bus_608_v = Vector("bus_608")
    val bus_1018_v = Vector("bus_1018")
    val x7766_b8350_x7776_data_v = Vector("x7766_b8350_x7776_data")
    val bus_789_v = Vector("bus_789")
    val bus_657_v = Vector("bus_657")
    val bus_945_v = Vector("bus_945")
    val bus_626_v = Vector("bus_626")
    val x7643_b8306_x7652_b8309_s = Scalar("x7643_b8306_x7652_b8309")
    val bus_1085_v = Vector("bus_1085")
    val bus_947_v = Vector("bus_947")
    val N_argin = ArgIn("N").bound(9995328)
    val bus_852_v = Vector("bus_852")
    val bus_1102_v = Vector("bus_1102")
    val bus_910_v = Vector("bus_910")
    val bus_799_v = Vector("bus_799")
    val bus_593_v = Vector("bus_593")
    val x7765_b8349_x7774_b8352_s = Scalar("x7765_b8349_x7774_b8352")
    val x7580_x8219_data_v = Vector("x7580_x8219_data")
    val x7643_b8307_x7652_b8310_s = Scalar("x7643_b8307_x7652_b8310")
    val bus_649_v = Vector("bus_649")
    val x7623_b8300_x7632_b8303_s = Scalar("x7623_b8300_x7632_b8303")
    val x7569_x7569_dsp0_bank0_data_v = Vector("x7569_x7569_dsp0_bank0_data")
    val bus_678_v = Vector("bus_678")
    val bus_848_v = Vector("bus_848")
    val x8249_b8378_x8259_b8382_s = Scalar("x8249_b8378_x8259_b8382")
    val bus_907_v = Vector("bus_907")
    val bus_645_v = Vector("bus_645")
    val bus_661_v = Vector("bus_661")
    val bus_845_v = Vector("bus_845")
    val bus_749_v = Vector("bus_749")
    val bus_1054_v = Vector("bus_1054")
    val bus_721_v = Vector("bus_721")
    val bus_600_v = Vector("bus_600")
    val x7786_b8357_x7796_data_v = Vector("x7786_b8357_x7796_data")
    val bus_842_v = Vector("bus_842")
    val bus_881_v = Vector("bus_881")
    val x7785_b8355_x7794_b8358_s = Scalar("x7785_b8355_x7794_b8358")
    val bus_1129_v = Vector("bus_1129")
    val x7805_b8363_x7814_b8366_s = Scalar("x7805_b8363_x7814_b8366")
    val bus_946_v = Vector("bus_946")
    val bus_981_v = Vector("bus_981")
    val x7584_b8287_x7594_data_v = Vector("x7584_b8287_x7594_data")
    val x7603_b8293_x7612_b8296_s = Scalar("x7603_b8293_x7612_b8296")
    val vol_oc = OffChip("vol")
    val x7578_x7578_dsp0_bank0_data_v = Vector("x7578_x7578_dsp0_bank0_data")
    val bus_1068_v = Vector("bus_1068")
    val bus_747_v = Vector("bus_747")
    val x8225_b8370_x8235_b8374_s = Scalar("x8225_b8370_x8235_b8374")
    val x7684_b8322_x7694_data_v = Vector("x7684_b8322_x7694_data")
    val x7806_b8364_x7816_data_v = Vector("x7806_b8364_x7816_data")
    val bus_618_v = Vector("bus_618")
    val bus_791_v = Vector("bus_791")
    val x7573_x7573_dsp0_bank0_data_v = Vector("x7573_x7573_dsp0_bank0_data")
    val optprice_oc = OffChip("optprice")
    val bus_922_v = Vector("bus_922")
    val bus_820_v = Vector("bus_820")
    val x7576_x7576_dsp0_bank0_data_v = Vector("x7576_x7576_dsp0_bank0_data")
    val x7683_b8320_x7692_b8323_s = Scalar("x7683_b8320_x7692_b8323")
    val bus_612_v = Vector("bus_612")
    val bus_934_v = Vector("bus_934")
    val bus_692_v = Vector("bus_692")
    val x7577_x7577_dsp0_bank0_data_v = Vector("x7577_x7577_dsp0_bank0_data")
    val bus_651_v = Vector("bus_651")
    val bus_959_v = Vector("bus_959")
    val x7705_b8328_x7714_b8331_s = Scalar("x7705_b8328_x7714_b8331")
    val bus_1105_v = Vector("bus_1105")
    val times_da = DRAMAddress("times", "times")
    val bus_871_v = Vector("bus_871")
    val x7623_b8299_x7632_b8302_s = Scalar("x7623_b8299_x7632_b8302")
    val bus_1128_v = Vector("bus_1128")
    val x7603_b8292_x7612_b8295_s = Scalar("x7603_b8292_x7612_b8295")
    val bus_797_v = Vector("bus_797")
    val bus_955_v = Vector("bus_955")
    val strike_da = DRAMAddress("strike", "strike")
    val bus_834_v = Vector("bus_834")
    val bus_973_v = Vector("bus_973")
    val bus_1041_v = Vector("bus_1041")
    val bus_986_v = Vector("bus_986")
    val bus_897_v = Vector("bus_897")
    val bus_874_v = Vector("bus_874")
    val types_da = DRAMAddress("types", "types")
    val bus_879_v = Vector("bus_879")
    val bus_1017_v = Vector("bus_1017")
    val bus_816_v = Vector("bus_816")
    val x7745_b8342_x7754_b8345_s = Scalar("x7745_b8342_x7754_b8345")
    val x7705_b8327_x7714_b8330_s = Scalar("x7705_b8327_x7714_b8330")
    val x7805_b8362_x7814_b8365_s = Scalar("x7805_b8362_x7814_b8365")
    val bus_1062_v = Vector("bus_1062")
    val bus_1009_v = Vector("bus_1009")
    val bus_778_v = Vector("bus_778")
    val bus_944_v = Vector("bus_944")
    val x7568_x7568_dsp0_bank0_data_v = Vector("x7568_x7568_dsp0_bank0_data")
    val bus_1123_v = Vector("bus_1123")
    val x7604_b8294_x7614_data_v = Vector("x7604_b8294_x7614_data")
    val bus_858_v = Vector("bus_858")
    val x7725_b8334_x7734_b8337_s = Scalar("x7725_b8334_x7734_b8337")
    val bus_681_v = Vector("bus_681")
    val bus_754_v = Vector("bus_754")
    val bus_756_v = Vector("bus_756")
    val bus_604_v = Vector("bus_604")
    val bus_957_v = Vector("bus_957")
    val bus_639_v = Vector("bus_639")
    val bus_1070_v = Vector("bus_1070")
    val bus_1087_v = Vector("bus_1087")
    val x7746_b8343_x7756_data_v = Vector("x7746_b8343_x7756_data")
    val bus_592_v = Vector("bus_592")
    val x7583_b8285_x7592_b8288_s = Scalar("x7583_b8285_x7592_b8288")
    val bus_928_v = Vector("bus_928")
    val bus_952_v = Vector("bus_952")
    val bus_857_v = Vector("bus_857")
    val bus_896_v = Vector("bus_896")
    val bus_603_v = Vector("bus_603")
    val bus_663_v = Vector("bus_663")
    val bus_863_v = Vector("bus_863")
    val bus_1095_v = Vector("bus_1095")
    val bus_814_v = Vector("bus_814")
    val bus_916_v = Vector("bus_916")
    val bus_1027_v = Vector("bus_1027")
    val x7624_b8301_x7634_data_v = Vector("x7624_b8301_x7634_data")
    val bus_637_v = Vector("bus_637")
    val bus_702_v = Vector("bus_702")
    val bus_1091_v = Vector("bus_1091")
    val strike_oc = OffChip("strike")
    val bus_625_v = Vector("bus_625")
    val times_oc = OffChip("times")
    val bus_996_v = Vector("bus_996")
    val bus_818_v = Vector("bus_818")
    val bus_883_v = Vector("bus_883")
    val bus_679_v = Vector("bus_679")
    val x7785_b8356_x7794_b8359_s = Scalar("x7785_b8356_x7794_b8359")
    val x7571_x7571_dsp0_bank0_data_v = Vector("x7571_x7571_dsp0_bank0_data")
    val bus_610_v = Vector("bus_610")
    val x7583_b8286_x7592_b8289_s = Scalar("x7583_b8286_x7592_b8289")
    val bus_725_v = Vector("bus_725")
    val bus_950_v = Vector("bus_950")
    val bus_729_v = Vector("bus_729")
    val bus_793_v = Vector("bus_793")
    val bus_908_v = Vector("bus_908")
    val bus_688_v = Vector("bus_688")
    val bus_926_v = Vector("bus_926")
    val bus_1025_v = Vector("bus_1025")
    val bus_1002_v = Vector("bus_1002")
    val bus_889_v = Vector("bus_889")
    val prices_oc = OffChip("prices")
    val bus_715_v = Vector("bus_715")
    val bus_1033_v = Vector("bus_1033")
    val bus_748_v = Vector("bus_748")
    val x7580_x7580_dsp0_bank0_data_v = Vector("x7580_x7580_dsp0_bank0_data")
    val bus_686_v = Vector("bus_686")
    val x7683_b8321_x7692_b8324_s = Scalar("x7683_b8321_x7692_b8324")
    val bus_951_v = Vector("bus_951")
    val x7706_b8329_x7716_data_v = Vector("x7706_b8329_x7716_data")
    val bus_674_v = Vector("bus_674")
    val x7644_b8308_x7654_data_v = Vector("x7644_b8308_x7654_data")
    val bus_771_v = Vector("bus_771")
    val bus_770_v = Vector("bus_770")
    val x7575_x7575_dsp0_bank0_data_v = Vector("x7575_x7575_dsp0_bank0_data")
    val optprice_da = DRAMAddress("optprice", "optprice")
    val bus_831_v = Vector("bus_831")
    val x7663_b8314_x7672_b8317_s = Scalar("x7663_b8314_x7672_b8317")
    val bus_1019_v = Vector("bus_1019")
    val bus_643_v = Vector("bus_643")
    val bus_992_v = Vector("bus_992")
    val bus_673_v = Vector("bus_673")
    val bus_914_v = Vector("bus_914")
    val bus_806_v = Vector("bus_806")
    val bus_731_v = Vector("bus_731")
    val x7567_x7567_dsp0_bank0_data_v = Vector("x7567_x7567_dsp0_bank0_data")
    val bus_970_v = Vector("bus_970")
    val x7574_x7574_dsp0_bank0_data_v = Vector("x7574_x7574_dsp0_bank0_data")
    val vol_da = DRAMAddress("vol", "vol")
    val bus_752_v = Vector("bus_752")
    val bus_792_v = Vector("bus_792")
    val bus_738_v = Vector("bus_738")
    val bus_864_v = Vector("bus_864")
    val bus_675_v = Vector("bus_675")
    val bus_824_v = Vector("bus_824")
    val bus_949_v = Vector("bus_949")
    val bus_699_v = Vector("bus_699")
    val x7725_b8335_x7734_b8338_s = Scalar("x7725_b8335_x7734_b8338")
    val bus_995_v = Vector("bus_995")
    val bus_1119_v = Vector("bus_1119")
    val bus_710_v = Vector("bus_710")
    val bus_724_v = Vector("bus_724")
    val x7726_b8336_x7736_data_v = Vector("x7726_b8336_x7736_data")
    val types_oc = OffChip("types")
    val rate_da = DRAMAddress("rate", "rate")
    val x7579_x7579_dsp0_bank0_data_v = Vector("x7579_x7579_dsp0_bank0_data")
    val bus_994_v = Vector("bus_994")
    val x7663_b8313_x7672_b8316_s = Scalar("x7663_b8313_x7672_b8316")
    val bus_676_v = Vector("bus_676")
    val bus_1031_v = Vector("bus_1031")
    val bus_963_v = Vector("bus_963")
    val bus_1042_v = Vector("bus_1042")
    val bus_1060_v = Vector("bus_1060")
    val bus_1077_v = Vector("bus_1077")
    val bus_1116_v = Vector("bus_1116")
    val bus_1020_v = Vector("bus_1020")
    val x7579_x8021_data_v = Vector("x7579_x8021_data")
    val bus_723_v = Vector("bus_723")
    val bus_920_v = Vector("bus_920")
    val prices_da = DRAMAddress("prices", "prices")
    val x7570_x7570_dsp0_bank0_data_v = Vector("x7570_x7570_dsp0_bank0_data")
    val rate_oc = OffChip("rate")
    val bus_762_v = Vector("bus_762")
    val bus_1000_v = Vector("bus_1000")
    val bus_680_v = Vector("bus_680")
    val bus_746_v = Vector("bus_746")
    val x8249_b8377_x8259_b8381_s = Scalar("x8249_b8377_x8259_b8381")
    val bus_1064_v = Vector("bus_1064")
    val bus_1089_v = Vector("bus_1089")
    val bus_636_v = Vector("bus_636")
    val x8225_b8369_x8235_b8373_s = Scalar("x8225_b8369_x8235_b8373")
    val bus_875_v = Vector("bus_875")
    val bus_684_v = Vector("bus_684")
    val bus_1063_v = Vector("bus_1063")
    val bus_1049_v = Vector("bus_1049")
    val bus_783_v = Vector("bus_783")
    val x8273 = MetaPipeline(name="x8273",parent="top") { implicit CU => 
      val x7541 = new ScalarBuffer()
        .name("x7541")
        .buffering(1)
        .store(N_argin, None, None)
      val ctr1 = Counter(min=Const(0), max=x7541, step=Const(2000), par=2) // Counter
      val x7566 = CounterChain(name = "x7566", ctr1).iter(2499)
    }
    val x7567_dsp0_bank0 = MemoryPipeline(name="x7567_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7600 = new VectorFIFO()
        .size(1)
        .name("x7600")
        .store(x7584_b8287_x7594_data_v, None, None)
      val x7596 = CounterChain.copy("x7601", "x7596")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7567 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7567")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7600, Some(x7596(0)), Some("x7602"))
        .load(x7567_x7567_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7568_dsp0_bank0 = MemoryPipeline(name="x7568_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7722 = new VectorFIFO()
        .size(1)
        .name("x7722")
        .store(x7706_b8329_x7716_data_v, None, None)
      val x7718 = CounterChain.copy("x7723", "x7718")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7568 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7568")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7722, Some(x7718(0)), Some("x7724"))
        .load(x7568_x7568_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7569_dsp0_bank0 = MemoryPipeline(name="x7569_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7620 = new VectorFIFO()
        .size(1)
        .name("x7620")
        .store(x7604_b8294_x7614_data_v, None, None)
      val x7616 = CounterChain.copy("x7621", "x7616")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7569 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7569")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7620, Some(x7616(0)), Some("x7622"))
        .load(x7569_x7569_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7570_dsp0_bank0 = MemoryPipeline(name="x7570_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7742 = new VectorFIFO()
        .size(1)
        .name("x7742")
        .store(x7726_b8336_x7736_data_v, None, None)
      val x7738 = CounterChain.copy("x7743", "x7738")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7570 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7570")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7742, Some(x7738(0)), Some("x7744"))
        .load(x7570_x7570_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7571_dsp0_bank0 = MemoryPipeline(name="x7571_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7640 = new VectorFIFO()
        .size(1)
        .name("x7640")
        .store(x7624_b8301_x7634_data_v, None, None)
      val x7636 = CounterChain.copy("x7641", "x7636")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7571 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7571")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7640, Some(x7636(0)), Some("x7642"))
        .load(x7571_x7571_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7572_dsp0_bank0 = MemoryPipeline(name="x7572_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7762 = new VectorFIFO()
        .size(1)
        .name("x7762")
        .store(x7746_b8343_x7756_data_v, None, None)
      val x7758 = CounterChain.copy("x7763", "x7758")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7572 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7572")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7762, Some(x7758(0)), Some("x7764"))
        .load(x7572_x7572_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7573_dsp0_bank0 = MemoryPipeline(name="x7573_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7660 = new VectorFIFO()
        .size(1)
        .name("x7660")
        .store(x7644_b8308_x7654_data_v, None, None)
      val x7656 = CounterChain.copy("x7661", "x7656")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7573 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7573")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7660, Some(x7656(0)), Some("x7662"))
        .load(x7573_x7573_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7574_dsp0_bank0 = MemoryPipeline(name="x7574_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7782 = new VectorFIFO()
        .size(1)
        .name("x7782")
        .store(x7766_b8350_x7776_data_v, None, None)
      val x7778 = CounterChain.copy("x7783", "x7778")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7574 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7574")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7782, Some(x7778(0)), Some("x7784"))
        .load(x7574_x7574_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7575_dsp0_bank0 = MemoryPipeline(name="x7575_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7680 = new VectorFIFO()
        .size(1)
        .name("x7680")
        .store(x7664_b8315_x7674_data_v, None, None)
      val x7676 = CounterChain.copy("x7681", "x7676")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7575 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7575")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7680, Some(x7676(0)), Some("x7682"))
        .load(x7575_x7575_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7576_dsp0_bank0 = MemoryPipeline(name="x7576_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7802 = new VectorFIFO()
        .size(1)
        .name("x7802")
        .store(x7786_b8357_x7796_data_v, None, None)
      val x7798 = CounterChain.copy("x7803", "x7798")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7576 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7576")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7802, Some(x7798(0)), Some("x7804"))
        .load(x7576_x7576_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7577_dsp0_bank0 = MemoryPipeline(name="x7577_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7700 = new VectorFIFO()
        .size(1)
        .name("x7700")
        .store(x7684_b8322_x7694_data_v, None, None)
      val x7696 = CounterChain.copy("x7701", "x7696")
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x7577 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7577")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7700, Some(x7696(0)), Some("x7702"))
        .load(x7577_x7577_dsp0_bank0_data_v, Some(x7826(0)), Some("x8022"))
    }
    val x7578_dsp0_bank0 = MemoryPipeline(name="x7578_dsp0_bank0",parent="x8273") { implicit CU => 
      val x7822 = new VectorFIFO()
        .size(1)
        .name("x7822")
        .store(x7806_b8364_x7816_data_v, None, None)
      val x7818 = CounterChain.copy("x7823", "x7818")
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x7578 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7578")
        .banking(Strided(1,16))
        .buffering(2)
        .store(x7822, Some(x7818(0)), Some("x7824"))
        .load(x7578_x7578_dsp0_bank0_data_v, Some(x8024(0)), Some("x8220"))
    }
    val x7579_dsp0_bank0 = MemoryPipeline(name="x7579_dsp0_bank0",parent="x8273") { implicit CU => 
      val x8021 = new VectorFIFO()
        .size(1)
        .name("x8021")
        .store(x7579_x8021_data_v, None, None)
      val x7826 = CounterChain.copy("x8022", "x7826")
      val x8238 = CounterChain.copy("x8244", "x8238")
      val x7579 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7579")
        .banking(Strided(1,16))
        .buffering(3)
        .store(x8021, Some(x7826(0)), Some("x8022"))
        .load(x7579_x7579_dsp0_bank0_data_v, Some(x8238(0)), Some("x8248"))
    }
    val x7580_dsp0_bank0 = MemoryPipeline(name="x7580_dsp0_bank0",parent="x8273") { implicit CU => 
      val x8219 = new VectorFIFO()
        .size(1)
        .name("x8219")
        .store(x7580_x8219_data_v, None, None)
      val x8024 = CounterChain.copy("x8220", "x8024")
      val x8262 = CounterChain.copy("x8268", "x8262")
      val x7580 = new SRAM()
        .size(125)
        .mode(SramMode)
        .name("x7580")
        .banking(Strided(1,16))
        .buffering(3)
        .store(x8219, Some(x8024(0)), Some("x8220"))
        .load(x7580_x7580_dsp0_bank0_data_v, Some(x8262(0)), Some("x8272"))
    }
    val x7602 = StreamController(name="x7602",parent="x8273") { implicit CU => 
      val x7602_unit = CounterChain(name = "x7602_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7593_0 = Pipeline(name="x7593_0",parent="x7602") { implicit CU => 
      val x7586 = CU.temp(None).name("x7586")
      val x7588 = new ScalarBuffer()
        .name("x7588")
        .buffering(1)
        .store(types_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7593_unit = CounterChain(name = "x7593_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7586))
      Stage(operands=List(x7586, x7588), op=FixAdd, results=List(x7583_b8285_x7592_b8288_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7583_b8286_x7592_b8289_s))
    }
    val x7594 = MemoryController(name="x7594",parent="x7602",offchip=types_oc, mctpe=TileLoad) { implicit CU => 
      val x7583_b8286 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7583_b8286_x7592_b8289_s, None, None)
      val x7583_b8285 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7583_b8285_x7592_b8288_s, None, None)
      CU.newOut("data", x7584_b8287_x7594_data_v)
    }
    val x7601 = Pipeline(name="x7601",parent="x7602") { implicit CU => 
      val ctr2 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7596 = CounterChain(name = "x7596", ctr2).iter(125)
    }
    val x7622 = StreamController(name="x7622",parent="x8273") { implicit CU => 
      val x7622_unit = CounterChain(name = "x7622_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7613_0 = Pipeline(name="x7613_0",parent="x7622") { implicit CU => 
      val x7606 = CU.temp(None).name("x7606")
      val x7608 = new ScalarBuffer()
        .name("x7608")
        .buffering(1)
        .store(prices_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7613_unit = CounterChain(name = "x7613_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7606))
      Stage(operands=List(x7606, x7608), op=FixAdd, results=List(x7603_b8292_x7612_b8295_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7603_b8293_x7612_b8296_s))
    }
    val x7614 = MemoryController(name="x7614",parent="x7622",offchip=prices_oc, mctpe=TileLoad) { implicit CU => 
      val x7603_b8292 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7603_b8292_x7612_b8295_s, None, None)
      val x7603_b8293 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7603_b8293_x7612_b8296_s, None, None)
      CU.newOut("data", x7604_b8294_x7614_data_v)
    }
    val x7621 = Pipeline(name="x7621",parent="x7622") { implicit CU => 
      val ctr3 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7616 = CounterChain(name = "x7616", ctr3).iter(125)
    }
    val x7642 = StreamController(name="x7642",parent="x8273") { implicit CU => 
      val x7642_unit = CounterChain(name = "x7642_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7633_0 = Pipeline(name="x7633_0",parent="x7642") { implicit CU => 
      val x7626 = CU.temp(None).name("x7626")
      val x7628 = new ScalarBuffer()
        .name("x7628")
        .buffering(1)
        .store(strike_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7633_unit = CounterChain(name = "x7633_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7626))
      Stage(operands=List(x7626, x7628), op=FixAdd, results=List(x7623_b8299_x7632_b8302_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7623_b8300_x7632_b8303_s))
    }
    val x7634 = MemoryController(name="x7634",parent="x7642",offchip=strike_oc, mctpe=TileLoad) { implicit CU => 
      val x7623_b8300 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7623_b8300_x7632_b8303_s, None, None)
      val x7623_b8299 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7623_b8299_x7632_b8302_s, None, None)
      CU.newOut("data", x7624_b8301_x7634_data_v)
    }
    val x7641 = Pipeline(name="x7641",parent="x7642") { implicit CU => 
      val ctr4 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7636 = CounterChain(name = "x7636", ctr4).iter(125)
    }
    val x7662 = StreamController(name="x7662",parent="x8273") { implicit CU => 
      val x7662_unit = CounterChain(name = "x7662_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7653_0 = Pipeline(name="x7653_0",parent="x7662") { implicit CU => 
      val x7646 = CU.temp(None).name("x7646")
      val x7648 = new ScalarBuffer()
        .name("x7648")
        .buffering(1)
        .store(rate_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7653_unit = CounterChain(name = "x7653_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7646))
      Stage(operands=List(x7646, x7648), op=FixAdd, results=List(x7643_b8306_x7652_b8309_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7643_b8307_x7652_b8310_s))
    }
    val x7654 = MemoryController(name="x7654",parent="x7662",offchip=rate_oc, mctpe=TileLoad) { implicit CU => 
      val x7643_b8307 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7643_b8307_x7652_b8310_s, None, None)
      val x7643_b8306 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7643_b8306_x7652_b8309_s, None, None)
      CU.newOut("data", x7644_b8308_x7654_data_v)
    }
    val x7661 = Pipeline(name="x7661",parent="x7662") { implicit CU => 
      val ctr5 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7656 = CounterChain(name = "x7656", ctr5).iter(125)
    }
    val x7682 = StreamController(name="x7682",parent="x8273") { implicit CU => 
      val x7682_unit = CounterChain(name = "x7682_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7673_0 = Pipeline(name="x7673_0",parent="x7682") { implicit CU => 
      val x7666 = CU.temp(None).name("x7666")
      val x7668 = new ScalarBuffer()
        .name("x7668")
        .buffering(1)
        .store(vol_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7673_unit = CounterChain(name = "x7673_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7666))
      Stage(operands=List(x7666, x7668), op=FixAdd, results=List(x7663_b8313_x7672_b8316_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7663_b8314_x7672_b8317_s))
    }
    val x7674 = MemoryController(name="x7674",parent="x7682",offchip=vol_oc, mctpe=TileLoad) { implicit CU => 
      val x7663_b8313 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7663_b8313_x7672_b8316_s, None, None)
      val x7663_b8314 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7663_b8314_x7672_b8317_s, None, None)
      CU.newOut("data", x7664_b8315_x7674_data_v)
    }
    val x7681 = Pipeline(name="x7681",parent="x7682") { implicit CU => 
      val ctr6 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7676 = CounterChain(name = "x7676", ctr6).iter(125)
    }
    val x7702 = StreamController(name="x7702",parent="x8273") { implicit CU => 
      val x7702_unit = CounterChain(name = "x7702_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7693_0 = Pipeline(name="x7693_0",parent="x7702") { implicit CU => 
      val x7686 = CU.temp(None).name("x7686")
      val x7688 = new ScalarBuffer()
        .name("x7688")
        .buffering(1)
        .store(times_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x7693_unit = CounterChain(name = "x7693_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7686))
      Stage(operands=List(x7686, x7688), op=FixAdd, results=List(x7683_b8320_x7692_b8323_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7683_b8321_x7692_b8324_s))
    }
    val x7694 = MemoryController(name="x7694",parent="x7702",offchip=times_oc, mctpe=TileLoad) { implicit CU => 
      val x7683_b8321 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7683_b8321_x7692_b8324_s, None, None)
      val x7683_b8320 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7683_b8320_x7692_b8323_s, None, None)
      CU.newOut("data", x7684_b8322_x7694_data_v)
    }
    val x7701 = Pipeline(name="x7701",parent="x7702") { implicit CU => 
      val ctr7 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7696 = CounterChain(name = "x7696", ctr7).iter(125)
    }
    val x7724 = StreamController(name="x7724",parent="x8273") { implicit CU => 
      val x7724_unit = CounterChain(name = "x7724_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7715_0 = Pipeline(name="x7715_0",parent="x7724") { implicit CU => 
      val x7708 = CU.temp(None).name("x7708")
      val x7710 = new ScalarBuffer()
        .name("x7710")
        .buffering(1)
        .store(types_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7715_unit = CounterChain(name = "x7715_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7708))
      Stage(operands=List(x7708, x7710), op=FixAdd, results=List(x7705_b8327_x7714_b8330_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7705_b8328_x7714_b8331_s))
    }
    val x7716 = MemoryController(name="x7716",parent="x7724",offchip=types_oc, mctpe=TileLoad) { implicit CU => 
      val x7705_b8328 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7705_b8328_x7714_b8331_s, None, None)
      val x7705_b8327 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7705_b8327_x7714_b8330_s, None, None)
      CU.newOut("data", x7706_b8329_x7716_data_v)
    }
    val x7723 = Pipeline(name="x7723",parent="x7724") { implicit CU => 
      val ctr8 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7718 = CounterChain(name = "x7718", ctr8).iter(125)
    }
    val x7744 = StreamController(name="x7744",parent="x8273") { implicit CU => 
      val x7744_unit = CounterChain(name = "x7744_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7735_0 = Pipeline(name="x7735_0",parent="x7744") { implicit CU => 
      val x7728 = CU.temp(None).name("x7728")
      val x7730 = new ScalarBuffer()
        .name("x7730")
        .buffering(1)
        .store(prices_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7735_unit = CounterChain(name = "x7735_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7728))
      Stage(operands=List(x7728, x7730), op=FixAdd, results=List(x7725_b8334_x7734_b8337_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7725_b8335_x7734_b8338_s))
    }
    val x7736 = MemoryController(name="x7736",parent="x7744",offchip=prices_oc, mctpe=TileLoad) { implicit CU => 
      val x7725_b8334 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7725_b8334_x7734_b8337_s, None, None)
      val x7725_b8335 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7725_b8335_x7734_b8338_s, None, None)
      CU.newOut("data", x7726_b8336_x7736_data_v)
    }
    val x7743 = Pipeline(name="x7743",parent="x7744") { implicit CU => 
      val ctr9 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7738 = CounterChain(name = "x7738", ctr9).iter(125)
    }
    val x7764 = StreamController(name="x7764",parent="x8273") { implicit CU => 
      val x7764_unit = CounterChain(name = "x7764_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7755_0 = Pipeline(name="x7755_0",parent="x7764") { implicit CU => 
      val x7748 = CU.temp(None).name("x7748")
      val x7750 = new ScalarBuffer()
        .name("x7750")
        .buffering(1)
        .store(strike_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7755_unit = CounterChain(name = "x7755_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7748))
      Stage(operands=List(x7748, x7750), op=FixAdd, results=List(x7745_b8341_x7754_b8344_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7745_b8342_x7754_b8345_s))
    }
    val x7756 = MemoryController(name="x7756",parent="x7764",offchip=strike_oc, mctpe=TileLoad) { implicit CU => 
      val x7745_b8342 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7745_b8342_x7754_b8345_s, None, None)
      val x7745_b8341 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7745_b8341_x7754_b8344_s, None, None)
      CU.newOut("data", x7746_b8343_x7756_data_v)
    }
    val x7763 = Pipeline(name="x7763",parent="x7764") { implicit CU => 
      val ctr10 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7758 = CounterChain(name = "x7758", ctr10).iter(125)
    }
    val x7784 = StreamController(name="x7784",parent="x8273") { implicit CU => 
      val x7784_unit = CounterChain(name = "x7784_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7775_0 = Pipeline(name="x7775_0",parent="x7784") { implicit CU => 
      val x7768 = CU.temp(None).name("x7768")
      val x7770 = new ScalarBuffer()
        .name("x7770")
        .buffering(1)
        .store(rate_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7775_unit = CounterChain(name = "x7775_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7768))
      Stage(operands=List(x7768, x7770), op=FixAdd, results=List(x7765_b8348_x7774_b8351_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7765_b8349_x7774_b8352_s))
    }
    val x7776 = MemoryController(name="x7776",parent="x7784",offchip=rate_oc, mctpe=TileLoad) { implicit CU => 
      val x7765_b8349 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7765_b8349_x7774_b8352_s, None, None)
      val x7765_b8348 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7765_b8348_x7774_b8351_s, None, None)
      CU.newOut("data", x7766_b8350_x7776_data_v)
    }
    val x7783 = Pipeline(name="x7783",parent="x7784") { implicit CU => 
      val ctr11 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7778 = CounterChain(name = "x7778", ctr11).iter(125)
    }
    val x7804 = StreamController(name="x7804",parent="x8273") { implicit CU => 
      val x7804_unit = CounterChain(name = "x7804_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7795_0 = Pipeline(name="x7795_0",parent="x7804") { implicit CU => 
      val x7788 = CU.temp(None).name("x7788")
      val x7790 = new ScalarBuffer()
        .name("x7790")
        .buffering(1)
        .store(vol_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7795_unit = CounterChain(name = "x7795_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7788))
      Stage(operands=List(x7788, x7790), op=FixAdd, results=List(x7785_b8355_x7794_b8358_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7785_b8356_x7794_b8359_s))
    }
    val x7796 = MemoryController(name="x7796",parent="x7804",offchip=vol_oc, mctpe=TileLoad) { implicit CU => 
      val x7785_b8355 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7785_b8355_x7794_b8358_s, None, None)
      val x7785_b8356 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7785_b8356_x7794_b8359_s, None, None)
      CU.newOut("data", x7786_b8357_x7796_data_v)
    }
    val x7803 = Pipeline(name="x7803",parent="x7804") { implicit CU => 
      val ctr12 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7798 = CounterChain(name = "x7798", ctr12).iter(125)
    }
    val x7824 = StreamController(name="x7824",parent="x8273") { implicit CU => 
      val x7824_unit = CounterChain(name = "x7824_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x7815_0 = Pipeline(name="x7815_0",parent="x7824") { implicit CU => 
      val x7808 = CU.temp(None).name("x7808")
      val x7810 = new ScalarBuffer()
        .name("x7810")
        .buffering(1)
        .store(times_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x7815_unit = CounterChain(name = "x7815_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x7808))
      Stage(operands=List(x7808, x7810), op=FixAdd, results=List(x7805_b8362_x7814_b8365_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x7805_b8363_x7814_b8366_s))
    }
    val x7816 = MemoryController(name="x7816",parent="x7824",offchip=times_oc, mctpe=TileLoad) { implicit CU => 
      val x7805_b8363 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x7805_b8363_x7814_b8366_s, None, None)
      val x7805_b8362 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x7805_b8362_x7814_b8365_s, None, None)
      CU.newOut("data", x7806_b8364_x7816_data_v)
    }
    val x7823 = Pipeline(name="x7823",parent="x7824") { implicit CU => 
      val ctr13 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7818 = CounterChain(name = "x7818", ctr13).iter(125)
    }
    val x8022_14 = Pipeline(name="x8022_14",parent="x8022") { implicit CU => 
      val x7892 = new VectorFIFO()
        .size(1)
        .name("x7892")
        .store(bus_675_v, None, None)
      val x7872 = new VectorFIFO()
        .size(1)
        .name("x7872")
        .store(bus_639_v, None, None)
      val x7874 = new VectorFIFO()
        .size(1)
        .name("x7874")
        .store(bus_643_v, None, None)
      val ctr32 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_14_unit = CounterChain(name = "x8022_14_unit", ctr32).iter(0)
      Stage(operands=List(x7872, x7874, x7892), op=MuxOp, results=List(bus_676_v))
    }
    val x8022_11 = Pipeline(name="x8022_11",parent="x8022") { implicit CU => 
      val x7887 = CU.temp(None).name("x7887")
      val x7885 = CU.temp(None).name("x7885")
      val x7889 = CU.temp(None).name("x7889")
      val x7886 = CU.temp(None).name("x7886")
      val x7888 = CU.temp(None).name("x7888")
      val x7881 = new VectorFIFO()
        .size(1)
        .name("x7881")
        .store(bus_657_v, None, None)
      val x7884 = new VectorFIFO()
        .size(1)
        .name("x7884")
        .store(bus_663_v, None, None)
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val x7883 = new VectorFIFO()
        .size(1)
        .name("x7883")
        .store(bus_661_v, None, None)
      val ctr29 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_11_unit = CounterChain(name = "x8022_11_unit", ctr29).iter(0)
      Stage(operands=List(x7836, Const(0.003)), op=FltMul, results=List(x7885))
      Stage(operands=List(x7885, Const(60.0)), op=FltAdd, results=List(x7886))
      Stage(operands=List(x7836, Const(2.0E-4)), op=FltMul, results=List(x7887))
      Stage(operands=List(x7887, Const(300.0)), op=FltAdd, results=List(x7888))
      Stage(operands=List(x7884, x7886, x7888), op=MuxOp, results=List(x7889))
      Stage(operands=List(x7881, x7883, x7889), op=MuxOp, results=List(bus_673_v))
    }
    val x8022_46 = Pipeline(name="x8022_46",parent="x8022") { implicit CU => 
      val x8018 = new VectorFIFO()
        .size(1)
        .name("x8018")
        .store(bus_857_v, None, None)
      val x8019 = new VectorFIFO()
        .size(1)
        .name("x8019")
        .store(bus_858_v, None, None)
      val x8015 = new VectorFIFO()
        .size(1)
        .name("x8015")
        .store(bus_848_v, None, None)
      val ctr64 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_46_unit = CounterChain(name = "x8022_46_unit", ctr64).iter(0)
      Stage(operands=List(x8019, x8018, x8015), op=MuxOp, results=List(x7579_x8021_data_v))
    }
    val x8022_13 = Pipeline(name="x8022_13",parent="x8022") { implicit CU => 
      val x7891 = new VectorFIFO()
        .size(1)
        .name("x7891")
        .store(bus_674_v, None, None)
      val x7875 = new VectorFIFO()
        .size(1)
        .name("x7875")
        .store(bus_645_v, None, None)
      val x7877 = new VectorFIFO()
        .size(1)
        .name("x7877")
        .store(bus_649_v, None, None)
      val ctr31 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_13_unit = CounterChain(name = "x8022_13_unit", ctr31).iter(0)
      Stage(operands=List(x7875, x7877, x7891), op=MuxOp, results=List(bus_675_v))
    }
    val x8022_7 = Pipeline(name="x8022_7",parent="x8022") { implicit CU => 
      val x7873 = CU.temp(None).name("x7873")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val ctr25 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_7_unit = CounterChain(name = "x8022_7_unit", ctr25).iter(0)
      Stage(operands=List(x7836, Const(0.22)), op=FltMul, results=List(x7873))
      Stage(operands=List(x7873, Const(1.0)), op=FltAdd, results=List(bus_643_v))
      Stage(operands=List(x7836, Const(100.0)), op=FltLt, results=List(bus_645_v))
    }
    val x8022_40 = Pipeline(name="x8022_40",parent="x8022") { implicit CU => 
      val x7991 = CU.temp(None).name("x7991")
      val x7988 = new VectorFIFO()
        .size(1)
        .name("x7988")
        .store(bus_816_v, None, None)
      val ctr58 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_40_unit = CounterChain(name = "x8022_40_unit", ctr58).iter(0)
      Stage(operands=List(x7988, Const(-1.2)), op=FltLt, results=List(bus_820_v))
      Stage(operands=List(x7988, Const(0.1)), op=FltMul, results=List(x7991))
      Stage(operands=List(x7991, Const(0.35)), op=FltAdd, results=List(bus_824_v))
    }
    val x8022_27 = Pipeline(name="x8022_27",parent="x8022") { implicit CU => 
      val x7895 = new VectorFIFO()
        .size(1)
        .name("x7895")
        .store(bus_678_v, None, None)
      val x7941 = new VectorFIFO()
        .size(1)
        .name("x7941")
        .store(bus_746_v, None, None)
      val x7828 = new VectorFIFO()
        .size(1)
        .name("x7828")
        .store(x7569_x7569_dsp0_bank0_data_v, None, None)
      val x7897 = new VectorFIFO()
        .size(1)
        .name("x7897")
        .store(bus_680_v, None, None)
      val ctr45 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_27_unit = CounterChain(name = "x8022_27_unit", ctr45).iter(0)
      Stage(operands=List(x7828, x7941), op=FltMul, results=List(bus_747_v))
      Stage(operands=List(x7897, x7895), op=FltSub, results=List(bus_748_v))
    }
    val x8022_30 = Pipeline(name="x8022_30",parent="x8022") { implicit CU => 
      val x7948 = CU.temp(None).name("x7948")
      val x7945 = new VectorFIFO()
        .size(1)
        .name("x7945")
        .store(bus_752_v, None, None)
      val ctr48 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_30_unit = CounterChain(name = "x8022_30_unit", ctr48).iter(0)
      Stage(operands=List(x7945, Const(0.1)), op=FltMul, results=List(x7948))
      Stage(operands=List(x7948, Const(0.35)), op=FltAdd, results=List(bus_760_v))
      Stage(operands=List(Const(1.0), x7945), op=FltAdd, results=List(bus_762_v))
    }
    val x8022_18 = Pipeline(name="x8022_18",parent="x8022") { implicit CU => 
      val x7903 = CU.temp(None).name("x7903")
      val x7900 = new VectorFIFO()
        .size(1)
        .name("x7900")
        .store(bus_684_v, None, None)
      val ctr36 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_18_unit = CounterChain(name = "x8022_18_unit", ctr36).iter(0)
      Stage(operands=List(x7900, Const(-1.2)), op=FltLt, results=List(bus_688_v))
      Stage(operands=List(x7900, Const(0.1)), op=FltMul, results=List(x7903))
      Stage(operands=List(x7903, Const(0.35)), op=FltAdd, results=List(bus_692_v))
    }
    val x8022_12 = Pipeline(name="x8022_12",parent="x8022") { implicit CU => 
      val x7878 = new VectorFIFO()
        .size(1)
        .name("x7878")
        .store(bus_651_v, None, None)
      val x7890 = new VectorFIFO()
        .size(1)
        .name("x7890")
        .store(bus_673_v, None, None)
      val x7880 = new VectorFIFO()
        .size(1)
        .name("x7880")
        .store(bus_655_v, None, None)
      val ctr30 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_12_unit = CounterChain(name = "x8022_12_unit", ctr30).iter(0)
      Stage(operands=List(x7878, x7880, x7890), op=MuxOp, results=List(bus_674_v))
    }
    val x8022_29 = Pipeline(name="x8022_29",parent="x8022") { implicit CU => 
      val x7945 = new VectorFIFO()
        .size(1)
        .name("x7945")
        .store(bus_752_v, None, None)
      val ctr47 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_29_unit = CounterChain(name = "x8022_29_unit", ctr47).iter(0)
      Stage(operands=List(x7945, Const(-3.5)), op=FltLt, results=List(bus_754_v))
      Stage(operands=List(x7945, Const(-1.2)), op=FltLt, results=List(bus_756_v))
    }
    val x8022_38 = Pipeline(name="x8022_38",parent="x8022") { implicit CU => 
      val x7982 = CU.temp(None).name("x7982")
      val x7981 = CU.temp(None).name("x7981")
      val x7984 = CU.temp(None).name("x7984")
      val x7985 = CU.temp(None).name("x7985")
      val x7983 = CU.temp(None).name("x7983")
      val x7942 = new VectorFIFO()
        .size(1)
        .name("x7942")
        .store(bus_748_v, None, None)
      val x7965 = new VectorFIFO()
        .size(1)
        .name("x7965")
        .store(bus_783_v, None, None)
      val x7980 = new VectorFIFO()
        .size(1)
        .name("x7980")
        .store(bus_806_v, None, None)
      val x7973 = new VectorFIFO()
        .size(1)
        .name("x7973")
        .store(bus_791_v, None, None)
      val ctr56 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_38_unit = CounterChain(name = "x8022_38_unit", ctr56).iter(0)
      Stage(operands=List(x7980, x7973), op=FltAdd, results=List(x7981))
      Stage(operands=List(x7981, x7965), op=FltMul, results=List(x7982))
      Stage(operands=List(x7982), op=FltNeg, results=List(x7983))
      Stage(operands=List(x7983, Const(1.0)), op=FltAdd, results=List(x7984))
      Stage(operands=List(x7942, Const(0.0)), op=FltLt, results=List(x7985))
      Stage(operands=List(x7985, x7982, x7984), op=MuxOp, results=List(bus_814_v))
    }
    val x8022_28 = Pipeline(name="x8022_28",parent="x8022") { implicit CU => 
      val x7943 = CU.temp(None).name("x7943")
      val x7944 = CU.temp(None).name("x7944")
      val x7942 = new VectorFIFO()
        .size(1)
        .name("x7942")
        .store(bus_748_v, None, None)
      val ctr46 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_28_unit = CounterChain(name = "x8022_28_unit", ctr46).iter(0)
      Stage(operands=List(x7942), op=FltAbs, results=List(x7943, bus_749_v))
      Stage(operands=List(x7943, x7943), op=FltMul, results=List(x7944))
      Stage(operands=List(x7944, Const(-0.05)), op=FltMul, results=List(bus_752_v))
    }
    val x8022_34 = Pipeline(name="x8022_34",parent="x8022") { implicit CU => 
      val x7966 = CU.temp(None).name("x7966")
      val x7968 = CU.temp(None).name("x7968")
      val x7967 = CU.temp(None).name("x7967")
      val x7943 = new VectorFIFO()
        .size(1)
        .name("x7943")
        .store(bus_749_v, None, None)
      val ctr52 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_34_unit = CounterChain(name = "x8022_34_unit", ctr52).iter(0)
      Stage(operands=List(x7943, Const(0.2316419)), op=FltMul, results=List(x7966))
      Stage(operands=List(x7966, Const(1.0)), op=FltAdd, results=List(x7967))
      Stage(operands=List(Const(1.0), x7967), op=FltDiv, results=List(x7968, bus_789_v))
      Stage(operands=List(x7968, Const(0.31938154)), op=FltMul, results=List(bus_791_v))
    }
    val x8022_37 = Pipeline(name="x8022_37",parent="x8022") { implicit CU => 
      val x7975 = CU.temp(None).name("x7975")
      val x7974 = CU.temp(None).name("x7974")
      val x7978 = CU.temp(None).name("x7978")
      val x7979 = CU.temp(None).name("x7979")
      val x7976 = new VectorFIFO()
        .size(1)
        .name("x7976")
        .store(bus_799_v, None, None)
      val x7970 = new VectorFIFO()
        .size(1)
        .name("x7970")
        .store(bus_793_v, None, None)
      val x7969 = new VectorFIFO()
        .size(1)
        .name("x7969")
        .store(bus_792_v, None, None)
      val x7977 = new VectorFIFO()
        .size(1)
        .name("x7977")
        .store(bus_797_v, None, None)
      val ctr55 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_37_unit = CounterChain(name = "x8022_37_unit", ctr55).iter(0)
      Stage(operands=List(x7969, Const(-0.35656378)), op=FltMul, results=List(x7974))
      Stage(operands=List(x7970, Const(1.7814779)), op=FltMul, results=List(x7975))
      Stage(operands=List(x7974, x7975), op=FltAdd, results=List(x7978))
      Stage(operands=List(x7978, x7976), op=FltAdd, results=List(x7979))
      Stage(operands=List(x7979, x7977), op=FltAdd, results=List(bus_806_v))
    }
    val x8022_4 = Pipeline(name="x8022_4",parent="x8022") { implicit CU => 
      val x7858 = CU.temp(None).name("x7858")
      val x7862 = CU.temp(None).name("x7862")
      val x7857 = CU.temp(None).name("x7857")
      val x7861 = CU.temp(None).name("x7861")
      val x7860 = CU.temp(None).name("x7860")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val ctr22 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_4_unit = CounterChain(name = "x8022_4_unit", ctr22).iter(0)
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7857))
      Stage(operands=List(x7857, Const(2.0)), op=FltDiv, results=List(x7858))
      Stage(operands=List(Const(1.0), x7858), op=FltAdd, results=List(bus_618_v))
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7860))
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7861))
      Stage(operands=List(x7860, x7861), op=FltMul, results=List(x7862))
      Stage(operands=List(x7862, Const(8.0)), op=FltDiv, results=List(bus_625_v))
    }
    val x8022_10 = Pipeline(name="x8022_10",parent="x8022") { implicit CU => 
      val x7882 = CU.temp(None).name("x7882")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val ctr28 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_10_unit = CounterChain(name = "x8022_10_unit", ctr28).iter(0)
      Stage(operands=List(x7836, Const(0.008)), op=FltMul, results=List(x7882))
      Stage(operands=List(x7882, Const(20.0)), op=FltAdd, results=List(bus_661_v))
      Stage(operands=List(x7836, Const(100000.0)), op=FltLt, results=List(bus_663_v))
    }
    val x8022_20 = Pipeline(name="x8022_20",parent="x8022") { implicit CU => 
      val x7914 = CU.temp(None).name("x7914")
      val x7913 = CU.temp(None).name("x7913")
      val x7915 = CU.temp(None).name("x7915")
      val x7912 = CU.temp(None).name("x7912")
      val x7916 = CU.temp(None).name("x7916")
      val x7911 = new VectorFIFO()
        .size(1)
        .name("x7911")
        .store(bus_702_v, None, None)
      val x7900 = new VectorFIFO()
        .size(1)
        .name("x7900")
        .store(bus_684_v, None, None)
      val x7909 = new VectorFIFO()
        .size(1)
        .name("x7909")
        .store(bus_699_v, None, None)
      val ctr38 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_20_unit = CounterChain(name = "x8022_20_unit", ctr38).iter(0)
      Stage(operands=List(x7909, x7900), op=FltMul, results=List(x7912))
      Stage(operands=List(x7912, Const(24.0)), op=FltDiv, results=List(x7913))
      Stage(operands=List(x7911, x7913), op=FltAdd, results=List(x7914))
      Stage(operands=List(x7912, x7900), op=FltMul, results=List(x7915))
      Stage(operands=List(x7915, Const(120.0)), op=FltDiv, results=List(x7916))
      Stage(operands=List(x7914, x7916), op=FltAdd, results=List(bus_710_v))
    }
    val x8022_32 = Pipeline(name="x8022_32",parent="x8022") { implicit CU => 
      val x7959 = CU.temp(None).name("x7959")
      val x7961 = CU.temp(None).name("x7961")
      val x7960 = CU.temp(None).name("x7960")
      val x7958 = CU.temp(None).name("x7958")
      val x7957 = new VectorFIFO()
        .size(1)
        .name("x7957")
        .store(bus_771_v, None, None)
      val x7945 = new VectorFIFO()
        .size(1)
        .name("x7945")
        .store(bus_752_v, None, None)
      val x7956 = new VectorFIFO()
        .size(1)
        .name("x7956")
        .store(bus_770_v, None, None)
      val ctr50 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_32_unit = CounterChain(name = "x8022_32_unit", ctr50).iter(0)
      Stage(operands=List(x7957, Const(24.0)), op=FltDiv, results=List(x7958))
      Stage(operands=List(x7956, x7958), op=FltAdd, results=List(x7959))
      Stage(operands=List(x7957, x7945), op=FltMul, results=List(x7960))
      Stage(operands=List(x7960, Const(120.0)), op=FltDiv, results=List(x7961))
      Stage(operands=List(x7959, x7961), op=FltAdd, results=List(bus_778_v))
    }
    val x8022_9 = Pipeline(name="x8022_9",parent="x8022") { implicit CU => 
      val x7879 = CU.temp(None).name("x7879")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val ctr27 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_9_unit = CounterChain(name = "x8022_9_unit", ctr27).iter(0)
      Stage(operands=List(x7836, Const(0.028)), op=FltMul, results=List(x7879))
      Stage(operands=List(x7879, Const(8.0)), op=FltAdd, results=List(bus_655_v))
      Stage(operands=List(x7836, Const(10000.0)), op=FltLt, results=List(bus_657_v))
    }
    val x8022_2 = Pipeline(name="x8022_2",parent="x8022") { implicit CU => 
      val x7851 = CU.temp(None).name("x7851")
      val x7852 = CU.temp(None).name("x7852")
      val x7847 = new VectorFIFO()
        .size(1)
        .name("x7847")
        .store(bus_600_v, None, None)
      val x7849 = new VectorFIFO()
        .size(1)
        .name("x7849")
        .store(bus_603_v, None, None)
      val x7834 = new VectorFIFO()
        .size(1)
        .name("x7834")
        .store(x7575_x7575_dsp0_bank0_data_v, None, None)
      val x7832 = new VectorFIFO()
        .size(1)
        .name("x7832")
        .store(x7573_x7573_dsp0_bank0_data_v, None, None)
      val ctr20 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_2_unit = CounterChain(name = "x8022_2_unit", ctr20).iter(0)
      Stage(operands=List(x7847, x7849), op=FltSub, results=List(bus_604_v))
      Stage(operands=List(x7834, x7834), op=FltMul, results=List(x7851))
      Stage(operands=List(x7851, Const(0.5)), op=FltMul, results=List(x7852))
      Stage(operands=List(x7832, x7852), op=FltAdd, results=List(bus_608_v))
    }
    val x8022_31 = Pipeline(name="x8022_31",parent="x8022") { implicit CU => 
      val x7954 = CU.temp(None).name("x7954")
      val x7955 = CU.temp(None).name("x7955")
      val x7952 = CU.temp(None).name("x7952")
      val x7953 = CU.temp(None).name("x7953")
      val x7951 = CU.temp(None).name("x7951")
      val x7950 = new VectorFIFO()
        .size(1)
        .name("x7950")
        .store(bus_762_v, None, None)
      val x7945 = new VectorFIFO()
        .size(1)
        .name("x7945")
        .store(bus_752_v, None, None)
      val ctr49 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_31_unit = CounterChain(name = "x8022_31_unit", ctr49).iter(0)
      Stage(operands=List(x7945, x7945), op=FltMul, results=List(x7951))
      Stage(operands=List(x7951, Const(2.0)), op=FltDiv, results=List(x7952))
      Stage(operands=List(x7950, x7952), op=FltAdd, results=List(x7953))
      Stage(operands=List(x7951, x7945), op=FltMul, results=List(x7954))
      Stage(operands=List(x7954, Const(6.0)), op=FltDiv, results=List(x7955))
      Stage(operands=List(x7953, x7955), op=FltAdd, results=List(bus_770_v))
      Stage(operands=List(x7954, x7945), op=FltMul, results=List(bus_771_v))
    }
    val x8022_33 = Pipeline(name="x8022_33",parent="x8022") { implicit CU => 
      val x7964 = CU.temp(None).name("x7964")
      val x7963 = CU.temp(None).name("x7963")
      val x7949 = new VectorFIFO()
        .size(1)
        .name("x7949")
        .store(bus_760_v, None, None)
      val x7946 = new VectorFIFO()
        .size(1)
        .name("x7946")
        .store(bus_754_v, None, None)
      val x7962 = new VectorFIFO()
        .size(1)
        .name("x7962")
        .store(bus_778_v, None, None)
      val x7947 = new VectorFIFO()
        .size(1)
        .name("x7947")
        .store(bus_756_v, None, None)
      val ctr51 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_33_unit = CounterChain(name = "x8022_33_unit", ctr51).iter(0)
      Stage(operands=List(x7947, x7949, x7962), op=MuxOp, results=List(x7963))
      Stage(operands=List(x7946, Const(0.0), x7963), op=MuxOp, results=List(x7964))
      Stage(operands=List(x7964, Const(0.3989423)), op=FltMul, results=List(bus_783_v))
    }
    val x8022_6 = Pipeline(name="x8022_6",parent="x8022") { implicit CU => 
      val x7870 = new VectorFIFO()
        .size(1)
        .name("x7870")
        .store(bus_636_v, None, None)
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val x7864 = new VectorFIFO()
        .size(1)
        .name("x7864")
        .store(bus_626_v, None, None)
      val ctr24 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_6_unit = CounterChain(name = "x8022_6_unit", ctr24).iter(0)
      Stage(operands=List(x7864, x7870), op=FltAdd, results=List(bus_637_v))
      Stage(operands=List(x7836, Const(10.0)), op=FltLt, results=List(bus_639_v))
    }
    val x8022_5 = Pipeline(name="x8022_5",parent="x8022") { implicit CU => 
      val x7867 = CU.temp(None).name("x7867")
      val x7866 = CU.temp(None).name("x7866")
      val x7865 = CU.temp(None).name("x7865")
      val x7869 = CU.temp(None).name("x7869")
      val x7868 = CU.temp(None).name("x7868")
      val x7859 = new VectorFIFO()
        .size(1)
        .name("x7859")
        .store(bus_618_v, None, None)
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val x7863 = new VectorFIFO()
        .size(1)
        .name("x7863")
        .store(bus_625_v, None, None)
      val ctr23 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_5_unit = CounterChain(name = "x8022_5_unit", ctr23).iter(0)
      Stage(operands=List(x7859, x7863), op=FltSub, results=List(bus_626_v))
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7865))
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7866))
      Stage(operands=List(x7865, x7866), op=FltMul, results=List(x7867))
      Stage(operands=List(x7836, Const(1.0)), op=FltSub, results=List(x7868))
      Stage(operands=List(x7867, x7868), op=FltMul, results=List(x7869))
      Stage(operands=List(x7869, Const(16.0)), op=FltDiv, results=List(bus_636_v))
    }
    val x8022_16 = Pipeline(name="x8022_16",parent="x8022") { implicit CU => 
      val x7897 = CU.temp(None).name("x7897")
      val x7896 = new VectorFIFO()
        .size(1)
        .name("x7896")
        .store(bus_679_v, None, None)
      val x7855 = new VectorFIFO()
        .size(1)
        .name("x7855")
        .store(bus_610_v, None, None)
      val ctr34 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_16_unit = CounterChain(name = "x8022_16_unit", ctr34).iter(0)
      Stage(operands=List(x7855, x7896), op=FltDiv, results=List(x7897, bus_680_v))
      Stage(operands=List(x7897), op=FltAbs, results=List(bus_681_v))
    }
    val x8022_21 = Pipeline(name="x8022_21",parent="x8022") { implicit CU => 
      val x7919 = CU.temp(None).name("x7919")
      val x7918 = CU.temp(None).name("x7918")
      val x7904 = new VectorFIFO()
        .size(1)
        .name("x7904")
        .store(bus_692_v, None, None)
      val x7917 = new VectorFIFO()
        .size(1)
        .name("x7917")
        .store(bus_710_v, None, None)
      val x7902 = new VectorFIFO()
        .size(1)
        .name("x7902")
        .store(bus_688_v, None, None)
      val x7901 = new VectorFIFO()
        .size(1)
        .name("x7901")
        .store(bus_686_v, None, None)
      val ctr39 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_21_unit = CounterChain(name = "x8022_21_unit", ctr39).iter(0)
      Stage(operands=List(x7902, x7904, x7917), op=MuxOp, results=List(x7918))
      Stage(operands=List(x7901, Const(0.0), x7918), op=MuxOp, results=List(x7919))
      Stage(operands=List(x7919, Const(0.3989423)), op=FltMul, results=List(bus_715_v))
    }
    val x8022_1 = Pipeline(name="x8022_1",parent="x8022") { implicit CU => 
      val x7844 = CU.temp(None).name("x7844")
      val x7843 = CU.temp(None).name("x7843")
      val x7848 = CU.temp(None).name("x7848")
      val x7846 = CU.temp(None).name("x7846")
      val x7845 = CU.temp(None).name("x7845")
      val x7841 = new VectorFIFO()
        .size(1)
        .name("x7841")
        .store(bus_592_v, None, None)
      val x7842 = new VectorFIFO()
        .size(1)
        .name("x7842")
        .store(bus_593_v, None, None)
      val ctr19 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_1_unit = CounterChain(name = "x8022_1_unit", ctr19).iter(0)
      Stage(operands=List(x7842, Const(2.0)), op=FltDiv, results=List(x7843))
      Stage(operands=List(x7841, x7843), op=FltSub, results=List(x7844))
      Stage(operands=List(x7842, x7841), op=FltMul, results=List(x7845))
      Stage(operands=List(x7845, Const(3.0)), op=FltDiv, results=List(x7846))
      Stage(operands=List(x7844, x7846), op=FltAdd, results=List(bus_600_v))
      Stage(operands=List(x7845, x7841), op=FltMul, results=List(x7848))
      Stage(operands=List(x7848, Const(4.0)), op=FltDiv, results=List(bus_603_v))
    }
    val x8022_3 = Pipeline(name="x8022_3",parent="x8022") { implicit CU => 
      val x7854 = CU.temp(None).name("x7854")
      val x7853 = new VectorFIFO()
        .size(1)
        .name("x7853")
        .store(bus_608_v, None, None)
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val x7850 = new VectorFIFO()
        .size(1)
        .name("x7850")
        .store(bus_604_v, None, None)
      val ctr21 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_3_unit = CounterChain(name = "x8022_3_unit", ctr21).iter(0)
      Stage(operands=List(x7853, x7836), op=FltMul, results=List(x7854))
      Stage(operands=List(x7854, x7850), op=FltAdd, results=List(bus_610_v))
      Stage(operands=List(x7836, Const(2.0)), op=FltLt, results=List(bus_612_v))
    }
    val x8022_8 = Pipeline(name="x8022_8",parent="x8022") { implicit CU => 
      val x7876 = CU.temp(None).name("x7876")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val ctr26 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_8_unit = CounterChain(name = "x8022_8_unit", ctr26).iter(0)
      Stage(operands=List(x7836, Const(0.08)), op=FltMul, results=List(x7876))
      Stage(operands=List(x7876, Const(2.5)), op=FltAdd, results=List(bus_649_v))
      Stage(operands=List(x7836, Const(1000.0)), op=FltLt, results=List(bus_651_v))
    }
    val x8022_22 = Pipeline(name="x8022_22",parent="x8022") { implicit CU => 
      val x7921 = CU.temp(None).name("x7921")
      val x7922 = CU.temp(None).name("x7922")
      val x7923 = CU.temp(None).name("x7923")
      val x7898 = new VectorFIFO()
        .size(1)
        .name("x7898")
        .store(bus_681_v, None, None)
      val ctr40 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_22_unit = CounterChain(name = "x8022_22_unit", ctr40).iter(0)
      Stage(operands=List(x7898, Const(0.2316419)), op=FltMul, results=List(x7921))
      Stage(operands=List(x7921, Const(1.0)), op=FltAdd, results=List(x7922))
      Stage(operands=List(Const(1.0), x7922), op=FltDiv, results=List(x7923, bus_721_v))
      Stage(operands=List(x7923, Const(0.31938154)), op=FltMul, results=List(bus_723_v))
    }
    val x8022_23 = Pipeline(name="x8022_23",parent="x8022") { implicit CU => 
      val x7924 = CU.temp(None).name("x7924")
      val x7923 = new VectorFIFO()
        .size(1)
        .name("x7923")
        .store(bus_721_v, None, None)
      val ctr41 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_23_unit = CounterChain(name = "x8022_23_unit", ctr41).iter(0)
      Stage(operands=List(x7923, x7923), op=FltMul, results=List(x7924, bus_724_v))
      Stage(operands=List(x7924, x7923), op=FltMul, results=List(bus_725_v))
    }
    val x8022_26 = Pipeline(name="x8022_26",parent="x8022") { implicit CU => 
      val x7938 = CU.temp(None).name("x7938")
      val x7940 = CU.temp(None).name("x7940")
      val x7936 = CU.temp(None).name("x7936")
      val x7939 = CU.temp(None).name("x7939")
      val x7937 = CU.temp(None).name("x7937")
      val x7935 = new VectorFIFO()
        .size(1)
        .name("x7935")
        .store(bus_738_v, None, None)
      val x7897 = new VectorFIFO()
        .size(1)
        .name("x7897")
        .store(bus_680_v, None, None)
      val x7920 = new VectorFIFO()
        .size(1)
        .name("x7920")
        .store(bus_715_v, None, None)
      val x7928 = new VectorFIFO()
        .size(1)
        .name("x7928")
        .store(bus_723_v, None, None)
      val ctr44 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_26_unit = CounterChain(name = "x8022_26_unit", ctr44).iter(0)
      Stage(operands=List(x7935, x7928), op=FltAdd, results=List(x7936))
      Stage(operands=List(x7936, x7920), op=FltMul, results=List(x7937))
      Stage(operands=List(x7937), op=FltNeg, results=List(x7938))
      Stage(operands=List(x7938, Const(1.0)), op=FltAdd, results=List(x7939))
      Stage(operands=List(x7897, Const(0.0)), op=FltLt, results=List(x7940))
      Stage(operands=List(x7940, x7937, x7939), op=MuxOp, results=List(bus_746_v))
    }
    val x8022 = StreamController(name="x8022",parent="x8273") { implicit CU => 
      val ctr14 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x7826 = CounterChain(name = "x7826", ctr14).iter(125)
    }
    val x8022_42 = Pipeline(name="x8022_42",parent="x8022") { implicit CU => 
      val x8001 = CU.temp(None).name("x8001")
      val x8000 = CU.temp(None).name("x8000")
      val x8002 = CU.temp(None).name("x8002")
      val x8004 = CU.temp(None).name("x8004")
      val x8003 = CU.temp(None).name("x8003")
      val x7988 = new VectorFIFO()
        .size(1)
        .name("x7988")
        .store(bus_816_v, None, None)
      val x7999 = new VectorFIFO()
        .size(1)
        .name("x7999")
        .store(bus_834_v, None, None)
      val x7997 = new VectorFIFO()
        .size(1)
        .name("x7997")
        .store(bus_831_v, None, None)
      val ctr60 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_42_unit = CounterChain(name = "x8022_42_unit", ctr60).iter(0)
      Stage(operands=List(x7997, x7988), op=FltMul, results=List(x8000))
      Stage(operands=List(x8000, Const(24.0)), op=FltDiv, results=List(x8001))
      Stage(operands=List(x7999, x8001), op=FltAdd, results=List(x8002))
      Stage(operands=List(x8000, x7988), op=FltMul, results=List(x8003))
      Stage(operands=List(x8003, Const(120.0)), op=FltDiv, results=List(x8004))
      Stage(operands=List(x8002, x8004), op=FltAdd, results=List(bus_842_v))
    }
    val x8022_36 = Pipeline(name="x8022_36",parent="x8022") { implicit CU => 
      val x7972 = CU.temp(None).name("x7972")
      val x7971 = CU.temp(None).name("x7971")
      val x7970 = new VectorFIFO()
        .size(1)
        .name("x7970")
        .store(bus_793_v, None, None)
      val x7968 = new VectorFIFO()
        .size(1)
        .name("x7968")
        .store(bus_789_v, None, None)
      val ctr54 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_36_unit = CounterChain(name = "x8022_36_unit", ctr54).iter(0)
      Stage(operands=List(x7970, x7968), op=FltMul, results=List(x7971))
      Stage(operands=List(x7971, x7968), op=FltMul, results=List(x7972))
      Stage(operands=List(x7972, Const(1.3302745)), op=FltMul, results=List(bus_797_v))
      Stage(operands=List(x7971, Const(-1.8212559)), op=FltMul, results=List(bus_799_v))
    }
    val x8022_44 = Pipeline(name="x8022_44",parent="x8022") { implicit CU => 
      val x8011 = CU.temp(None).name("x8011")
      val x8008 = CU.temp(None).name("x8008")
      val x8012 = CU.temp(None).name("x8012")
      val x8014 = CU.temp(None).name("x8014")
      val x7986 = new VectorFIFO()
        .size(1)
        .name("x7986")
        .store(bus_814_v, None, None)
      val x8013 = new VectorFIFO()
        .size(1)
        .name("x8013")
        .store(bus_747_v, None, None)
      val x8007 = new VectorFIFO()
        .size(1)
        .name("x8007")
        .store(bus_845_v, None, None)
      val x7830 = new VectorFIFO()
        .size(1)
        .name("x7830")
        .store(x7571_x7571_dsp0_bank0_data_v, None, None)
      val ctr62 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_44_unit = CounterChain(name = "x8022_44_unit", ctr62).iter(0)
      Stage(operands=List(x7830, x8007), op=FltMul, results=List(x8008))
      Stage(operands=List(x8008, x7986), op=FltMul, results=List(x8014))
      Stage(operands=List(x8013, x8014), op=FltSub, results=List(bus_848_v))
      Stage(operands=List(x7986), op=FltNeg, results=List(x8011))
      Stage(operands=List(x8011, Const(1.0)), op=FltAdd, results=List(x8012))
      Stage(operands=List(x8008, x8012), op=FltMul, results=List(bus_852_v))
    }
    val x8022_24 = Pipeline(name="x8022_24",parent="x8022") { implicit CU => 
      val x7927 = CU.temp(None).name("x7927")
      val x7926 = CU.temp(None).name("x7926")
      val x7923 = new VectorFIFO()
        .size(1)
        .name("x7923")
        .store(bus_721_v, None, None)
      val x7925 = new VectorFIFO()
        .size(1)
        .name("x7925")
        .store(bus_725_v, None, None)
      val ctr42 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_24_unit = CounterChain(name = "x8022_24_unit", ctr42).iter(0)
      Stage(operands=List(x7925, x7923), op=FltMul, results=List(x7926))
      Stage(operands=List(x7926, x7923), op=FltMul, results=List(x7927))
      Stage(operands=List(x7927, Const(1.3302745)), op=FltMul, results=List(bus_729_v))
      Stage(operands=List(x7926, Const(-1.8212559)), op=FltMul, results=List(bus_731_v))
    }
    val x8022_25 = Pipeline(name="x8022_25",parent="x8022") { implicit CU => 
      val x7933 = CU.temp(None).name("x7933")
      val x7934 = CU.temp(None).name("x7934")
      val x7929 = CU.temp(None).name("x7929")
      val x7930 = CU.temp(None).name("x7930")
      val x7932 = new VectorFIFO()
        .size(1)
        .name("x7932")
        .store(bus_729_v, None, None)
      val x7925 = new VectorFIFO()
        .size(1)
        .name("x7925")
        .store(bus_725_v, None, None)
      val x7924 = new VectorFIFO()
        .size(1)
        .name("x7924")
        .store(bus_724_v, None, None)
      val x7931 = new VectorFIFO()
        .size(1)
        .name("x7931")
        .store(bus_731_v, None, None)
      val ctr43 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_25_unit = CounterChain(name = "x8022_25_unit", ctr43).iter(0)
      Stage(operands=List(x7924, Const(-0.35656378)), op=FltMul, results=List(x7929))
      Stage(operands=List(x7925, Const(1.7814779)), op=FltMul, results=List(x7930))
      Stage(operands=List(x7929, x7930), op=FltAdd, results=List(x7933))
      Stage(operands=List(x7933, x7931), op=FltAdd, results=List(x7934))
      Stage(operands=List(x7934, x7932), op=FltAdd, results=List(bus_738_v))
    }
    val x8022_41 = Pipeline(name="x8022_41",parent="x8022") { implicit CU => 
      val x7998 = CU.temp(None).name("x7998")
      val x7993 = CU.temp(None).name("x7993")
      val x7995 = CU.temp(None).name("x7995")
      val x7997 = CU.temp(None).name("x7997")
      val x7994 = CU.temp(None).name("x7994")
      val x7996 = CU.temp(None).name("x7996")
      val x7988 = new VectorFIFO()
        .size(1)
        .name("x7988")
        .store(bus_816_v, None, None)
      val ctr59 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_41_unit = CounterChain(name = "x8022_41_unit", ctr59).iter(0)
      Stage(operands=List(Const(1.0), x7988), op=FltAdd, results=List(x7993))
      Stage(operands=List(x7988, x7988), op=FltMul, results=List(x7994))
      Stage(operands=List(x7994, Const(2.0)), op=FltDiv, results=List(x7995))
      Stage(operands=List(x7993, x7995), op=FltAdd, results=List(x7996))
      Stage(operands=List(x7994, x7988), op=FltMul, results=List(x7997, bus_831_v))
      Stage(operands=List(x7997, Const(6.0)), op=FltDiv, results=List(x7998))
      Stage(operands=List(x7996, x7998), op=FltAdd, results=List(bus_834_v))
    }
    val x8022_45 = Pipeline(name="x8022_45",parent="x8022") { implicit CU => 
      val x8009 = CU.temp(None).name("x8009")
      val x8010 = CU.temp(None).name("x8010")
      val x8017 = CU.temp(None).name("x8017")
      val x7838 = new VectorFIFO()
        .size(1)
        .name("x7838")
        .store(x7567_x7567_dsp0_bank0_data_v, None, None)
      val x8016 = new VectorFIFO()
        .size(1)
        .name("x8016")
        .store(bus_852_v, None, None)
      val x7941 = new VectorFIFO()
        .size(1)
        .name("x7941")
        .store(bus_746_v, None, None)
      val x7828 = new VectorFIFO()
        .size(1)
        .name("x7828")
        .store(x7569_x7569_dsp0_bank0_data_v, None, None)
      val ctr63 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_45_unit = CounterChain(name = "x8022_45_unit", ctr63).iter(0)
      Stage(operands=List(x7941), op=FltNeg, results=List(x8009))
      Stage(operands=List(x8009, Const(1.0)), op=FltAdd, results=List(x8010))
      Stage(operands=List(x7828, x8010), op=FltMul, results=List(x8017))
      Stage(operands=List(x8016, x8017), op=FltSub, results=List(bus_857_v))
      Stage(operands=List(x7838, Const(0)), op=FixEql, results=List(bus_858_v))
    }
    val x8022_19 = Pipeline(name="x8022_19",parent="x8022") { implicit CU => 
      val x7910 = CU.temp(None).name("x7910")
      val x7905 = CU.temp(None).name("x7905")
      val x7909 = CU.temp(None).name("x7909")
      val x7907 = CU.temp(None).name("x7907")
      val x7906 = CU.temp(None).name("x7906")
      val x7908 = CU.temp(None).name("x7908")
      val x7900 = new VectorFIFO()
        .size(1)
        .name("x7900")
        .store(bus_684_v, None, None)
      val ctr37 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_19_unit = CounterChain(name = "x8022_19_unit", ctr37).iter(0)
      Stage(operands=List(Const(1.0), x7900), op=FltAdd, results=List(x7905))
      Stage(operands=List(x7900, x7900), op=FltMul, results=List(x7906))
      Stage(operands=List(x7906, Const(2.0)), op=FltDiv, results=List(x7907))
      Stage(operands=List(x7905, x7907), op=FltAdd, results=List(x7908))
      Stage(operands=List(x7906, x7900), op=FltMul, results=List(x7909, bus_699_v))
      Stage(operands=List(x7909, Const(6.0)), op=FltDiv, results=List(x7910))
      Stage(operands=List(x7908, x7910), op=FltAdd, results=List(bus_702_v))
    }
    val x8022_39 = Pipeline(name="x8022_39",parent="x8022") { implicit CU => 
      val x7988 = CU.temp(None).name("x7988")
      val x7987 = CU.temp(None).name("x7987")
      val x7836 = new VectorFIFO()
        .size(1)
        .name("x7836")
        .store(x7577_x7577_dsp0_bank0_data_v, None, None)
      val x7832 = new VectorFIFO()
        .size(1)
        .name("x7832")
        .store(x7573_x7573_dsp0_bank0_data_v, None, None)
      val ctr57 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_39_unit = CounterChain(name = "x8022_39_unit", ctr57).iter(0)
      Stage(operands=List(x7832), op=FltNeg, results=List(x7987))
      Stage(operands=List(x7987, x7836), op=FltMul, results=List(x7988, bus_816_v))
      Stage(operands=List(x7988, Const(-3.5)), op=FltLt, results=List(bus_818_v))
    }
    val x8022_0 = Pipeline(name="x8022_0",parent="x8022") { implicit CU => 
      val x7841 = CU.temp(None).name("x7841")
      val x7840 = CU.temp(None).name("x7840")
      val x7828 = new VectorFIFO()
        .size(1)
        .name("x7828")
        .store(x7569_x7569_dsp0_bank0_data_v, None, None)
      val x7830 = new VectorFIFO()
        .size(1)
        .name("x7830")
        .store(x7571_x7571_dsp0_bank0_data_v, None, None)
      val ctr18 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_0_unit = CounterChain(name = "x8022_0_unit", ctr18).iter(0)
      Stage(operands=List(x7828, x7830), op=FltDiv, results=List(x7840))
      Stage(operands=List(x7840, Const(1.0)), op=FltSub, results=List(x7841, bus_592_v))
      Stage(operands=List(x7841, x7841), op=FltMul, results=List(bus_593_v))
    }
    val x8022_43 = Pipeline(name="x8022_43",parent="x8022") { implicit CU => 
      val x8006 = CU.temp(None).name("x8006")
      val x7992 = new VectorFIFO()
        .size(1)
        .name("x7992")
        .store(bus_824_v, None, None)
      val x8005 = new VectorFIFO()
        .size(1)
        .name("x8005")
        .store(bus_842_v, None, None)
      val x7989 = new VectorFIFO()
        .size(1)
        .name("x7989")
        .store(bus_818_v, None, None)
      val x7990 = new VectorFIFO()
        .size(1)
        .name("x7990")
        .store(bus_820_v, None, None)
      val ctr61 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_43_unit = CounterChain(name = "x8022_43_unit", ctr61).iter(0)
      Stage(operands=List(x7990, x7992, x8005), op=MuxOp, results=List(x8006))
      Stage(operands=List(x7989, Const(0.0), x8006), op=MuxOp, results=List(bus_845_v))
    }
    val x8022_17 = Pipeline(name="x8022_17",parent="x8022") { implicit CU => 
      val x7899 = CU.temp(None).name("x7899")
      val x7900 = CU.temp(None).name("x7900")
      val x7898 = new VectorFIFO()
        .size(1)
        .name("x7898")
        .store(bus_681_v, None, None)
      val ctr35 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_17_unit = CounterChain(name = "x8022_17_unit", ctr35).iter(0)
      Stage(operands=List(x7898, x7898), op=FltMul, results=List(x7899))
      Stage(operands=List(x7899, Const(-0.05)), op=FltMul, results=List(x7900, bus_684_v))
      Stage(operands=List(x7900, Const(-3.5)), op=FltLt, results=List(bus_686_v))
    }
    val x8022_35 = Pipeline(name="x8022_35",parent="x8022") { implicit CU => 
      val x7969 = CU.temp(None).name("x7969")
      val x7968 = new VectorFIFO()
        .size(1)
        .name("x7968")
        .store(bus_789_v, None, None)
      val ctr53 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_35_unit = CounterChain(name = "x8022_35_unit", ctr53).iter(0)
      Stage(operands=List(x7968, x7968), op=FltMul, results=List(x7969, bus_792_v))
      Stage(operands=List(x7969, x7968), op=FltMul, results=List(bus_793_v))
    }
    val x8022_15 = Pipeline(name="x8022_15",parent="x8022") { implicit CU => 
      val x7895 = CU.temp(None).name("x7895")
      val x7894 = CU.temp(None).name("x7894")
      val x7834 = new VectorFIFO()
        .size(1)
        .name("x7834")
        .store(x7575_x7575_dsp0_bank0_data_v, None, None)
      val x7893 = new VectorFIFO()
        .size(1)
        .name("x7893")
        .store(bus_676_v, None, None)
      val x7871 = new VectorFIFO()
        .size(1)
        .name("x7871")
        .store(bus_637_v, None, None)
      val x7856 = new VectorFIFO()
        .size(1)
        .name("x7856")
        .store(bus_612_v, None, None)
      val ctr33 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8022_15_unit = CounterChain(name = "x8022_15_unit", ctr33).iter(0)
      Stage(operands=List(x7856, x7871, x7893), op=MuxOp, results=List(x7894))
      Stage(operands=List(x7834, x7894), op=FltMul, results=List(x7895, bus_678_v))
      Stage(operands=List(x7895, x7895), op=FltMul, results=List(bus_679_v))
    }
    val x8220_4 = Pipeline(name="x8220_4",parent="x8220") { implicit CU => 
      val x8059 = CU.temp(None).name("x8059")
      val x8060 = CU.temp(None).name("x8060")
      val x8056 = CU.temp(None).name("x8056")
      val x8055 = CU.temp(None).name("x8055")
      val x8058 = CU.temp(None).name("x8058")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val ctr69 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_4_unit = CounterChain(name = "x8220_4_unit", ctr69).iter(0)
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8055))
      Stage(operands=List(x8055, Const(2.0)), op=FltDiv, results=List(x8056))
      Stage(operands=List(Const(1.0), x8056), op=FltAdd, results=List(bus_889_v))
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8058))
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8059))
      Stage(operands=List(x8058, x8059), op=FltMul, results=List(x8060))
      Stage(operands=List(x8060, Const(8.0)), op=FltDiv, results=List(bus_896_v))
    }
    val x8220_9 = Pipeline(name="x8220_9",parent="x8220") { implicit CU => 
      val x8077 = CU.temp(None).name("x8077")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val ctr74 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_9_unit = CounterChain(name = "x8220_9_unit", ctr74).iter(0)
      Stage(operands=List(x8034, Const(0.028)), op=FltMul, results=List(x8077))
      Stage(operands=List(x8077, Const(8.0)), op=FltAdd, results=List(bus_926_v))
      Stage(operands=List(x8034, Const(10000.0)), op=FltLt, results=List(bus_928_v))
    }
    val x8220_43 = Pipeline(name="x8220_43",parent="x8220") { implicit CU => 
      val x8204 = CU.temp(None).name("x8204")
      val x8203 = new VectorFIFO()
        .size(1)
        .name("x8203")
        .store(bus_1113_v, None, None)
      val x8187 = new VectorFIFO()
        .size(1)
        .name("x8187")
        .store(bus_1089_v, None, None)
      val x8190 = new VectorFIFO()
        .size(1)
        .name("x8190")
        .store(bus_1095_v, None, None)
      val x8188 = new VectorFIFO()
        .size(1)
        .name("x8188")
        .store(bus_1091_v, None, None)
      val ctr108 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_43_unit = CounterChain(name = "x8220_43_unit", ctr108).iter(0)
      Stage(operands=List(x8188, x8190, x8203), op=MuxOp, results=List(x8204))
      Stage(operands=List(x8187, Const(0.0), x8204), op=MuxOp, results=List(bus_1116_v))
    }
    val x8220_7 = Pipeline(name="x8220_7",parent="x8220") { implicit CU => 
      val x8071 = CU.temp(None).name("x8071")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val ctr72 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_7_unit = CounterChain(name = "x8220_7_unit", ctr72).iter(0)
      Stage(operands=List(x8034, Const(0.22)), op=FltMul, results=List(x8071))
      Stage(operands=List(x8071, Const(1.0)), op=FltAdd, results=List(bus_914_v))
      Stage(operands=List(x8034, Const(100.0)), op=FltLt, results=List(bus_916_v))
    }
    val x8220_13 = Pipeline(name="x8220_13",parent="x8220") { implicit CU => 
      val x8075 = new VectorFIFO()
        .size(1)
        .name("x8075")
        .store(bus_920_v, None, None)
      val x8073 = new VectorFIFO()
        .size(1)
        .name("x8073")
        .store(bus_916_v, None, None)
      val x8089 = new VectorFIFO()
        .size(1)
        .name("x8089")
        .store(bus_945_v, None, None)
      val ctr78 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_13_unit = CounterChain(name = "x8220_13_unit", ctr78).iter(0)
      Stage(operands=List(x8073, x8075, x8089), op=MuxOp, results=List(bus_946_v))
    }
    val x8220_29 = Pipeline(name="x8220_29",parent="x8220") { implicit CU => 
      val x8143 = new VectorFIFO()
        .size(1)
        .name("x8143")
        .store(bus_1023_v, None, None)
      val ctr94 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_29_unit = CounterChain(name = "x8220_29_unit", ctr94).iter(0)
      Stage(operands=List(x8143, Const(-3.5)), op=FltLt, results=List(bus_1025_v))
      Stage(operands=List(x8143, Const(-1.2)), op=FltLt, results=List(bus_1027_v))
    }
    val x8220_14 = Pipeline(name="x8220_14",parent="x8220") { implicit CU => 
      val x8090 = new VectorFIFO()
        .size(1)
        .name("x8090")
        .store(bus_946_v, None, None)
      val x8070 = new VectorFIFO()
        .size(1)
        .name("x8070")
        .store(bus_910_v, None, None)
      val x8072 = new VectorFIFO()
        .size(1)
        .name("x8072")
        .store(bus_914_v, None, None)
      val ctr79 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_14_unit = CounterChain(name = "x8220_14_unit", ctr79).iter(0)
      Stage(operands=List(x8070, x8072, x8090), op=MuxOp, results=List(bus_947_v))
    }
    val x8220_45 = Pipeline(name="x8220_45",parent="x8220") { implicit CU => 
      val x8215 = CU.temp(None).name("x8215")
      val x8208 = CU.temp(None).name("x8208")
      val x8207 = CU.temp(None).name("x8207")
      val x8026 = new VectorFIFO()
        .size(1)
        .name("x8026")
        .store(x7570_x7570_dsp0_bank0_data_v, None, None)
      val x8139 = new VectorFIFO()
        .size(1)
        .name("x8139")
        .store(bus_1017_v, None, None)
      val x8036 = new VectorFIFO()
        .size(1)
        .name("x8036")
        .store(x7568_x7568_dsp0_bank0_data_v, None, None)
      val x8214 = new VectorFIFO()
        .size(1)
        .name("x8214")
        .store(bus_1123_v, None, None)
      val ctr110 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_45_unit = CounterChain(name = "x8220_45_unit", ctr110).iter(0)
      Stage(operands=List(x8139), op=FltNeg, results=List(x8207))
      Stage(operands=List(x8207, Const(1.0)), op=FltAdd, results=List(x8208))
      Stage(operands=List(x8026, x8208), op=FltMul, results=List(x8215))
      Stage(operands=List(x8214, x8215), op=FltSub, results=List(bus_1128_v))
      Stage(operands=List(x8036, Const(0)), op=FixEql, results=List(bus_1129_v))
    }
    val x8220_32 = Pipeline(name="x8220_32",parent="x8220") { implicit CU => 
      val x8158 = CU.temp(None).name("x8158")
      val x8159 = CU.temp(None).name("x8159")
      val x8156 = CU.temp(None).name("x8156")
      val x8157 = CU.temp(None).name("x8157")
      val x8155 = new VectorFIFO()
        .size(1)
        .name("x8155")
        .store(bus_1042_v, None, None)
      val x8143 = new VectorFIFO()
        .size(1)
        .name("x8143")
        .store(bus_1023_v, None, None)
      val x8154 = new VectorFIFO()
        .size(1)
        .name("x8154")
        .store(bus_1041_v, None, None)
      val ctr97 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_32_unit = CounterChain(name = "x8220_32_unit", ctr97).iter(0)
      Stage(operands=List(x8155, Const(24.0)), op=FltDiv, results=List(x8156))
      Stage(operands=List(x8154, x8156), op=FltAdd, results=List(x8157))
      Stage(operands=List(x8155, x8143), op=FltMul, results=List(x8158))
      Stage(operands=List(x8158, Const(120.0)), op=FltDiv, results=List(x8159))
      Stage(operands=List(x8157, x8159), op=FltAdd, results=List(bus_1049_v))
    }
    val x8220_38 = Pipeline(name="x8220_38",parent="x8220") { implicit CU => 
      val x8182 = CU.temp(None).name("x8182")
      val x8179 = CU.temp(None).name("x8179")
      val x8181 = CU.temp(None).name("x8181")
      val x8180 = CU.temp(None).name("x8180")
      val x8183 = CU.temp(None).name("x8183")
      val x8171 = new VectorFIFO()
        .size(1)
        .name("x8171")
        .store(bus_1062_v, None, None)
      val x8140 = new VectorFIFO()
        .size(1)
        .name("x8140")
        .store(bus_1019_v, None, None)
      val x8163 = new VectorFIFO()
        .size(1)
        .name("x8163")
        .store(bus_1054_v, None, None)
      val x8178 = new VectorFIFO()
        .size(1)
        .name("x8178")
        .store(bus_1077_v, None, None)
      val ctr103 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_38_unit = CounterChain(name = "x8220_38_unit", ctr103).iter(0)
      Stage(operands=List(x8178, x8171), op=FltAdd, results=List(x8179))
      Stage(operands=List(x8179, x8163), op=FltMul, results=List(x8180))
      Stage(operands=List(x8180), op=FltNeg, results=List(x8181))
      Stage(operands=List(x8181, Const(1.0)), op=FltAdd, results=List(x8182))
      Stage(operands=List(x8140, Const(0.0)), op=FltLt, results=List(x8183))
      Stage(operands=List(x8183, x8180, x8182), op=MuxOp, results=List(bus_1085_v))
    }
    val x8220_40 = Pipeline(name="x8220_40",parent="x8220") { implicit CU => 
      val x8189 = CU.temp(None).name("x8189")
      val x8186 = new VectorFIFO()
        .size(1)
        .name("x8186")
        .store(bus_1087_v, None, None)
      val ctr105 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_40_unit = CounterChain(name = "x8220_40_unit", ctr105).iter(0)
      Stage(operands=List(x8186, Const(-1.2)), op=FltLt, results=List(bus_1091_v))
      Stage(operands=List(x8186, Const(0.1)), op=FltMul, results=List(x8189))
      Stage(operands=List(x8189, Const(0.35)), op=FltAdd, results=List(bus_1095_v))
    }
    val x8220_35 = Pipeline(name="x8220_35",parent="x8220") { implicit CU => 
      val x8167 = CU.temp(None).name("x8167")
      val x8166 = new VectorFIFO()
        .size(1)
        .name("x8166")
        .store(bus_1060_v, None, None)
      val ctr100 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_35_unit = CounterChain(name = "x8220_35_unit", ctr100).iter(0)
      Stage(operands=List(x8166, x8166), op=FltMul, results=List(x8167, bus_1063_v))
      Stage(operands=List(x8167, x8166), op=FltMul, results=List(bus_1064_v))
    }
    val x8220_23 = Pipeline(name="x8220_23",parent="x8220") { implicit CU => 
      val x8122 = CU.temp(None).name("x8122")
      val x8121 = new VectorFIFO()
        .size(1)
        .name("x8121")
        .store(bus_992_v, None, None)
      val ctr88 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_23_unit = CounterChain(name = "x8220_23_unit", ctr88).iter(0)
      Stage(operands=List(x8121, x8121), op=FltMul, results=List(x8122, bus_995_v))
      Stage(operands=List(x8122, x8121), op=FltMul, results=List(bus_996_v))
    }
    val x8220_42 = Pipeline(name="x8220_42",parent="x8220") { implicit CU => 
      val x8198 = CU.temp(None).name("x8198")
      val x8201 = CU.temp(None).name("x8201")
      val x8200 = CU.temp(None).name("x8200")
      val x8202 = CU.temp(None).name("x8202")
      val x8199 = CU.temp(None).name("x8199")
      val x8197 = new VectorFIFO()
        .size(1)
        .name("x8197")
        .store(bus_1105_v, None, None)
      val x8195 = new VectorFIFO()
        .size(1)
        .name("x8195")
        .store(bus_1102_v, None, None)
      val x8186 = new VectorFIFO()
        .size(1)
        .name("x8186")
        .store(bus_1087_v, None, None)
      val ctr107 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_42_unit = CounterChain(name = "x8220_42_unit", ctr107).iter(0)
      Stage(operands=List(x8195, x8186), op=FltMul, results=List(x8198))
      Stage(operands=List(x8198, Const(24.0)), op=FltDiv, results=List(x8199))
      Stage(operands=List(x8197, x8199), op=FltAdd, results=List(x8200))
      Stage(operands=List(x8198, x8186), op=FltMul, results=List(x8201))
      Stage(operands=List(x8201, Const(120.0)), op=FltDiv, results=List(x8202))
      Stage(operands=List(x8200, x8202), op=FltAdd, results=List(bus_1113_v))
    }
    val x8220_18 = Pipeline(name="x8220_18",parent="x8220") { implicit CU => 
      val x8101 = CU.temp(None).name("x8101")
      val x8098 = new VectorFIFO()
        .size(1)
        .name("x8098")
        .store(bus_955_v, None, None)
      val ctr83 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_18_unit = CounterChain(name = "x8220_18_unit", ctr83).iter(0)
      Stage(operands=List(x8098, Const(-1.2)), op=FltLt, results=List(bus_959_v))
      Stage(operands=List(x8098, Const(0.1)), op=FltMul, results=List(x8101))
      Stage(operands=List(x8101, Const(0.35)), op=FltAdd, results=List(bus_963_v))
    }
    val x8220_27 = Pipeline(name="x8220_27",parent="x8220") { implicit CU => 
      val x8026 = new VectorFIFO()
        .size(1)
        .name("x8026")
        .store(x7570_x7570_dsp0_bank0_data_v, None, None)
      val x8139 = new VectorFIFO()
        .size(1)
        .name("x8139")
        .store(bus_1017_v, None, None)
      val x8093 = new VectorFIFO()
        .size(1)
        .name("x8093")
        .store(bus_949_v, None, None)
      val x8095 = new VectorFIFO()
        .size(1)
        .name("x8095")
        .store(bus_951_v, None, None)
      val ctr92 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_27_unit = CounterChain(name = "x8220_27_unit", ctr92).iter(0)
      Stage(operands=List(x8026, x8139), op=FltMul, results=List(bus_1018_v))
      Stage(operands=List(x8095, x8093), op=FltSub, results=List(bus_1019_v))
    }
    val x8220_30 = Pipeline(name="x8220_30",parent="x8220") { implicit CU => 
      val x8146 = CU.temp(None).name("x8146")
      val x8143 = new VectorFIFO()
        .size(1)
        .name("x8143")
        .store(bus_1023_v, None, None)
      val ctr95 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_30_unit = CounterChain(name = "x8220_30_unit", ctr95).iter(0)
      Stage(operands=List(x8143, Const(0.1)), op=FltMul, results=List(x8146))
      Stage(operands=List(x8146, Const(0.35)), op=FltAdd, results=List(bus_1031_v))
      Stage(operands=List(Const(1.0), x8143), op=FltAdd, results=List(bus_1033_v))
    }
    val x8220_33 = Pipeline(name="x8220_33",parent="x8220") { implicit CU => 
      val x8162 = CU.temp(None).name("x8162")
      val x8161 = CU.temp(None).name("x8161")
      val x8160 = new VectorFIFO()
        .size(1)
        .name("x8160")
        .store(bus_1049_v, None, None)
      val x8144 = new VectorFIFO()
        .size(1)
        .name("x8144")
        .store(bus_1025_v, None, None)
      val x8147 = new VectorFIFO()
        .size(1)
        .name("x8147")
        .store(bus_1031_v, None, None)
      val x8145 = new VectorFIFO()
        .size(1)
        .name("x8145")
        .store(bus_1027_v, None, None)
      val ctr98 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_33_unit = CounterChain(name = "x8220_33_unit", ctr98).iter(0)
      Stage(operands=List(x8145, x8147, x8160), op=MuxOp, results=List(x8161))
      Stage(operands=List(x8144, Const(0.0), x8161), op=MuxOp, results=List(x8162))
      Stage(operands=List(x8162, Const(0.3989423)), op=FltMul, results=List(bus_1054_v))
    }
    val x8220_17 = Pipeline(name="x8220_17",parent="x8220") { implicit CU => 
      val x8097 = CU.temp(None).name("x8097")
      val x8098 = CU.temp(None).name("x8098")
      val x8096 = new VectorFIFO()
        .size(1)
        .name("x8096")
        .store(bus_952_v, None, None)
      val ctr82 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_17_unit = CounterChain(name = "x8220_17_unit", ctr82).iter(0)
      Stage(operands=List(x8096, x8096), op=FltMul, results=List(x8097))
      Stage(operands=List(x8097, Const(-0.05)), op=FltMul, results=List(x8098, bus_955_v))
      Stage(operands=List(x8098, Const(-3.5)), op=FltLt, results=List(bus_957_v))
    }
    val x8220_21 = Pipeline(name="x8220_21",parent="x8220") { implicit CU => 
      val x8117 = CU.temp(None).name("x8117")
      val x8116 = CU.temp(None).name("x8116")
      val x8099 = new VectorFIFO()
        .size(1)
        .name("x8099")
        .store(bus_957_v, None, None)
      val x8100 = new VectorFIFO()
        .size(1)
        .name("x8100")
        .store(bus_959_v, None, None)
      val x8102 = new VectorFIFO()
        .size(1)
        .name("x8102")
        .store(bus_963_v, None, None)
      val x8115 = new VectorFIFO()
        .size(1)
        .name("x8115")
        .store(bus_981_v, None, None)
      val ctr86 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_21_unit = CounterChain(name = "x8220_21_unit", ctr86).iter(0)
      Stage(operands=List(x8100, x8102, x8115), op=MuxOp, results=List(x8116))
      Stage(operands=List(x8099, Const(0.0), x8116), op=MuxOp, results=List(x8117))
      Stage(operands=List(x8117, Const(0.3989423)), op=FltMul, results=List(bus_986_v))
    }
    val x8220_6 = Pipeline(name="x8220_6",parent="x8220") { implicit CU => 
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val x8068 = new VectorFIFO()
        .size(1)
        .name("x8068")
        .store(bus_907_v, None, None)
      val x8062 = new VectorFIFO()
        .size(1)
        .name("x8062")
        .store(bus_897_v, None, None)
      val ctr71 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_6_unit = CounterChain(name = "x8220_6_unit", ctr71).iter(0)
      Stage(operands=List(x8062, x8068), op=FltAdd, results=List(bus_908_v))
      Stage(operands=List(x8034, Const(10.0)), op=FltLt, results=List(bus_910_v))
    }
    val x8220_15 = Pipeline(name="x8220_15",parent="x8220") { implicit CU => 
      val x8092 = CU.temp(None).name("x8092")
      val x8093 = CU.temp(None).name("x8093")
      val x8091 = new VectorFIFO()
        .size(1)
        .name("x8091")
        .store(bus_947_v, None, None)
      val x8032 = new VectorFIFO()
        .size(1)
        .name("x8032")
        .store(x7576_x7576_dsp0_bank0_data_v, None, None)
      val x8069 = new VectorFIFO()
        .size(1)
        .name("x8069")
        .store(bus_908_v, None, None)
      val x8054 = new VectorFIFO()
        .size(1)
        .name("x8054")
        .store(bus_883_v, None, None)
      val ctr80 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_15_unit = CounterChain(name = "x8220_15_unit", ctr80).iter(0)
      Stage(operands=List(x8054, x8069, x8091), op=MuxOp, results=List(x8092))
      Stage(operands=List(x8032, x8092), op=FltMul, results=List(x8093, bus_949_v))
      Stage(operands=List(x8093, x8093), op=FltMul, results=List(bus_950_v))
    }
    val x8220_19 = Pipeline(name="x8220_19",parent="x8220") { implicit CU => 
      val x8106 = CU.temp(None).name("x8106")
      val x8105 = CU.temp(None).name("x8105")
      val x8104 = CU.temp(None).name("x8104")
      val x8107 = CU.temp(None).name("x8107")
      val x8103 = CU.temp(None).name("x8103")
      val x8108 = CU.temp(None).name("x8108")
      val x8098 = new VectorFIFO()
        .size(1)
        .name("x8098")
        .store(bus_955_v, None, None)
      val ctr84 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_19_unit = CounterChain(name = "x8220_19_unit", ctr84).iter(0)
      Stage(operands=List(Const(1.0), x8098), op=FltAdd, results=List(x8103))
      Stage(operands=List(x8098, x8098), op=FltMul, results=List(x8104))
      Stage(operands=List(x8104, Const(2.0)), op=FltDiv, results=List(x8105))
      Stage(operands=List(x8103, x8105), op=FltAdd, results=List(x8106))
      Stage(operands=List(x8104, x8098), op=FltMul, results=List(x8107, bus_970_v))
      Stage(operands=List(x8107, Const(6.0)), op=FltDiv, results=List(x8108))
      Stage(operands=List(x8106, x8108), op=FltAdd, results=List(bus_973_v))
    }
    val x8220_44 = Pipeline(name="x8220_44",parent="x8220") { implicit CU => 
      val x8212 = CU.temp(None).name("x8212")
      val x8210 = CU.temp(None).name("x8210")
      val x8209 = CU.temp(None).name("x8209")
      val x8206 = CU.temp(None).name("x8206")
      val x8205 = new VectorFIFO()
        .size(1)
        .name("x8205")
        .store(bus_1116_v, None, None)
      val x8211 = new VectorFIFO()
        .size(1)
        .name("x8211")
        .store(bus_1018_v, None, None)
      val x8184 = new VectorFIFO()
        .size(1)
        .name("x8184")
        .store(bus_1085_v, None, None)
      val x8028 = new VectorFIFO()
        .size(1)
        .name("x8028")
        .store(x7572_x7572_dsp0_bank0_data_v, None, None)
      val ctr109 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_44_unit = CounterChain(name = "x8220_44_unit", ctr109).iter(0)
      Stage(operands=List(x8028, x8205), op=FltMul, results=List(x8206))
      Stage(operands=List(x8206, x8184), op=FltMul, results=List(x8212))
      Stage(operands=List(x8211, x8212), op=FltSub, results=List(bus_1119_v))
      Stage(operands=List(x8184), op=FltNeg, results=List(x8209))
      Stage(operands=List(x8209, Const(1.0)), op=FltAdd, results=List(x8210))
      Stage(operands=List(x8206, x8210), op=FltMul, results=List(bus_1123_v))
    }
    val x8220_10 = Pipeline(name="x8220_10",parent="x8220") { implicit CU => 
      val x8080 = CU.temp(None).name("x8080")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val ctr75 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_10_unit = CounterChain(name = "x8220_10_unit", ctr75).iter(0)
      Stage(operands=List(x8034, Const(0.008)), op=FltMul, results=List(x8080))
      Stage(operands=List(x8080, Const(20.0)), op=FltAdd, results=List(bus_932_v))
      Stage(operands=List(x8034, Const(100000.0)), op=FltLt, results=List(bus_934_v))
    }
    val x8220_12 = Pipeline(name="x8220_12",parent="x8220") { implicit CU => 
      val x8078 = new VectorFIFO()
        .size(1)
        .name("x8078")
        .store(bus_926_v, None, None)
      val x8088 = new VectorFIFO()
        .size(1)
        .name("x8088")
        .store(bus_944_v, None, None)
      val x8076 = new VectorFIFO()
        .size(1)
        .name("x8076")
        .store(bus_922_v, None, None)
      val ctr77 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_12_unit = CounterChain(name = "x8220_12_unit", ctr77).iter(0)
      Stage(operands=List(x8076, x8078, x8088), op=MuxOp, results=List(bus_945_v))
    }
    val x8220_0 = Pipeline(name="x8220_0",parent="x8220") { implicit CU => 
      val x8038 = CU.temp(None).name("x8038")
      val x8039 = CU.temp(None).name("x8039")
      val x8026 = new VectorFIFO()
        .size(1)
        .name("x8026")
        .store(x7570_x7570_dsp0_bank0_data_v, None, None)
      val x8028 = new VectorFIFO()
        .size(1)
        .name("x8028")
        .store(x7572_x7572_dsp0_bank0_data_v, None, None)
      val ctr65 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_0_unit = CounterChain(name = "x8220_0_unit", ctr65).iter(0)
      Stage(operands=List(x8026, x8028), op=FltDiv, results=List(x8038))
      Stage(operands=List(x8038, Const(1.0)), op=FltSub, results=List(x8039, bus_863_v))
      Stage(operands=List(x8039, x8039), op=FltMul, results=List(bus_864_v))
    }
    val x8220_5 = Pipeline(name="x8220_5",parent="x8220") { implicit CU => 
      val x8064 = CU.temp(None).name("x8064")
      val x8067 = CU.temp(None).name("x8067")
      val x8066 = CU.temp(None).name("x8066")
      val x8065 = CU.temp(None).name("x8065")
      val x8063 = CU.temp(None).name("x8063")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val x8057 = new VectorFIFO()
        .size(1)
        .name("x8057")
        .store(bus_889_v, None, None)
      val x8061 = new VectorFIFO()
        .size(1)
        .name("x8061")
        .store(bus_896_v, None, None)
      val ctr70 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_5_unit = CounterChain(name = "x8220_5_unit", ctr70).iter(0)
      Stage(operands=List(x8057, x8061), op=FltSub, results=List(bus_897_v))
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8063))
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8064))
      Stage(operands=List(x8063, x8064), op=FltMul, results=List(x8065))
      Stage(operands=List(x8034, Const(1.0)), op=FltSub, results=List(x8066))
      Stage(operands=List(x8065, x8066), op=FltMul, results=List(x8067))
      Stage(operands=List(x8067, Const(16.0)), op=FltDiv, results=List(bus_907_v))
    }
    val x8220_16 = Pipeline(name="x8220_16",parent="x8220") { implicit CU => 
      val x8095 = CU.temp(None).name("x8095")
      val x8094 = new VectorFIFO()
        .size(1)
        .name("x8094")
        .store(bus_950_v, None, None)
      val x8053 = new VectorFIFO()
        .size(1)
        .name("x8053")
        .store(bus_881_v, None, None)
      val ctr81 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_16_unit = CounterChain(name = "x8220_16_unit", ctr81).iter(0)
      Stage(operands=List(x8053, x8094), op=FltDiv, results=List(x8095, bus_951_v))
      Stage(operands=List(x8095), op=FltAbs, results=List(bus_952_v))
    }
    val x8220_41 = Pipeline(name="x8220_41",parent="x8220") { implicit CU => 
      val x8195 = CU.temp(None).name("x8195")
      val x8192 = CU.temp(None).name("x8192")
      val x8191 = CU.temp(None).name("x8191")
      val x8194 = CU.temp(None).name("x8194")
      val x8193 = CU.temp(None).name("x8193")
      val x8196 = CU.temp(None).name("x8196")
      val x8186 = new VectorFIFO()
        .size(1)
        .name("x8186")
        .store(bus_1087_v, None, None)
      val ctr106 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_41_unit = CounterChain(name = "x8220_41_unit", ctr106).iter(0)
      Stage(operands=List(Const(1.0), x8186), op=FltAdd, results=List(x8191))
      Stage(operands=List(x8186, x8186), op=FltMul, results=List(x8192))
      Stage(operands=List(x8192, Const(2.0)), op=FltDiv, results=List(x8193))
      Stage(operands=List(x8191, x8193), op=FltAdd, results=List(x8194))
      Stage(operands=List(x8192, x8186), op=FltMul, results=List(x8195, bus_1102_v))
      Stage(operands=List(x8195, Const(6.0)), op=FltDiv, results=List(x8196))
      Stage(operands=List(x8194, x8196), op=FltAdd, results=List(bus_1105_v))
    }
    val x8220_37 = Pipeline(name="x8220_37",parent="x8220") { implicit CU => 
      val x8176 = CU.temp(None).name("x8176")
      val x8173 = CU.temp(None).name("x8173")
      val x8177 = CU.temp(None).name("x8177")
      val x8172 = CU.temp(None).name("x8172")
      val x8175 = new VectorFIFO()
        .size(1)
        .name("x8175")
        .store(bus_1068_v, None, None)
      val x8174 = new VectorFIFO()
        .size(1)
        .name("x8174")
        .store(bus_1070_v, None, None)
      val x8168 = new VectorFIFO()
        .size(1)
        .name("x8168")
        .store(bus_1064_v, None, None)
      val x8167 = new VectorFIFO()
        .size(1)
        .name("x8167")
        .store(bus_1063_v, None, None)
      val ctr102 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_37_unit = CounterChain(name = "x8220_37_unit", ctr102).iter(0)
      Stage(operands=List(x8167, Const(-0.35656378)), op=FltMul, results=List(x8172))
      Stage(operands=List(x8168, Const(1.7814779)), op=FltMul, results=List(x8173))
      Stage(operands=List(x8172, x8173), op=FltAdd, results=List(x8176))
      Stage(operands=List(x8176, x8174), op=FltAdd, results=List(x8177))
      Stage(operands=List(x8177, x8175), op=FltAdd, results=List(bus_1077_v))
    }
    val x8220_2 = Pipeline(name="x8220_2",parent="x8220") { implicit CU => 
      val x8049 = CU.temp(None).name("x8049")
      val x8050 = CU.temp(None).name("x8050")
      val x8047 = new VectorFIFO()
        .size(1)
        .name("x8047")
        .store(bus_874_v, None, None)
      val x8032 = new VectorFIFO()
        .size(1)
        .name("x8032")
        .store(x7576_x7576_dsp0_bank0_data_v, None, None)
      val x8045 = new VectorFIFO()
        .size(1)
        .name("x8045")
        .store(bus_871_v, None, None)
      val x8030 = new VectorFIFO()
        .size(1)
        .name("x8030")
        .store(x7574_x7574_dsp0_bank0_data_v, None, None)
      val ctr67 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_2_unit = CounterChain(name = "x8220_2_unit", ctr67).iter(0)
      Stage(operands=List(x8045, x8047), op=FltSub, results=List(bus_875_v))
      Stage(operands=List(x8032, x8032), op=FltMul, results=List(x8049))
      Stage(operands=List(x8049, Const(0.5)), op=FltMul, results=List(x8050))
      Stage(operands=List(x8030, x8050), op=FltAdd, results=List(bus_879_v))
    }
    val x8220_8 = Pipeline(name="x8220_8",parent="x8220") { implicit CU => 
      val x8074 = CU.temp(None).name("x8074")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val ctr73 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_8_unit = CounterChain(name = "x8220_8_unit", ctr73).iter(0)
      Stage(operands=List(x8034, Const(0.08)), op=FltMul, results=List(x8074))
      Stage(operands=List(x8074, Const(2.5)), op=FltAdd, results=List(bus_920_v))
      Stage(operands=List(x8034, Const(1000.0)), op=FltLt, results=List(bus_922_v))
    }
    val x8220_28 = Pipeline(name="x8220_28",parent="x8220") { implicit CU => 
      val x8141 = CU.temp(None).name("x8141")
      val x8142 = CU.temp(None).name("x8142")
      val x8140 = new VectorFIFO()
        .size(1)
        .name("x8140")
        .store(bus_1019_v, None, None)
      val ctr93 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_28_unit = CounterChain(name = "x8220_28_unit", ctr93).iter(0)
      Stage(operands=List(x8140), op=FltAbs, results=List(x8141, bus_1020_v))
      Stage(operands=List(x8141, x8141), op=FltMul, results=List(x8142))
      Stage(operands=List(x8142, Const(-0.05)), op=FltMul, results=List(bus_1023_v))
    }
    val x8220_31 = Pipeline(name="x8220_31",parent="x8220") { implicit CU => 
      val x8151 = CU.temp(None).name("x8151")
      val x8152 = CU.temp(None).name("x8152")
      val x8150 = CU.temp(None).name("x8150")
      val x8149 = CU.temp(None).name("x8149")
      val x8153 = CU.temp(None).name("x8153")
      val x8148 = new VectorFIFO()
        .size(1)
        .name("x8148")
        .store(bus_1033_v, None, None)
      val x8143 = new VectorFIFO()
        .size(1)
        .name("x8143")
        .store(bus_1023_v, None, None)
      val ctr96 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_31_unit = CounterChain(name = "x8220_31_unit", ctr96).iter(0)
      Stage(operands=List(x8143, x8143), op=FltMul, results=List(x8149))
      Stage(operands=List(x8149, Const(2.0)), op=FltDiv, results=List(x8150))
      Stage(operands=List(x8148, x8150), op=FltAdd, results=List(x8151))
      Stage(operands=List(x8149, x8143), op=FltMul, results=List(x8152))
      Stage(operands=List(x8152, Const(6.0)), op=FltDiv, results=List(x8153))
      Stage(operands=List(x8151, x8153), op=FltAdd, results=List(bus_1041_v))
      Stage(operands=List(x8152, x8143), op=FltMul, results=List(bus_1042_v))
    }
    val x8220_46 = Pipeline(name="x8220_46",parent="x8220") { implicit CU => 
      val x8217 = new VectorFIFO()
        .size(1)
        .name("x8217")
        .store(bus_1129_v, None, None)
      val x8216 = new VectorFIFO()
        .size(1)
        .name("x8216")
        .store(bus_1128_v, None, None)
      val x8213 = new VectorFIFO()
        .size(1)
        .name("x8213")
        .store(bus_1119_v, None, None)
      val ctr111 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_46_unit = CounterChain(name = "x8220_46_unit", ctr111).iter(0)
      Stage(operands=List(x8217, x8216, x8213), op=MuxOp, results=List(x7580_x8219_data_v))
    }
    val x8220_20 = Pipeline(name="x8220_20",parent="x8220") { implicit CU => 
      val x8110 = CU.temp(None).name("x8110")
      val x8114 = CU.temp(None).name("x8114")
      val x8112 = CU.temp(None).name("x8112")
      val x8113 = CU.temp(None).name("x8113")
      val x8111 = CU.temp(None).name("x8111")
      val x8098 = new VectorFIFO()
        .size(1)
        .name("x8098")
        .store(bus_955_v, None, None)
      val x8107 = new VectorFIFO()
        .size(1)
        .name("x8107")
        .store(bus_970_v, None, None)
      val x8109 = new VectorFIFO()
        .size(1)
        .name("x8109")
        .store(bus_973_v, None, None)
      val ctr85 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_20_unit = CounterChain(name = "x8220_20_unit", ctr85).iter(0)
      Stage(operands=List(x8107, x8098), op=FltMul, results=List(x8110))
      Stage(operands=List(x8110, Const(24.0)), op=FltDiv, results=List(x8111))
      Stage(operands=List(x8109, x8111), op=FltAdd, results=List(x8112))
      Stage(operands=List(x8110, x8098), op=FltMul, results=List(x8113))
      Stage(operands=List(x8113, Const(120.0)), op=FltDiv, results=List(x8114))
      Stage(operands=List(x8112, x8114), op=FltAdd, results=List(bus_981_v))
    }
    val x8220_24 = Pipeline(name="x8220_24",parent="x8220") { implicit CU => 
      val x8124 = CU.temp(None).name("x8124")
      val x8125 = CU.temp(None).name("x8125")
      val x8123 = new VectorFIFO()
        .size(1)
        .name("x8123")
        .store(bus_996_v, None, None)
      val x8121 = new VectorFIFO()
        .size(1)
        .name("x8121")
        .store(bus_992_v, None, None)
      val ctr89 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_24_unit = CounterChain(name = "x8220_24_unit", ctr89).iter(0)
      Stage(operands=List(x8123, x8121), op=FltMul, results=List(x8124))
      Stage(operands=List(x8124, x8121), op=FltMul, results=List(x8125))
      Stage(operands=List(x8125, Const(1.3302745)), op=FltMul, results=List(bus_1000_v))
      Stage(operands=List(x8124, Const(-1.8212559)), op=FltMul, results=List(bus_1002_v))
    }
    val x8220_3 = Pipeline(name="x8220_3",parent="x8220") { implicit CU => 
      val x8052 = CU.temp(None).name("x8052")
      val x8048 = new VectorFIFO()
        .size(1)
        .name("x8048")
        .store(bus_875_v, None, None)
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val x8051 = new VectorFIFO()
        .size(1)
        .name("x8051")
        .store(bus_879_v, None, None)
      val ctr68 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_3_unit = CounterChain(name = "x8220_3_unit", ctr68).iter(0)
      Stage(operands=List(x8051, x8034), op=FltMul, results=List(x8052))
      Stage(operands=List(x8052, x8048), op=FltAdd, results=List(bus_881_v))
      Stage(operands=List(x8034, Const(2.0)), op=FltLt, results=List(bus_883_v))
    }
    val x8220_22 = Pipeline(name="x8220_22",parent="x8220") { implicit CU => 
      val x8121 = CU.temp(None).name("x8121")
      val x8120 = CU.temp(None).name("x8120")
      val x8119 = CU.temp(None).name("x8119")
      val x8096 = new VectorFIFO()
        .size(1)
        .name("x8096")
        .store(bus_952_v, None, None)
      val ctr87 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_22_unit = CounterChain(name = "x8220_22_unit", ctr87).iter(0)
      Stage(operands=List(x8096, Const(0.2316419)), op=FltMul, results=List(x8119))
      Stage(operands=List(x8119, Const(1.0)), op=FltAdd, results=List(x8120))
      Stage(operands=List(Const(1.0), x8120), op=FltDiv, results=List(x8121, bus_992_v))
      Stage(operands=List(x8121, Const(0.31938154)), op=FltMul, results=List(bus_994_v))
    }
    val x8220_25 = Pipeline(name="x8220_25",parent="x8220") { implicit CU => 
      val x8128 = CU.temp(None).name("x8128")
      val x8127 = CU.temp(None).name("x8127")
      val x8132 = CU.temp(None).name("x8132")
      val x8131 = CU.temp(None).name("x8131")
      val x8130 = new VectorFIFO()
        .size(1)
        .name("x8130")
        .store(bus_1000_v, None, None)
      val x8129 = new VectorFIFO()
        .size(1)
        .name("x8129")
        .store(bus_1002_v, None, None)
      val x8123 = new VectorFIFO()
        .size(1)
        .name("x8123")
        .store(bus_996_v, None, None)
      val x8122 = new VectorFIFO()
        .size(1)
        .name("x8122")
        .store(bus_995_v, None, None)
      val ctr90 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_25_unit = CounterChain(name = "x8220_25_unit", ctr90).iter(0)
      Stage(operands=List(x8122, Const(-0.35656378)), op=FltMul, results=List(x8127))
      Stage(operands=List(x8123, Const(1.7814779)), op=FltMul, results=List(x8128))
      Stage(operands=List(x8127, x8128), op=FltAdd, results=List(x8131))
      Stage(operands=List(x8131, x8129), op=FltAdd, results=List(x8132))
      Stage(operands=List(x8132, x8130), op=FltAdd, results=List(bus_1009_v))
    }
    val x8220_36 = Pipeline(name="x8220_36",parent="x8220") { implicit CU => 
      val x8170 = CU.temp(None).name("x8170")
      val x8169 = CU.temp(None).name("x8169")
      val x8166 = new VectorFIFO()
        .size(1)
        .name("x8166")
        .store(bus_1060_v, None, None)
      val x8168 = new VectorFIFO()
        .size(1)
        .name("x8168")
        .store(bus_1064_v, None, None)
      val ctr101 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_36_unit = CounterChain(name = "x8220_36_unit", ctr101).iter(0)
      Stage(operands=List(x8168, x8166), op=FltMul, results=List(x8169))
      Stage(operands=List(x8169, x8166), op=FltMul, results=List(x8170))
      Stage(operands=List(x8170, Const(1.3302745)), op=FltMul, results=List(bus_1068_v))
      Stage(operands=List(x8169, Const(-1.8212559)), op=FltMul, results=List(bus_1070_v))
    }
    val x8220_11 = Pipeline(name="x8220_11",parent="x8220") { implicit CU => 
      val x8085 = CU.temp(None).name("x8085")
      val x8084 = CU.temp(None).name("x8084")
      val x8087 = CU.temp(None).name("x8087")
      val x8086 = CU.temp(None).name("x8086")
      val x8083 = CU.temp(None).name("x8083")
      val x8081 = new VectorFIFO()
        .size(1)
        .name("x8081")
        .store(bus_932_v, None, None)
      val x8079 = new VectorFIFO()
        .size(1)
        .name("x8079")
        .store(bus_928_v, None, None)
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val x8082 = new VectorFIFO()
        .size(1)
        .name("x8082")
        .store(bus_934_v, None, None)
      val ctr76 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_11_unit = CounterChain(name = "x8220_11_unit", ctr76).iter(0)
      Stage(operands=List(x8034, Const(0.003)), op=FltMul, results=List(x8083))
      Stage(operands=List(x8083, Const(60.0)), op=FltAdd, results=List(x8084))
      Stage(operands=List(x8034, Const(2.0E-4)), op=FltMul, results=List(x8085))
      Stage(operands=List(x8085, Const(300.0)), op=FltAdd, results=List(x8086))
      Stage(operands=List(x8082, x8084, x8086), op=MuxOp, results=List(x8087))
      Stage(operands=List(x8079, x8081, x8087), op=MuxOp, results=List(bus_944_v))
    }
    val x8220_26 = Pipeline(name="x8220_26",parent="x8220") { implicit CU => 
      val x8137 = CU.temp(None).name("x8137")
      val x8134 = CU.temp(None).name("x8134")
      val x8135 = CU.temp(None).name("x8135")
      val x8138 = CU.temp(None).name("x8138")
      val x8136 = CU.temp(None).name("x8136")
      val x8126 = new VectorFIFO()
        .size(1)
        .name("x8126")
        .store(bus_994_v, None, None)
      val x8095 = new VectorFIFO()
        .size(1)
        .name("x8095")
        .store(bus_951_v, None, None)
      val x8118 = new VectorFIFO()
        .size(1)
        .name("x8118")
        .store(bus_986_v, None, None)
      val x8133 = new VectorFIFO()
        .size(1)
        .name("x8133")
        .store(bus_1009_v, None, None)
      val ctr91 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_26_unit = CounterChain(name = "x8220_26_unit", ctr91).iter(0)
      Stage(operands=List(x8133, x8126), op=FltAdd, results=List(x8134))
      Stage(operands=List(x8134, x8118), op=FltMul, results=List(x8135))
      Stage(operands=List(x8135), op=FltNeg, results=List(x8136))
      Stage(operands=List(x8136, Const(1.0)), op=FltAdd, results=List(x8137))
      Stage(operands=List(x8095, Const(0.0)), op=FltLt, results=List(x8138))
      Stage(operands=List(x8138, x8135, x8137), op=MuxOp, results=List(bus_1017_v))
    }
    val x8220_1 = Pipeline(name="x8220_1",parent="x8220") { implicit CU => 
      val x8044 = CU.temp(None).name("x8044")
      val x8041 = CU.temp(None).name("x8041")
      val x8046 = CU.temp(None).name("x8046")
      val x8043 = CU.temp(None).name("x8043")
      val x8042 = CU.temp(None).name("x8042")
      val x8040 = new VectorFIFO()
        .size(1)
        .name("x8040")
        .store(bus_864_v, None, None)
      val x8039 = new VectorFIFO()
        .size(1)
        .name("x8039")
        .store(bus_863_v, None, None)
      val ctr66 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_1_unit = CounterChain(name = "x8220_1_unit", ctr66).iter(0)
      Stage(operands=List(x8040, Const(2.0)), op=FltDiv, results=List(x8041))
      Stage(operands=List(x8039, x8041), op=FltSub, results=List(x8042))
      Stage(operands=List(x8040, x8039), op=FltMul, results=List(x8043))
      Stage(operands=List(x8043, Const(3.0)), op=FltDiv, results=List(x8044))
      Stage(operands=List(x8042, x8044), op=FltAdd, results=List(bus_871_v))
      Stage(operands=List(x8043, x8039), op=FltMul, results=List(x8046))
      Stage(operands=List(x8046, Const(4.0)), op=FltDiv, results=List(bus_874_v))
    }
    val x8220_39 = Pipeline(name="x8220_39",parent="x8220") { implicit CU => 
      val x8186 = CU.temp(None).name("x8186")
      val x8185 = CU.temp(None).name("x8185")
      val x8034 = new VectorFIFO()
        .size(1)
        .name("x8034")
        .store(x7578_x7578_dsp0_bank0_data_v, None, None)
      val x8030 = new VectorFIFO()
        .size(1)
        .name("x8030")
        .store(x7574_x7574_dsp0_bank0_data_v, None, None)
      val ctr104 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_39_unit = CounterChain(name = "x8220_39_unit", ctr104).iter(0)
      Stage(operands=List(x8030), op=FltNeg, results=List(x8185))
      Stage(operands=List(x8185, x8034), op=FltMul, results=List(x8186, bus_1087_v))
      Stage(operands=List(x8186, Const(-3.5)), op=FltLt, results=List(bus_1089_v))
    }
    val x8220_34 = Pipeline(name="x8220_34",parent="x8220") { implicit CU => 
      val x8164 = CU.temp(None).name("x8164")
      val x8166 = CU.temp(None).name("x8166")
      val x8165 = CU.temp(None).name("x8165")
      val x8141 = new VectorFIFO()
        .size(1)
        .name("x8141")
        .store(bus_1020_v, None, None)
      val ctr99 = Counter(min=Const(0), max=Const(1), step=Const(16), par=16) // Counter
      val x8220_34_unit = CounterChain(name = "x8220_34_unit", ctr99).iter(0)
      Stage(operands=List(x8141, Const(0.2316419)), op=FltMul, results=List(x8164))
      Stage(operands=List(x8164, Const(1.0)), op=FltAdd, results=List(x8165))
      Stage(operands=List(Const(1.0), x8165), op=FltDiv, results=List(x8166, bus_1060_v))
      Stage(operands=List(x8166, Const(0.31938154)), op=FltMul, results=List(bus_1062_v))
    }
    val x8220 = StreamController(name="x8220",parent="x8273") { implicit CU => 
      val ctr15 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x8024 = CounterChain(name = "x8024", ctr15).iter(125)
    }
    val x8248 = StreamController(name="x8248",parent="x8273") { implicit CU => 
      val x8248_unit = CounterChain(name = "x8248_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x8236_0 = Pipeline(name="x8236_0",parent="x8248") { implicit CU => 
      val x8229 = CU.temp(None).name("x8229")
      val x8231 = new ScalarBuffer()
        .name("x8231")
        .buffering(1)
        .store(optprice_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 0)
      val x8236_unit = CounterChain(name = "x8236_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x8229))
      Stage(operands=List(x8229, x8231), op=FixAdd, results=List(x8225_b8369_x8235_b8373_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x8225_b8370_x8235_b8374_s))
    }
    val x8244 = Pipeline(name="x8244",parent="x8248") { implicit CU => 
      val ctr16 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x8238 = CounterChain(name = "x8238", ctr16).iter(125)
    }
    val x8245 = MemoryController(name="x8245",parent="x8248",offchip=optprice_oc, mctpe=TileStore) { implicit CU => 
      val x8225_b8370 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x8225_b8370_x8235_b8374_s, None, None)
      val x8225_b8369 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x8225_b8369_x8235_b8373_s, None, None)
      val x8226_b8371 = new VectorFIFO()
        .size(1)
        .name("data")
        .store(x7579_x7579_dsp0_bank0_data_v, None, None)
    }
    val x8272 = StreamController(name="x8272",parent="x8273") { implicit CU => 
      val x8272_unit = CounterChain(name = "x8272_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x8260_0 = Pipeline(name="x8260_0",parent="x8272") { implicit CU => 
      val x8253 = CU.temp(None).name("x8253")
      val x8255 = new ScalarBuffer()
        .name("x8255")
        .buffering(1)
        .store(optprice_da, None, None)
      val x7566 = CounterChain.copy("x8273", "x7566").iterIdx(0, 1)
      val x8260_unit = CounterChain(name = "x8260_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(x7566(0), Const(2)), op=FixSla, results=List(x8253))
      Stage(operands=List(x8253, x8255), op=FixAdd, results=List(x8249_b8377_x8259_b8381_s))
      Stage(operands=List(Const(8000)), op=Bypass, results=List(x8249_b8378_x8259_b8382_s))
    }
    val x8268 = Pipeline(name="x8268",parent="x8272") { implicit CU => 
      val ctr17 = Counter(min=Const(0), max=Const(2000), step=Const(1), par=16) // Counter
      val x8262 = CounterChain(name = "x8262", ctr17).iter(125)
    }
    val x8269 = MemoryController(name="x8269",parent="x8272",offchip=optprice_oc, mctpe=TileStore) { implicit CU => 
      val x8250_b8379 = new VectorFIFO()
        .size(1)
        .name("data")
        .store(x7580_x7580_dsp0_bank0_data_v, None, None)
      val x8249_b8378 = new ScalarFIFO()
        .size(1)
        .name("size")
        .store(x8249_b8378_x8259_b8382_s, None, None)
      val x8249_b8377 = new ScalarFIFO()
        .size(1)
        .name("offset")
        .store(x8249_b8377_x8259_b8381_s, None, None)
    }
    
  }
}
