import pir._
import pir.node._
import arch._
import prism.enums._

object BlackScholes extends PIRApp {
  def main(implicit design:PIRDesign) = {
    import design.pirmeta._
    val x5409 = ArgIn(init=0).name("x5409").ctrl(top).srcCtx("BlackScholes.scala:78:21:size") // ArgInNew(Const(0))
    isAccum(x5409) = false
    bufferDepthOf(x5409) = 1
    boundOf(x5409) = 1024
    val x5412 = ReadMem(x5409).name("x5412").ctrl(top).srcCtx("BlackScholes.scala:81:30") // RegRead(x5409)
    val x5413 = DRAM(dims=List(x5412)).name("x5413").ctrl(top).srcCtx("BlackScholes.scala:81:29:types") // x5413 = DRAMNew(ArrayBuffer(x5412),Const(0))
    val x5414 = ReadMem(x5409).name("x5414").ctrl(top).srcCtx("BlackScholes.scala:82:32") // RegRead(x5409)
    val x5415 = DRAM(dims=List(x5414)).name("x5415").ctrl(top).srcCtx("BlackScholes.scala:82:31:prices") // x5415 = DRAMNew(ArrayBuffer(x5414),Const(0.0))
    val x5416 = ReadMem(x5409).name("x5416").ctrl(top).srcCtx("BlackScholes.scala:83:32") // RegRead(x5409)
    val x5417 = DRAM(dims=List(x5416)).name("x5417").ctrl(top).srcCtx("BlackScholes.scala:83:31:strike") // x5417 = DRAMNew(ArrayBuffer(x5416),Const(0.0))
    val x5418 = ReadMem(x5409).name("x5418").ctrl(top).srcCtx("BlackScholes.scala:84:32") // RegRead(x5409)
    val x5419 = DRAM(dims=List(x5418)).name("x5419").ctrl(top).srcCtx("BlackScholes.scala:84:31:rate") // x5419 = DRAMNew(ArrayBuffer(x5418),Const(0.0))
    val x5420 = ReadMem(x5409).name("x5420").ctrl(top).srcCtx("BlackScholes.scala:85:32") // RegRead(x5409)
    val x5421 = DRAM(dims=List(x5420)).name("x5421").ctrl(top).srcCtx("BlackScholes.scala:85:31:vol") // x5421 = DRAMNew(ArrayBuffer(x5420),Const(0.0))
    val x5422 = ReadMem(x5409).name("x5422").ctrl(top).srcCtx("BlackScholes.scala:86:32") // RegRead(x5409)
    val x5423 = DRAM(dims=List(x5422)).name("x5423").ctrl(top).srcCtx("BlackScholes.scala:86:31:times") // x5423 = DRAMNew(ArrayBuffer(x5422),Const(0.0))
    val x5424 = ReadMem(x5409).name("x5424").ctrl(top).srcCtx("BlackScholes.scala:87:32") // RegRead(x5409)
    val x5425 = DRAM(dims=List(x5424)).name("x5425").ctrl(top).srcCtx("BlackScholes.scala:87:31:optprice") // x5425 = DRAMNew(ArrayBuffer(x5424),Const(0.0))
    val x5783 = UnitController(style=SeqPipe, level=OuterControl).name("x5783").ctrl(top).srcCtx("BlackScholes.scala:95:11") // Hwblock(Block(Const(())),false)
    val x5432 = ReadMem(x5409).name("x5432").ctrl(x5783).srcCtx("BlackScholes.scala:96:15") // RegRead(x5409)
    val x5433 = Counter(min=Const(0), max=x5432, step=Const(32), par=1).name("x5433").ctrl(x5783).srcCtx("BlackScholes.scala:96:26") // CounterNew(Const(0),x5432,Const(32),Const(1))
    val x5434 = CounterChain(List(x5433)).name("x5434").ctrl(x5783).srcCtx("BlackScholes.scala:96:34") // CounterChainNew(List(x5433))
    val x5782 = LoopController(style=MetaPipe, level=OuterControl, cchain=x5434).name("x5782").ctrl(x5783).srcCtx("BlackScholes.scala:96:34") // UnrolledForeach(List(Const(true)),x5434,Block(Const(())),List(List(b3432)),List(List(b3433)))
    val b3432 = CounterIter(x5433, Some(0)).name("b3432").ctrl(x5782) // b3432
    val b3433 = Const(true).name("b3433").ctrl(x5782) // b3433
    val x5435_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5435_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:97:34:typeBlk") // x5435 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5435_d0_b0) = false
    bufferDepthOf(x5435_d0_b0) = 2
    val x5436_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5436_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:98:36:priceBlk") // x5436 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5436_d0_b0) = false
    bufferDepthOf(x5436_d0_b0) = 2
    val x5437_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5437_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:99:36:strikeBlk") // x5437 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5437_d0_b0) = false
    bufferDepthOf(x5437_d0_b0) = 2
    val x5438_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5438_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:100:36:rateBlk") // x5438 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5438_d0_b0) = false
    bufferDepthOf(x5438_d0_b0) = 2
    val x5439_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5439_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:101:36:volBlk") // x5439 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5439_d0_b0) = false
    bufferDepthOf(x5439_d0_b0) = 2
    val x5440_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5440_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:102:36:timeBlk") // x5440 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5440_d0_b0) = false
    bufferDepthOf(x5440_d0_b0) = 2
    val x5441_d0_b0 = SRAM(size=32, banking=Strided(banks=16, stride=1)).name("x5441_d0_b0").ctrl(x5782).srcCtx("BlackScholes.scala:103:38:optpriceBlk") // x5441 = SRAMNew(ArrayBuffer(Const(32)))
    isAccum(x5441_d0_b0) = false
    bufferDepthOf(x5441_d0_b0) = 3
    val x5558 = UnitController(style=ForkJoin, level=OuterControl).name("x5558").ctrl(x5782).srcCtx("BlackScholes.scala:105:18") // ParallelPipe(List(b3433),Block(Const(())))
    val x5443 = UnitController(style=SeqPipe, level=InnerControl).name("x5443").ctrl(x5558).srcCtx("BlackScholes.scala:105:18") // UnitPipe(List(b3433),Block(Const(())))
    val x5442 = OpDef(op=FixAdd, inputs=List(b3432, Const(32))).name("x5442").ctrl(x5443).srcCtx("BlackScholes.scala:106:36") // FixAdd(b3432,Const(32))
    val x5462 = UnitController(style=StreamPipe, level=OuterControl).name("x5462").ctrl(x5558).srcCtx("BlackScholes.scala:106:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5794 = StreamOut(field="offset").name("b5794").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // x5444 = StreamOutNew(BurstCmdBus)
    isAccum(b5794) = false
    bufferDepthOf(b5794) = 1
    val b5795 = StreamOut(field="size").name("b5795").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // x5444 = StreamOutNew(BurstCmdBus)
    isAccum(b5795) = false
    bufferDepthOf(b5795) = 1
    val x5445 = StreamIn(field="data").name("x5445").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // x5445 = StreamInNew(BurstDataBus())
    isAccum(x5445) = false
    bufferDepthOf(x5445) = 1
    val x5453 = UnitController(style=SeqPipe, level=InnerControl).name("x5453").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // UnitPipe(List(b3433),Block(x5452))
    val x5446 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5447 = OpDef(op=FixSla, inputs=List(x5446, Const(2))).name("x5447").ctrl(x5453).srcCtx("BlackScholes.scala:106:21") // FixLsh(x5446,Const(2))
    val x5448 = x5447 // FixConvert(x5447,TRUE,_64,_0)
    val x5449 = DramAddress(x5413).name("x5449").ctrl(x5453).srcCtx("BlackScholes.scala:106:21") // GetDRAMAddress(x5413)
    val x5451_x5450 = OpDef(op=FixAdd, inputs=List(x5448, x5449)).name("x5451_x5450").ctrl(x5453).srcCtx("BlackScholes.scala:106:21") // FixAdd(x5448,x5449)
    // x5451 = SimpleStruct(ArrayBuffer((offset,x5450), (size,Const(128)), (isLoad,Const(true))))
    val x5452_b5796_b5794 = WriteMem(b5794, x5451_x5450).name("x5452_b5796_b5794").ctrl(x5453).srcCtx("BlackScholes.scala:106:21") // StreamWrite(x5444,x5451,b3433)
    val x5452_b5797_b5795 = WriteMem(b5795, Const(128)).name("x5452_b5797_b5795").ctrl(x5453).srcCtx("BlackScholes.scala:106:21") // StreamWrite(x5444,x5451,b3433)
    val x5454 = FringeDenseLoad(dram=List(x5413), cmdStream=List(b5794, b5795), dataStream=List(x5445)).name("x5454").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // FringeDenseLoad(x5413,x5444,x5445)
    val x5455 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5455").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5456 = CounterChain(List(x5455)).name("x5456").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // CounterChainNew(List(x5455))
    val x5461 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5456).name("x5461").ctrl(x5462).srcCtx("BlackScholes.scala:106:21") // UnrolledForeach(List(b3433),x5456,Block(Const(())),List(List(b3456)),List(List(b3457)))
    val b3456 = CounterIter(x5455, None).name("b3456").ctrl(x5461) // b3456
    val b3457 = Const(true).name("b3457").ctrl(x5461) // b3457
    val x5457 = OpDef(op=BitAnd, inputs=List(b3457, b3433)).name("x5457").ctrl(x5461).srcCtx("UnrollingBase.scala:28:66") // And(b3457,b3433)
    val x5458_x5458 = ReadMem(x5445).name("x5458_x5458").ctrl(x5461).srcCtx("BlackScholes.scala:106:21") // ParStreamRead(x5445,List(x5457))
    val x5459_x5459 = x5458_x5458 // x5459 = VectorApply(x5458,0)
    val x5460 = StoreBanks(List(x5435_d0_b0), List(b3456), x5459_x5459).name("x5460").ctrl(x5461).srcCtx("BlackScholes.scala:106:21") // ParSRAMStore(x5435,List(List(b3456)),List(x5459),List(x5457))
    val x5481 = UnitController(style=StreamPipe, level=OuterControl).name("x5481").ctrl(x5558).srcCtx("BlackScholes.scala:107:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5798 = StreamOut(field="offset").name("b5798").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // x5463 = StreamOutNew(BurstCmdBus)
    isAccum(b5798) = false
    bufferDepthOf(b5798) = 1
    val b5799 = StreamOut(field="size").name("b5799").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // x5463 = StreamOutNew(BurstCmdBus)
    isAccum(b5799) = false
    bufferDepthOf(b5799) = 1
    val x5464 = StreamIn(field="data").name("x5464").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // x5464 = StreamInNew(BurstDataBus())
    isAccum(x5464) = false
    bufferDepthOf(x5464) = 1
    val x5472 = UnitController(style=SeqPipe, level=InnerControl).name("x5472").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // UnitPipe(List(b3433),Block(x5471))
    val x5465 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5466 = OpDef(op=FixSla, inputs=List(x5465, Const(2))).name("x5466").ctrl(x5472).srcCtx("BlackScholes.scala:107:21") // FixLsh(x5465,Const(2))
    val x5467 = x5466 // FixConvert(x5466,TRUE,_64,_0)
    val x5468 = DramAddress(x5415).name("x5468").ctrl(x5472).srcCtx("BlackScholes.scala:107:21") // GetDRAMAddress(x5415)
    val x5470_x5469 = OpDef(op=FixAdd, inputs=List(x5467, x5468)).name("x5470_x5469").ctrl(x5472).srcCtx("BlackScholes.scala:107:21") // FixAdd(x5467,x5468)
    // x5470 = SimpleStruct(ArrayBuffer((offset,x5469), (size,Const(128)), (isLoad,Const(true))))
    val x5471_b5800_b5798 = WriteMem(b5798, x5470_x5469).name("x5471_b5800_b5798").ctrl(x5472).srcCtx("BlackScholes.scala:107:21") // StreamWrite(x5463,x5470,b3433)
    val x5471_b5801_b5799 = WriteMem(b5799, Const(128)).name("x5471_b5801_b5799").ctrl(x5472).srcCtx("BlackScholes.scala:107:21") // StreamWrite(x5463,x5470,b3433)
    val x5473 = FringeDenseLoad(dram=List(x5415), cmdStream=List(b5798, b5799), dataStream=List(x5464)).name("x5473").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // FringeDenseLoad(x5415,x5463,x5464)
    val x5474 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5474").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5475 = CounterChain(List(x5474)).name("x5475").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // CounterChainNew(List(x5474))
    val x5480 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5475).name("x5480").ctrl(x5481).srcCtx("BlackScholes.scala:107:21") // UnrolledForeach(List(b3433),x5475,Block(Const(())),List(List(b3477)),List(List(b3478)))
    val b3477 = CounterIter(x5474, None).name("b3477").ctrl(x5480) // b3477
    val b3478 = Const(true).name("b3478").ctrl(x5480) // b3478
    val x5476 = OpDef(op=BitAnd, inputs=List(b3478, b3433)).name("x5476").ctrl(x5480).srcCtx("UnrollingBase.scala:28:66") // And(b3478,b3433)
    val x5477_x5477 = ReadMem(x5464).name("x5477_x5477").ctrl(x5480).srcCtx("BlackScholes.scala:107:21") // ParStreamRead(x5464,List(x5476))
    val x5478_x5478 = x5477_x5477 // x5478 = VectorApply(x5477,0)
    val x5479 = StoreBanks(List(x5436_d0_b0), List(b3477), x5478_x5478).name("x5479").ctrl(x5480).srcCtx("BlackScholes.scala:107:21") // ParSRAMStore(x5436,List(List(b3477)),List(x5478),List(x5476))
    val x5500 = UnitController(style=StreamPipe, level=OuterControl).name("x5500").ctrl(x5558).srcCtx("BlackScholes.scala:108:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5802 = StreamOut(field="offset").name("b5802").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // x5482 = StreamOutNew(BurstCmdBus)
    isAccum(b5802) = false
    bufferDepthOf(b5802) = 1
    val b5803 = StreamOut(field="size").name("b5803").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // x5482 = StreamOutNew(BurstCmdBus)
    isAccum(b5803) = false
    bufferDepthOf(b5803) = 1
    val x5483 = StreamIn(field="data").name("x5483").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // x5483 = StreamInNew(BurstDataBus())
    isAccum(x5483) = false
    bufferDepthOf(x5483) = 1
    val x5491 = UnitController(style=SeqPipe, level=InnerControl).name("x5491").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // UnitPipe(List(b3433),Block(x5490))
    val x5484 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5485 = OpDef(op=FixSla, inputs=List(x5484, Const(2))).name("x5485").ctrl(x5491).srcCtx("BlackScholes.scala:108:21") // FixLsh(x5484,Const(2))
    val x5486 = x5485 // FixConvert(x5485,TRUE,_64,_0)
    val x5487 = DramAddress(x5417).name("x5487").ctrl(x5491).srcCtx("BlackScholes.scala:108:21") // GetDRAMAddress(x5417)
    val x5489_x5488 = OpDef(op=FixAdd, inputs=List(x5486, x5487)).name("x5489_x5488").ctrl(x5491).srcCtx("BlackScholes.scala:108:21") // FixAdd(x5486,x5487)
    // x5489 = SimpleStruct(ArrayBuffer((offset,x5488), (size,Const(128)), (isLoad,Const(true))))
    val x5490_b5804_b5802 = WriteMem(b5802, x5489_x5488).name("x5490_b5804_b5802").ctrl(x5491).srcCtx("BlackScholes.scala:108:21") // StreamWrite(x5482,x5489,b3433)
    val x5490_b5805_b5803 = WriteMem(b5803, Const(128)).name("x5490_b5805_b5803").ctrl(x5491).srcCtx("BlackScholes.scala:108:21") // StreamWrite(x5482,x5489,b3433)
    val x5492 = FringeDenseLoad(dram=List(x5417), cmdStream=List(b5802, b5803), dataStream=List(x5483)).name("x5492").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // FringeDenseLoad(x5417,x5482,x5483)
    val x5493 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5493").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5494 = CounterChain(List(x5493)).name("x5494").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // CounterChainNew(List(x5493))
    val x5499 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5494).name("x5499").ctrl(x5500).srcCtx("BlackScholes.scala:108:21") // UnrolledForeach(List(b3433),x5494,Block(Const(())),List(List(b3498)),List(List(b3499)))
    val b3498 = CounterIter(x5493, None).name("b3498").ctrl(x5499) // b3498
    val b3499 = Const(true).name("b3499").ctrl(x5499) // b3499
    val x5495 = OpDef(op=BitAnd, inputs=List(b3499, b3433)).name("x5495").ctrl(x5499).srcCtx("UnrollingBase.scala:28:66") // And(b3499,b3433)
    val x5496_x5496 = ReadMem(x5483).name("x5496_x5496").ctrl(x5499).srcCtx("BlackScholes.scala:108:21") // ParStreamRead(x5483,List(x5495))
    val x5497_x5497 = x5496_x5496 // x5497 = VectorApply(x5496,0)
    val x5498 = StoreBanks(List(x5437_d0_b0), List(b3498), x5497_x5497).name("x5498").ctrl(x5499).srcCtx("BlackScholes.scala:108:21") // ParSRAMStore(x5437,List(List(b3498)),List(x5497),List(x5495))
    val x5519 = UnitController(style=StreamPipe, level=OuterControl).name("x5519").ctrl(x5558).srcCtx("BlackScholes.scala:109:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5806 = StreamOut(field="offset").name("b5806").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // x5501 = StreamOutNew(BurstCmdBus)
    isAccum(b5806) = false
    bufferDepthOf(b5806) = 1
    val b5807 = StreamOut(field="size").name("b5807").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // x5501 = StreamOutNew(BurstCmdBus)
    isAccum(b5807) = false
    bufferDepthOf(b5807) = 1
    val x5502 = StreamIn(field="data").name("x5502").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // x5502 = StreamInNew(BurstDataBus())
    isAccum(x5502) = false
    bufferDepthOf(x5502) = 1
    val x5510 = UnitController(style=SeqPipe, level=InnerControl).name("x5510").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // UnitPipe(List(b3433),Block(x5509))
    val x5503 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5504 = OpDef(op=FixSla, inputs=List(x5503, Const(2))).name("x5504").ctrl(x5510).srcCtx("BlackScholes.scala:109:21") // FixLsh(x5503,Const(2))
    val x5505 = x5504 // FixConvert(x5504,TRUE,_64,_0)
    val x5506 = DramAddress(x5419).name("x5506").ctrl(x5510).srcCtx("BlackScholes.scala:109:21") // GetDRAMAddress(x5419)
    val x5508_x5507 = OpDef(op=FixAdd, inputs=List(x5505, x5506)).name("x5508_x5507").ctrl(x5510).srcCtx("BlackScholes.scala:109:21") // FixAdd(x5505,x5506)
    // x5508 = SimpleStruct(ArrayBuffer((offset,x5507), (size,Const(128)), (isLoad,Const(true))))
    val x5509_b5808_b5806 = WriteMem(b5806, x5508_x5507).name("x5509_b5808_b5806").ctrl(x5510).srcCtx("BlackScholes.scala:109:21") // StreamWrite(x5501,x5508,b3433)
    val x5509_b5809_b5807 = WriteMem(b5807, Const(128)).name("x5509_b5809_b5807").ctrl(x5510).srcCtx("BlackScholes.scala:109:21") // StreamWrite(x5501,x5508,b3433)
    val x5511 = FringeDenseLoad(dram=List(x5419), cmdStream=List(b5806, b5807), dataStream=List(x5502)).name("x5511").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // FringeDenseLoad(x5419,x5501,x5502)
    val x5512 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5512").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5513 = CounterChain(List(x5512)).name("x5513").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // CounterChainNew(List(x5512))
    val x5518 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5513).name("x5518").ctrl(x5519).srcCtx("BlackScholes.scala:109:21") // UnrolledForeach(List(b3433),x5513,Block(Const(())),List(List(b3519)),List(List(b3520)))
    val b3519 = CounterIter(x5512, None).name("b3519").ctrl(x5518) // b3519
    val b3520 = Const(true).name("b3520").ctrl(x5518) // b3520
    val x5514 = OpDef(op=BitAnd, inputs=List(b3520, b3433)).name("x5514").ctrl(x5518).srcCtx("UnrollingBase.scala:28:66") // And(b3520,b3433)
    val x5515_x5515 = ReadMem(x5502).name("x5515_x5515").ctrl(x5518).srcCtx("BlackScholes.scala:109:21") // ParStreamRead(x5502,List(x5514))
    val x5516_x5516 = x5515_x5515 // x5516 = VectorApply(x5515,0)
    val x5517 = StoreBanks(List(x5438_d0_b0), List(b3519), x5516_x5516).name("x5517").ctrl(x5518).srcCtx("BlackScholes.scala:109:21") // ParSRAMStore(x5438,List(List(b3519)),List(x5516),List(x5514))
    val x5538 = UnitController(style=StreamPipe, level=OuterControl).name("x5538").ctrl(x5558).srcCtx("BlackScholes.scala:110:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5810 = StreamOut(field="offset").name("b5810").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // x5520 = StreamOutNew(BurstCmdBus)
    isAccum(b5810) = false
    bufferDepthOf(b5810) = 1
    val b5811 = StreamOut(field="size").name("b5811").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // x5520 = StreamOutNew(BurstCmdBus)
    isAccum(b5811) = false
    bufferDepthOf(b5811) = 1
    val x5521 = StreamIn(field="data").name("x5521").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // x5521 = StreamInNew(BurstDataBus())
    isAccum(x5521) = false
    bufferDepthOf(x5521) = 1
    val x5529 = UnitController(style=SeqPipe, level=InnerControl).name("x5529").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // UnitPipe(List(b3433),Block(x5528))
    val x5522 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5523 = OpDef(op=FixSla, inputs=List(x5522, Const(2))).name("x5523").ctrl(x5529).srcCtx("BlackScholes.scala:110:21") // FixLsh(x5522,Const(2))
    val x5524 = x5523 // FixConvert(x5523,TRUE,_64,_0)
    val x5525 = DramAddress(x5421).name("x5525").ctrl(x5529).srcCtx("BlackScholes.scala:110:21") // GetDRAMAddress(x5421)
    val x5527_x5526 = OpDef(op=FixAdd, inputs=List(x5524, x5525)).name("x5527_x5526").ctrl(x5529).srcCtx("BlackScholes.scala:110:21") // FixAdd(x5524,x5525)
    // x5527 = SimpleStruct(ArrayBuffer((offset,x5526), (size,Const(128)), (isLoad,Const(true))))
    val x5528_b5812_b5810 = WriteMem(b5810, x5527_x5526).name("x5528_b5812_b5810").ctrl(x5529).srcCtx("BlackScholes.scala:110:21") // StreamWrite(x5520,x5527,b3433)
    val x5528_b5813_b5811 = WriteMem(b5811, Const(128)).name("x5528_b5813_b5811").ctrl(x5529).srcCtx("BlackScholes.scala:110:21") // StreamWrite(x5520,x5527,b3433)
    val x5530 = FringeDenseLoad(dram=List(x5421), cmdStream=List(b5810, b5811), dataStream=List(x5521)).name("x5530").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // FringeDenseLoad(x5421,x5520,x5521)
    val x5531 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5531").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5532 = CounterChain(List(x5531)).name("x5532").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // CounterChainNew(List(x5531))
    val x5537 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5532).name("x5537").ctrl(x5538).srcCtx("BlackScholes.scala:110:21") // UnrolledForeach(List(b3433),x5532,Block(Const(())),List(List(b3540)),List(List(b3541)))
    val b3540 = CounterIter(x5531, None).name("b3540").ctrl(x5537) // b3540
    val b3541 = Const(true).name("b3541").ctrl(x5537) // b3541
    val x5533 = OpDef(op=BitAnd, inputs=List(b3541, b3433)).name("x5533").ctrl(x5537).srcCtx("UnrollingBase.scala:28:66") // And(b3541,b3433)
    val x5534_x5534 = ReadMem(x5521).name("x5534_x5534").ctrl(x5537).srcCtx("BlackScholes.scala:110:21") // ParStreamRead(x5521,List(x5533))
    val x5535_x5535 = x5534_x5534 // x5535 = VectorApply(x5534,0)
    val x5536 = StoreBanks(List(x5439_d0_b0), List(b3540), x5535_x5535).name("x5536").ctrl(x5537).srcCtx("BlackScholes.scala:110:21") // ParSRAMStore(x5439,List(List(b3540)),List(x5535),List(x5533))
    val x5557 = UnitController(style=StreamPipe, level=OuterControl).name("x5557").ctrl(x5558).srcCtx("BlackScholes.scala:111:21") // UnitPipe(List(b3433),Block(Const(())))
    val b5814 = StreamOut(field="offset").name("b5814").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // x5539 = StreamOutNew(BurstCmdBus)
    isAccum(b5814) = false
    bufferDepthOf(b5814) = 1
    val b5815 = StreamOut(field="size").name("b5815").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // x5539 = StreamOutNew(BurstCmdBus)
    isAccum(b5815) = false
    bufferDepthOf(b5815) = 1
    val x5540 = StreamIn(field="data").name("x5540").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // x5540 = StreamInNew(BurstDataBus())
    isAccum(x5540) = false
    bufferDepthOf(x5540) = 1
    val x5548 = UnitController(style=SeqPipe, level=InnerControl).name("x5548").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // UnitPipe(List(b3433),Block(x5547))
    val x5541 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5542 = OpDef(op=FixSla, inputs=List(x5541, Const(2))).name("x5542").ctrl(x5548).srcCtx("BlackScholes.scala:111:21") // FixLsh(x5541,Const(2))
    val x5543 = x5542 // FixConvert(x5542,TRUE,_64,_0)
    val x5544 = DramAddress(x5423).name("x5544").ctrl(x5548).srcCtx("BlackScholes.scala:111:21") // GetDRAMAddress(x5423)
    val x5546_x5545 = OpDef(op=FixAdd, inputs=List(x5543, x5544)).name("x5546_x5545").ctrl(x5548).srcCtx("BlackScholes.scala:111:21") // FixAdd(x5543,x5544)
    // x5546 = SimpleStruct(ArrayBuffer((offset,x5545), (size,Const(128)), (isLoad,Const(true))))
    val x5547_b5816_b5814 = WriteMem(b5814, x5546_x5545).name("x5547_b5816_b5814").ctrl(x5548).srcCtx("BlackScholes.scala:111:21") // StreamWrite(x5539,x5546,b3433)
    val x5547_b5817_b5815 = WriteMem(b5815, Const(128)).name("x5547_b5817_b5815").ctrl(x5548).srcCtx("BlackScholes.scala:111:21") // StreamWrite(x5539,x5546,b3433)
    val x5549 = FringeDenseLoad(dram=List(x5423), cmdStream=List(b5814, b5815), dataStream=List(x5540)).name("x5549").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // FringeDenseLoad(x5423,x5539,x5540)
    val x5550 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5550").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5551 = CounterChain(List(x5550)).name("x5551").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // CounterChainNew(List(x5550))
    val x5556 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5551).name("x5556").ctrl(x5557).srcCtx("BlackScholes.scala:111:21") // UnrolledForeach(List(b3433),x5551,Block(Const(())),List(List(b3561)),List(List(b3562)))
    val b3561 = CounterIter(x5550, None).name("b3561").ctrl(x5556) // b3561
    val b3562 = Const(true).name("b3562").ctrl(x5556) // b3562
    val x5552 = OpDef(op=BitAnd, inputs=List(b3562, b3433)).name("x5552").ctrl(x5556).srcCtx("UnrollingBase.scala:28:66") // And(b3562,b3433)
    val x5553_x5553 = ReadMem(x5540).name("x5553_x5553").ctrl(x5556).srcCtx("BlackScholes.scala:111:21") // ParStreamRead(x5540,List(x5552))
    val x5554_x5554 = x5553_x5553 // x5554 = VectorApply(x5553,0)
    val x5555 = StoreBanks(List(x5440_d0_b0), List(b3561), x5554_x5554).name("x5555").ctrl(x5556).srcCtx("BlackScholes.scala:111:21") // ParSRAMStore(x5440,List(List(b3561)),List(x5554),List(x5552))
    val x5559 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5559").ctrl(x5782).srcCtx("BlackScholes.scala:114:20") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5560 = CounterChain(List(x5559)).name("x5560").ctrl(x5782).srcCtx("BlackScholes.scala:114:27") // CounterChainNew(List(x5559))
    val x5756 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5560).name("x5756").ctrl(x5782).srcCtx("BlackScholes.scala:114:27") // UnrolledForeach(List(b3433),x5560,Block(Const(())),List(List(b3572)),List(List(b3573)))
    val b3572 = CounterIter(x5559, None).name("b3572").ctrl(x5756) // b3572
    val b3573 = Const(true).name("b3573").ctrl(x5756) // b3573
    val x5561 = OpDef(op=BitAnd, inputs=List(b3573, b3433)).name("x5561").ctrl(x5756).srcCtx("UnrollingBase.scala:28:66") // And(b3573,b3433)
    val x5562 = LoadBanks(List(x5436_d0_b0), List(b3572)).name("x5562").ctrl(x5756).srcCtx("BlackScholes.scala:115:51") // ParSRAMLoad(x5436,List(List(b3572)),List(x5561))
    val x5563 = x5562 // x5563 = VectorApply(x5562,0)
    val x5564 = LoadBanks(List(x5437_d0_b0), List(b3572)).name("x5564").ctrl(x5756).srcCtx("BlackScholes.scala:115:65") // ParSRAMLoad(x5437,List(List(b3572)),List(x5561))
    val x5565 = x5564 // x5565 = VectorApply(x5564,0)
    val x5566 = LoadBanks(List(x5438_d0_b0), List(b3572)).name("x5566").ctrl(x5756).srcCtx("BlackScholes.scala:115:77") // ParSRAMLoad(x5438,List(List(b3572)),List(x5561))
    val x5567 = x5566 // x5567 = VectorApply(x5566,0)
    val x5568 = LoadBanks(List(x5439_d0_b0), List(b3572)).name("x5568").ctrl(x5756).srcCtx("BlackScholes.scala:115:88") // ParSRAMLoad(x5439,List(List(b3572)),List(x5561))
    val x5569 = x5568 // x5569 = VectorApply(x5568,0)
    val x5570 = LoadBanks(List(x5440_d0_b0), List(b3572)).name("x5570").ctrl(x5756).srcCtx("BlackScholes.scala:115:100") // ParSRAMLoad(x5440,List(List(b3572)),List(x5561))
    val x5571 = x5570 // x5571 = VectorApply(x5570,0)
    val x5572 = LoadBanks(List(x5435_d0_b0), List(b3572)).name("x5572").ctrl(x5756).srcCtx("BlackScholes.scala:115:112") // ParSRAMLoad(x5435,List(List(b3572)),List(x5561))
    val x5573 = x5572 // x5573 = VectorApply(x5572,0)
    val x5574 = OpDef(op=FltDiv, inputs=List(x5563, x5565)).name("x5574").ctrl(x5756).srcCtx("BlackScholes.scala:49:41") // FltDiv(x5563,x5565)
    val x5575 = OpDef(op=FltSub, inputs=List(x5574, Const(1.0))).name("x5575").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltSub(x5574,Const(1))
    val x5576 = OpDef(op=FltMul, inputs=List(x5575, x5575)).name("x5576").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltMul(x5575,x5575)
    val x5577 = OpDef(op=FltDiv, inputs=List(x5576, Const(2.0))).name("x5577").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltDiv(x5576,Const(2))
    val x5578 = OpDef(op=FltSub, inputs=List(x5575, x5577)).name("x5578").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltSub(x5575,x5577)
    val x5579 = OpDef(op=FltMul, inputs=List(x5576, x5575)).name("x5579").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltMul(x5576,x5575)
    val x5580 = OpDef(op=FltDiv, inputs=List(x5579, Const(3.0))).name("x5580").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltDiv(x5579,Const(3.0))
    val x5581 = OpDef(op=FltAdd, inputs=List(x5578, x5580)).name("x5581").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltAdd(x5578,x5580)
    val x5582 = OpDef(op=FltMul, inputs=List(x5579, x5575)).name("x5582").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltMul(x5579,x5575)
    val x5583 = OpDef(op=FltDiv, inputs=List(x5582, Const(4.0))).name("x5583").ctrl(x5756).srcCtx("BlackScholes.scala:49:30") // FltDiv(x5582,Const(4))
    val x5584 = OpDef(op=FltSub, inputs=List(x5581, x5583)).name("x5584").ctrl(x5756).srcCtx("BlackScholes.scala:49:30:xLogTerm") // FltSub(x5581,x5583)
    val x5585 = OpDef(op=FltMul, inputs=List(x5569, x5569)).name("x5585").ctrl(x5756).srcCtx("BlackScholes.scala:50:34") // FltMul(x5569,x5569)
    val x5586 = OpDef(op=FltMul, inputs=List(x5585, Const(0.5))).name("x5586").ctrl(x5756).srcCtx("BlackScholes.scala:50:40:xPowerTerm") // FltMul(x5585,Const(0.5))
    val x5587 = OpDef(op=FltAdd, inputs=List(x5567, x5586)).name("x5587").ctrl(x5756).srcCtx("BlackScholes.scala:51:22") // FltAdd(x5567,x5586)
    val x5588 = OpDef(op=FltMul, inputs=List(x5587, x5571)).name("x5588").ctrl(x5756).srcCtx("BlackScholes.scala:51:36") // FltMul(x5587,x5571)
    val x5589 = OpDef(op=FltAdd, inputs=List(x5588, x5584)).name("x5589").ctrl(x5756).srcCtx("BlackScholes.scala:51:43:xNum") // FltAdd(x5588,x5584)
    val x5590 = OpDef(op=FltLt, inputs=List(x5571, Const(2.0))).name("x5590").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(2))
    val x5591 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5591").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5592 = OpDef(op=FltDiv, inputs=List(x5591, Const(2.0))).name("x5592").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltDiv(x5591,Const(2))
    val x5593 = OpDef(op=FltAdd, inputs=List(Const(1.0), x5592)).name("x5593").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(Const(1),x5592)
    val x5594 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5594").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5595 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5595").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5596 = OpDef(op=FltMul, inputs=List(x5594, x5595)).name("x5596").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5594,x5595)
    val x5597 = OpDef(op=FltDiv, inputs=List(x5596, Const(8.0))).name("x5597").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltDiv(x5596,Const(8))
    val x5598 = OpDef(op=FltSub, inputs=List(x5593, x5597)).name("x5598").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5593,x5597)
    val x5599 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5599").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5600 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5600").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5601 = OpDef(op=FltMul, inputs=List(x5599, x5600)).name("x5601").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5599,x5600)
    val x5602 = OpDef(op=FltSub, inputs=List(x5571, Const(1.0))).name("x5602").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltSub(x5571,Const(1))
    val x5603 = OpDef(op=FltMul, inputs=List(x5601, x5602)).name("x5603").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5601,x5602)
    val x5604 = OpDef(op=FltDiv, inputs=List(x5603, Const(16.0))).name("x5604").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltDiv(x5603,Const(16))
    val x5605 = OpDef(op=FltAdd, inputs=List(x5598, x5604)).name("x5605").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5598,x5604)
    val x5606 = OpDef(op=FltLt, inputs=List(x5571, Const(10.0))).name("x5606").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(10.00))
    val x5607 = OpDef(op=FltMul, inputs=List(x5571, Const(0.22))).name("x5607").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.2199999988079071044921875))
    val x5608 = OpDef(op=FltAdd, inputs=List(x5607, Const(1.0))).name("x5608").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5607,Const(1))
    val x5609 = OpDef(op=FltLt, inputs=List(x5571, Const(100.0))).name("x5609").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(100.0000))
    val x5610 = OpDef(op=FltMul, inputs=List(x5571, Const(0.08))).name("x5610").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.07999999821186065673828125))
    val x5611 = OpDef(op=FltAdd, inputs=List(x5610, Const(2.5))).name("x5611").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5610,Const(2.50))
    val x5612 = OpDef(op=FltLt, inputs=List(x5571, Const(1000.0))).name("x5612").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(1000.000000))
    val x5613 = OpDef(op=FltMul, inputs=List(x5571, Const(0.028))).name("x5613").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.0280000008642673492431640625))
    val x5614 = OpDef(op=FltAdd, inputs=List(x5613, Const(8.0))).name("x5614").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5613,Const(8))
    val x5615 = OpDef(op=FltLt, inputs=List(x5571, Const(10000.0))).name("x5615").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(10000.000000000))
    val x5616 = OpDef(op=FltMul, inputs=List(x5571, Const(0.008))).name("x5616").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.008000000379979610443115234375))
    val x5617 = OpDef(op=FltAdd, inputs=List(x5616, Const(20.0))).name("x5617").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5616,Const(20.00))
    val x5618 = OpDef(op=FltLt, inputs=List(x5571, Const(100000.0))).name("x5618").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltLt(x5571,Const(100000.00000000000))
    val x5619 = OpDef(op=FltMul, inputs=List(x5571, Const(0.003))).name("x5619").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.0030000000260770320892333984375))
    val x5620 = OpDef(op=FltAdd, inputs=List(x5619, Const(60.0))).name("x5620").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5619,Const(60.000))
    val x5621 = OpDef(op=FltMul, inputs=List(x5571, Const(2.0E-4))).name("x5621").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltMul(x5571,Const(0.000199999994947575032711029052734375))
    val x5622 = OpDef(op=FltAdd, inputs=List(x5621, Const(300.0))).name("x5622").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // FltAdd(x5621,Const(300.000000))
    val x5623 = OpDef(op=MuxOp, inputs=List(x5618, x5620, x5622)).name("x5623").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5618,x5620,x5622)
    val x5624 = OpDef(op=MuxOp, inputs=List(x5615, x5617, x5623)).name("x5624").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5615,x5617,x5623)
    val x5625 = OpDef(op=MuxOp, inputs=List(x5612, x5614, x5624)).name("x5625").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5612,x5614,x5624)
    val x5626 = OpDef(op=MuxOp, inputs=List(x5609, x5611, x5625)).name("x5626").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5609,x5611,x5625)
    val x5627 = OpDef(op=MuxOp, inputs=List(x5606, x5608, x5626)).name("x5627").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5606,x5608,x5626)
    val x5628 = OpDef(op=MuxOp, inputs=List(x5590, x5605, x5627)).name("x5628").ctrl(x5756).srcCtx("BlackScholes.scala:52:40") // Mux(x5590,x5605,x5627)
    val x5629 = OpDef(op=FltMul, inputs=List(x5569, x5628)).name("x5629").ctrl(x5756).srcCtx("BlackScholes.scala:52:27:xDen") // FltMul(x5569,x5628)
    val x5630 = OpDef(op=FltMul, inputs=List(x5629, x5629)).name("x5630").ctrl(x5756).srcCtx("BlackScholes.scala:54:29") // FltMul(x5629,x5629)
    val x5631 = OpDef(op=FltDiv, inputs=List(x5589, x5630)).name("x5631").ctrl(x5756).srcCtx("BlackScholes.scala:54:21:xDiv") // FltDiv(x5589,x5630)
    val x5632 = OpDef(op=FltAbs, inputs=List(x5631)).name("x5632").ctrl(x5756).srcCtx("BlackScholes.scala:18:17:ax") // FltAbs(x5631)
    val x5633 = OpDef(op=FltMul, inputs=List(x5632, x5632)).name("x5633").ctrl(x5756).srcCtx("BlackScholes.scala:20:37") // FltMul(x5632,x5632)
    val x5634 = OpDef(op=FltMul, inputs=List(x5633, Const(-0.05))).name("x5634").ctrl(x5756).srcCtx("BlackScholes.scala:20:43") // FltMul(x5633,Const(-0.0500000007450580596923828125))
    val x5635 = OpDef(op=FltLt, inputs=List(x5634, Const(-3.5))).name("x5635").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltLt(x5634,Const(-3.50))
    val x5636 = OpDef(op=FltLt, inputs=List(x5634, Const(-1.2))).name("x5636").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltLt(x5634,Const(-1.2000000476837158203125))
    val x5637 = OpDef(op=FltMul, inputs=List(x5634, Const(0.1))).name("x5637").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5634,Const(0.100000001490116119384765625))
    val x5638 = OpDef(op=FltAdd, inputs=List(x5637, Const(0.35))).name("x5638").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5637,Const(0.3499999940395355224609375))
    val x5639 = OpDef(op=FltAdd, inputs=List(Const(1.0), x5634)).name("x5639").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(Const(1),x5634)
    val x5640 = OpDef(op=FltMul, inputs=List(x5634, x5634)).name("x5640").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5634,x5634)
    val x5641 = OpDef(op=FltDiv, inputs=List(x5640, Const(2.0))).name("x5641").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5640,Const(2))
    val x5642 = OpDef(op=FltAdd, inputs=List(x5639, x5641)).name("x5642").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5639,x5641)
    val x5643 = OpDef(op=FltMul, inputs=List(x5640, x5634)).name("x5643").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5640,x5634)
    val x5644 = OpDef(op=FltDiv, inputs=List(x5643, Const(6.0))).name("x5644").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5643,Const(6.0))
    val x5645 = OpDef(op=FltAdd, inputs=List(x5642, x5644)).name("x5645").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5642,x5644)
    val x5646 = OpDef(op=FltMul, inputs=List(x5643, x5634)).name("x5646").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5643,x5634)
    val x5647 = OpDef(op=FltDiv, inputs=List(x5646, Const(24.0))).name("x5647").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5646,Const(24.0))
    val x5648 = OpDef(op=FltAdd, inputs=List(x5645, x5647)).name("x5648").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5645,x5647)
    val x5649 = OpDef(op=FltMul, inputs=List(x5646, x5634)).name("x5649").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5646,x5634)
    val x5650 = OpDef(op=FltDiv, inputs=List(x5649, Const(120.0))).name("x5650").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5649,Const(120.000))
    val x5651 = OpDef(op=FltAdd, inputs=List(x5648, x5650)).name("x5651").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5648,x5650)
    val x5652 = OpDef(op=MuxOp, inputs=List(x5636, x5638, x5651)).name("x5652").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // Mux(x5636,x5638,x5651)
    val x5653 = OpDef(op=MuxOp, inputs=List(x5635, Const(0.0), x5652)).name("x5653").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // Mux(x5635,Const(0.0),x5652)
    val x5654 = OpDef(op=FltMul, inputs=List(x5653, Const(0.3989423))).name("x5654").ctrl(x5756).srcCtx("BlackScholes.scala:20:53:xNPrimeofX") // FltMul(x5653,Const(0.398942291736602783203125))
    val x5655 = OpDef(op=FltMul, inputs=List(x5632, Const(0.2316419))).name("x5655").ctrl(x5756).srcCtx("BlackScholes.scala:21:34") // FltMul(x5632,Const(0.23164190351963043212890625))
    val x5656 = OpDef(op=FltAdd, inputs=List(x5655, Const(1.0))).name("x5656").ctrl(x5756).srcCtx("BlackScholes.scala:21:48") // FltAdd(x5655,Const(1))
    val x5657 = OpDef(op=FltDiv, inputs=List(Const(1.0), x5656)).name("x5657").ctrl(x5756).srcCtx("BlackScholes.scala:21:27:xK2") // FltDiv(Const(1),x5656)
    val x5658 = OpDef(op=FltMul, inputs=List(x5657, x5657)).name("x5658").ctrl(x5756).srcCtx("BlackScholes.scala:23:21:xK2_2") // FltMul(x5657,x5657)
    val x5659 = OpDef(op=FltMul, inputs=List(x5658, x5657)).name("x5659").ctrl(x5756).srcCtx("BlackScholes.scala:24:23:xK2_3") // FltMul(x5658,x5657)
    val x5660 = OpDef(op=FltMul, inputs=List(x5659, x5657)).name("x5660").ctrl(x5756).srcCtx("BlackScholes.scala:25:23:xK2_4") // FltMul(x5659,x5657)
    val x5661 = OpDef(op=FltMul, inputs=List(x5660, x5657)).name("x5661").ctrl(x5756).srcCtx("BlackScholes.scala:26:23:xK2_5") // FltMul(x5660,x5657)
    val x5662 = OpDef(op=FltMul, inputs=List(x5657, Const(0.31938154))).name("x5662").ctrl(x5756).srcCtx("BlackScholes.scala:28:25:xLocal_10") // FltMul(x5657,Const(0.319381535053253173828125))
    val x5663 = OpDef(op=FltMul, inputs=List(x5658, Const(-0.35656378))).name("x5663").ctrl(x5756).srcCtx("BlackScholes.scala:29:27:xLocal_20") // FltMul(x5658,Const(-0.3565637767314910888671875))
    val x5664 = OpDef(op=FltMul, inputs=List(x5659, Const(1.7814779))).name("x5664").ctrl(x5756).srcCtx("BlackScholes.scala:30:27:xLocal_30") // FltMul(x5659,Const(1.78147792816162109375))
    val x5665 = OpDef(op=FltMul, inputs=List(x5660, Const(-1.8212559))).name("x5665").ctrl(x5756).srcCtx("BlackScholes.scala:31:27:xLocal_31") // FltMul(x5660,Const(-1.8212559223175048828125))
    val x5666 = OpDef(op=FltMul, inputs=List(x5661, Const(1.3302745))).name("x5666").ctrl(x5756).srcCtx("BlackScholes.scala:32:27:xLocal_32") // FltMul(x5661,Const(1.33027446269989013671875))
    val x5667 = OpDef(op=FltAdd, inputs=List(x5663, x5664)).name("x5667").ctrl(x5756).srcCtx("BlackScholes.scala:34:31:xLocal_21") // FltAdd(x5663,x5664)
    val x5668 = OpDef(op=FltAdd, inputs=List(x5667, x5665)).name("x5668").ctrl(x5756).srcCtx("BlackScholes.scala:35:31:xLocal_22") // FltAdd(x5667,x5665)
    val x5669 = OpDef(op=FltAdd, inputs=List(x5668, x5666)).name("x5669").ctrl(x5756).srcCtx("BlackScholes.scala:36:31:xLocal_23") // FltAdd(x5668,x5666)
    val x5670 = OpDef(op=FltAdd, inputs=List(x5669, x5662)).name("x5670").ctrl(x5756).srcCtx("BlackScholes.scala:37:30:xLocal_1") // FltAdd(x5669,x5662)
    val x5671 = OpDef(op=FltMul, inputs=List(x5670, x5654)).name("x5671").ctrl(x5756).srcCtx("BlackScholes.scala:39:28:xLocal0") // FltMul(x5670,x5654)
    val x5672 = OpDef(op=FltNeg, inputs=List(x5671)).name("x5672").ctrl(x5756).srcCtx("BlackScholes.scala:40:19") // FltNeg(x5671)
    val x5673 = OpDef(op=FltAdd, inputs=List(x5672, Const(1.0))).name("x5673").ctrl(x5756).srcCtx("BlackScholes.scala:40:28:xLocal") // FltAdd(x5672,Const(1))
    val x5674 = OpDef(op=FltLt, inputs=List(x5631, Const(0.0))).name("x5674").ctrl(x5756).srcCtx("BlackScholes.scala:42:11") // FltLt(x5631,Const(0.0))
    val x5675 = OpDef(op=MuxOp, inputs=List(x5674, x5671, x5673)).name("x5675").ctrl(x5756).srcCtx("BlackScholes.scala:42:8:nofXd1") // Mux(x5674,x5671,x5673)
    val x5676 = OpDef(op=FltSub, inputs=List(x5631, x5629)).name("x5676").ctrl(x5756).srcCtx("BlackScholes.scala:56:28") // FltSub(x5631,x5629)
    val x5677 = OpDef(op=FltAbs, inputs=List(x5676)).name("x5677").ctrl(x5756).srcCtx("BlackScholes.scala:18:17:ax") // FltAbs(x5676)
    val x5678 = OpDef(op=FltMul, inputs=List(x5677, x5677)).name("x5678").ctrl(x5756).srcCtx("BlackScholes.scala:20:37") // FltMul(x5677,x5677)
    val x5679 = OpDef(op=FltMul, inputs=List(x5678, Const(-0.05))).name("x5679").ctrl(x5756).srcCtx("BlackScholes.scala:20:43") // FltMul(x5678,Const(-0.0500000007450580596923828125))
    val x5680 = OpDef(op=FltLt, inputs=List(x5679, Const(-3.5))).name("x5680").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltLt(x5679,Const(-3.50))
    val x5681 = OpDef(op=FltLt, inputs=List(x5679, Const(-1.2))).name("x5681").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltLt(x5679,Const(-1.2000000476837158203125))
    val x5682 = OpDef(op=FltMul, inputs=List(x5679, Const(0.1))).name("x5682").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5679,Const(0.100000001490116119384765625))
    val x5683 = OpDef(op=FltAdd, inputs=List(x5682, Const(0.35))).name("x5683").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5682,Const(0.3499999940395355224609375))
    val x5684 = OpDef(op=FltAdd, inputs=List(Const(1.0), x5679)).name("x5684").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(Const(1),x5679)
    val x5685 = OpDef(op=FltMul, inputs=List(x5679, x5679)).name("x5685").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5679,x5679)
    val x5686 = OpDef(op=FltDiv, inputs=List(x5685, Const(2.0))).name("x5686").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5685,Const(2))
    val x5687 = OpDef(op=FltAdd, inputs=List(x5684, x5686)).name("x5687").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5684,x5686)
    val x5688 = OpDef(op=FltMul, inputs=List(x5685, x5679)).name("x5688").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5685,x5679)
    val x5689 = OpDef(op=FltDiv, inputs=List(x5688, Const(6.0))).name("x5689").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5688,Const(6.0))
    val x5690 = OpDef(op=FltAdd, inputs=List(x5687, x5689)).name("x5690").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5687,x5689)
    val x5691 = OpDef(op=FltMul, inputs=List(x5688, x5679)).name("x5691").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5688,x5679)
    val x5692 = OpDef(op=FltDiv, inputs=List(x5691, Const(24.0))).name("x5692").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5691,Const(24.0))
    val x5693 = OpDef(op=FltAdd, inputs=List(x5690, x5692)).name("x5693").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5690,x5692)
    val x5694 = OpDef(op=FltMul, inputs=List(x5691, x5679)).name("x5694").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltMul(x5691,x5679)
    val x5695 = OpDef(op=FltDiv, inputs=List(x5694, Const(120.0))).name("x5695").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltDiv(x5694,Const(120.000))
    val x5696 = OpDef(op=FltAdd, inputs=List(x5693, x5695)).name("x5696").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // FltAdd(x5693,x5695)
    val x5697 = OpDef(op=MuxOp, inputs=List(x5681, x5683, x5696)).name("x5697").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // Mux(x5681,x5683,x5696)
    val x5698 = OpDef(op=MuxOp, inputs=List(x5680, Const(0.0), x5697)).name("x5698").ctrl(x5756).srcCtx("BlackScholes.scala:20:32") // Mux(x5680,Const(0.0),x5697)
    val x5699 = OpDef(op=FltMul, inputs=List(x5698, Const(0.3989423))).name("x5699").ctrl(x5756).srcCtx("BlackScholes.scala:20:53:xNPrimeofX") // FltMul(x5698,Const(0.398942291736602783203125))
    val x5700 = OpDef(op=FltMul, inputs=List(x5677, Const(0.2316419))).name("x5700").ctrl(x5756).srcCtx("BlackScholes.scala:21:34") // FltMul(x5677,Const(0.23164190351963043212890625))
    val x5701 = OpDef(op=FltAdd, inputs=List(x5700, Const(1.0))).name("x5701").ctrl(x5756).srcCtx("BlackScholes.scala:21:48") // FltAdd(x5700,Const(1))
    val x5702 = OpDef(op=FltDiv, inputs=List(Const(1.0), x5701)).name("x5702").ctrl(x5756).srcCtx("BlackScholes.scala:21:27:xK2") // FltDiv(Const(1),x5701)
    val x5703 = OpDef(op=FltMul, inputs=List(x5702, x5702)).name("x5703").ctrl(x5756).srcCtx("BlackScholes.scala:23:21:xK2_2") // FltMul(x5702,x5702)
    val x5704 = OpDef(op=FltMul, inputs=List(x5703, x5702)).name("x5704").ctrl(x5756).srcCtx("BlackScholes.scala:24:23:xK2_3") // FltMul(x5703,x5702)
    val x5705 = OpDef(op=FltMul, inputs=List(x5704, x5702)).name("x5705").ctrl(x5756).srcCtx("BlackScholes.scala:25:23:xK2_4") // FltMul(x5704,x5702)
    val x5706 = OpDef(op=FltMul, inputs=List(x5705, x5702)).name("x5706").ctrl(x5756).srcCtx("BlackScholes.scala:26:23:xK2_5") // FltMul(x5705,x5702)
    val x5707 = OpDef(op=FltMul, inputs=List(x5702, Const(0.31938154))).name("x5707").ctrl(x5756).srcCtx("BlackScholes.scala:28:25:xLocal_10") // FltMul(x5702,Const(0.319381535053253173828125))
    val x5708 = OpDef(op=FltMul, inputs=List(x5703, Const(-0.35656378))).name("x5708").ctrl(x5756).srcCtx("BlackScholes.scala:29:27:xLocal_20") // FltMul(x5703,Const(-0.3565637767314910888671875))
    val x5709 = OpDef(op=FltMul, inputs=List(x5704, Const(1.7814779))).name("x5709").ctrl(x5756).srcCtx("BlackScholes.scala:30:27:xLocal_30") // FltMul(x5704,Const(1.78147792816162109375))
    val x5710 = OpDef(op=FltMul, inputs=List(x5705, Const(-1.8212559))).name("x5710").ctrl(x5756).srcCtx("BlackScholes.scala:31:27:xLocal_31") // FltMul(x5705,Const(-1.8212559223175048828125))
    val x5711 = OpDef(op=FltMul, inputs=List(x5706, Const(1.3302745))).name("x5711").ctrl(x5756).srcCtx("BlackScholes.scala:32:27:xLocal_32") // FltMul(x5706,Const(1.33027446269989013671875))
    val x5712 = OpDef(op=FltAdd, inputs=List(x5708, x5709)).name("x5712").ctrl(x5756).srcCtx("BlackScholes.scala:34:31:xLocal_21") // FltAdd(x5708,x5709)
    val x5713 = OpDef(op=FltAdd, inputs=List(x5712, x5710)).name("x5713").ctrl(x5756).srcCtx("BlackScholes.scala:35:31:xLocal_22") // FltAdd(x5712,x5710)
    val x5714 = OpDef(op=FltAdd, inputs=List(x5713, x5711)).name("x5714").ctrl(x5756).srcCtx("BlackScholes.scala:36:31:xLocal_23") // FltAdd(x5713,x5711)
    val x5715 = OpDef(op=FltAdd, inputs=List(x5714, x5707)).name("x5715").ctrl(x5756).srcCtx("BlackScholes.scala:37:30:xLocal_1") // FltAdd(x5714,x5707)
    val x5716 = OpDef(op=FltMul, inputs=List(x5715, x5699)).name("x5716").ctrl(x5756).srcCtx("BlackScholes.scala:39:28:xLocal0") // FltMul(x5715,x5699)
    val x5717 = OpDef(op=FltNeg, inputs=List(x5716)).name("x5717").ctrl(x5756).srcCtx("BlackScholes.scala:40:19") // FltNeg(x5716)
    val x5718 = OpDef(op=FltAdd, inputs=List(x5717, Const(1.0))).name("x5718").ctrl(x5756).srcCtx("BlackScholes.scala:40:28:xLocal") // FltAdd(x5717,Const(1))
    val x5719 = OpDef(op=FltLt, inputs=List(x5676, Const(0.0))).name("x5719").ctrl(x5756).srcCtx("BlackScholes.scala:42:11") // FltLt(x5676,Const(0.0))
    val x5720 = OpDef(op=MuxOp, inputs=List(x5719, x5716, x5718)).name("x5720").ctrl(x5756).srcCtx("BlackScholes.scala:42:8:nofXd2") // Mux(x5719,x5716,x5718)
    val x5721 = OpDef(op=FltNeg, inputs=List(x5567)).name("x5721").ctrl(x5756).srcCtx("BlackScholes.scala:58:44") // FltNeg(x5567)
    val x5722 = OpDef(op=FltMul, inputs=List(x5721, x5571)).name("x5722").ctrl(x5756).srcCtx("BlackScholes.scala:58:50") // FltMul(x5721,x5571)
    val x5723 = OpDef(op=FltLt, inputs=List(x5722, Const(-3.5))).name("x5723").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltLt(x5722,Const(-3.50))
    val x5724 = OpDef(op=FltLt, inputs=List(x5722, Const(-1.2))).name("x5724").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltLt(x5722,Const(-1.2000000476837158203125))
    val x5725 = OpDef(op=FltMul, inputs=List(x5722, Const(0.1))).name("x5725").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltMul(x5722,Const(0.100000001490116119384765625))
    val x5726 = OpDef(op=FltAdd, inputs=List(x5725, Const(0.35))).name("x5726").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(x5725,Const(0.3499999940395355224609375))
    val x5727 = OpDef(op=FltAdd, inputs=List(Const(1.0), x5722)).name("x5727").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(Const(1),x5722)
    val x5728 = OpDef(op=FltMul, inputs=List(x5722, x5722)).name("x5728").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltMul(x5722,x5722)
    val x5729 = OpDef(op=FltDiv, inputs=List(x5728, Const(2.0))).name("x5729").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltDiv(x5728,Const(2))
    val x5730 = OpDef(op=FltAdd, inputs=List(x5727, x5729)).name("x5730").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(x5727,x5729)
    val x5731 = OpDef(op=FltMul, inputs=List(x5728, x5722)).name("x5731").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltMul(x5728,x5722)
    val x5732 = OpDef(op=FltDiv, inputs=List(x5731, Const(6.0))).name("x5732").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltDiv(x5731,Const(6.0))
    val x5733 = OpDef(op=FltAdd, inputs=List(x5730, x5732)).name("x5733").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(x5730,x5732)
    val x5734 = OpDef(op=FltMul, inputs=List(x5731, x5722)).name("x5734").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltMul(x5731,x5722)
    val x5735 = OpDef(op=FltDiv, inputs=List(x5734, Const(24.0))).name("x5735").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltDiv(x5734,Const(24.0))
    val x5736 = OpDef(op=FltAdd, inputs=List(x5733, x5735)).name("x5736").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(x5733,x5735)
    val x5737 = OpDef(op=FltMul, inputs=List(x5734, x5722)).name("x5737").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltMul(x5734,x5722)
    val x5738 = OpDef(op=FltDiv, inputs=List(x5737, Const(120.0))).name("x5738").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltDiv(x5737,Const(120.000))
    val x5739 = OpDef(op=FltAdd, inputs=List(x5736, x5738)).name("x5739").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // FltAdd(x5736,x5738)
    val x5740 = OpDef(op=MuxOp, inputs=List(x5724, x5726, x5739)).name("x5740").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // Mux(x5724,x5726,x5739)
    val x5741 = OpDef(op=MuxOp, inputs=List(x5723, Const(0.0), x5740)).name("x5741").ctrl(x5756).srcCtx("BlackScholes.scala:58:43") // Mux(x5723,Const(0.0),x5740)
    val x5742 = OpDef(op=FltMul, inputs=List(x5565, x5741)).name("x5742").ctrl(x5756).srcCtx("BlackScholes.scala:58:31:futureValueX") // FltMul(x5565,x5741)
    val x5743 = OpDef(op=FltNeg, inputs=List(x5675)).name("x5743").ctrl(x5756).srcCtx("BlackScholes.scala:60:21") // FltNeg(x5675)
    val x5744 = OpDef(op=FltAdd, inputs=List(x5743, Const(1.0))).name("x5744").ctrl(x5756).srcCtx("BlackScholes.scala:60:29:negNofXd1") // FltAdd(x5743,Const(1))
    val x5745 = OpDef(op=FltNeg, inputs=List(x5720)).name("x5745").ctrl(x5756).srcCtx("BlackScholes.scala:61:21") // FltNeg(x5720)
    val x5746 = OpDef(op=FltAdd, inputs=List(x5745, Const(1.0))).name("x5746").ctrl(x5756).srcCtx("BlackScholes.scala:61:29:negNofXd2") // FltAdd(x5745,Const(1))
    val x5747 = OpDef(op=FltMul, inputs=List(x5563, x5675)).name("x5747").ctrl(x5756).srcCtx("BlackScholes.scala:63:34") // FltMul(x5563,x5675)
    val x5748 = OpDef(op=FltMul, inputs=List(x5742, x5720)).name("x5748").ctrl(x5756).srcCtx("BlackScholes.scala:63:60") // FltMul(x5742,x5720)
    val x5749 = OpDef(op=FltSub, inputs=List(x5747, x5748)).name("x5749").ctrl(x5756).srcCtx("BlackScholes.scala:63:44:optionPrice1") // FltSub(x5747,x5748)
    val x5750 = OpDef(op=FltMul, inputs=List(x5742, x5746)).name("x5750").ctrl(x5756).srcCtx("BlackScholes.scala:64:38") // FltMul(x5742,x5746)
    val x5751 = OpDef(op=FltMul, inputs=List(x5563, x5744)).name("x5751").ctrl(x5756).srcCtx("BlackScholes.scala:64:63") // FltMul(x5563,x5744)
    val x5752 = OpDef(op=FltSub, inputs=List(x5750, x5751)).name("x5752").ctrl(x5756).srcCtx("BlackScholes.scala:64:51:optionPrice2") // FltSub(x5750,x5751)
    val x5753 = OpDef(op=FixEql, inputs=List(x5573, Const(0))).name("x5753").ctrl(x5756).srcCtx("BlackScholes.scala:65:15") // FixEql(x5573,Const(0))
    val x5754 = OpDef(op=MuxOp, inputs=List(x5753, x5752, x5749)).name("x5754").ctrl(x5756).srcCtx("BlackScholes.scala:65:8:price") // Mux(x5753,x5752,x5749)
    val x5755 = StoreBanks(List(x5441_d0_b0), List(b3572), x5754).name("x5755").ctrl(x5756).srcCtx("BlackScholes.scala:116:26") // ParSRAMStore(x5441,List(List(b3572)),List(x5754),List(x5561))
    val x5758 = UnitController(style=SeqPipe, level=InnerControl).name("x5758").ctrl(x5782).srcCtx("BlackScholes.scala:96:34") // UnitPipe(List(b3433),Block(Const(())))
    val x5757 = OpDef(op=FixAdd, inputs=List(b3432, Const(32))).name("x5757").ctrl(x5758).srcCtx("BlackScholes.scala:118:22") // FixAdd(b3432,Const(32))
    val x5781 = UnitController(style=StreamPipe, level=OuterControl).name("x5781").ctrl(x5782).srcCtx("BlackScholes.scala:118:34") // UnitPipe(List(b3433),Block(Const(())))
    val b5818 = StreamOut(field="offset").name("b5818").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // x5759 = StreamOutNew(BurstCmdBus)
    isAccum(b5818) = false
    bufferDepthOf(b5818) = 1
    val b5819 = StreamOut(field="size").name("b5819").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // x5759 = StreamOutNew(BurstCmdBus)
    isAccum(b5819) = false
    bufferDepthOf(b5819) = 1
    val x5760 = StreamOut(field="data").name("x5760").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // x5760 = StreamOutNew(BurstFullDataBus())
    isAccum(x5760) = false
    bufferDepthOf(x5760) = 1
    val x5761 = StreamIn(field="ack").name("x5761").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // x5761 = StreamInNew(BurstAckBus)
    isAccum(x5761) = false
    bufferDepthOf(x5761) = 1
    val x5769 = UnitController(style=SeqPipe, level=InnerControl).name("x5769").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // UnitPipe(List(b3433),Block(x5768))
    val x5762 = b3432 // FixConvert(b3432,TRUE,_32,_0) (Same Type. No op)
    val x5763 = OpDef(op=FixSla, inputs=List(x5762, Const(2))).name("x5763").ctrl(x5769).srcCtx("BlackScholes.scala:118:34") // FixLsh(x5762,Const(2))
    val x5764 = x5763 // FixConvert(x5763,TRUE,_64,_0)
    val x5765 = DramAddress(x5425).name("x5765").ctrl(x5769).srcCtx("BlackScholes.scala:118:34") // GetDRAMAddress(x5425)
    val x5767_x5766 = OpDef(op=FixAdd, inputs=List(x5764, x5765)).name("x5767_x5766").ctrl(x5769).srcCtx("BlackScholes.scala:118:34") // FixAdd(x5764,x5765)
    // x5767 = SimpleStruct(ArrayBuffer((offset,x5766), (size,Const(128)), (isLoad,Const(false))))
    val x5768_b5820_b5818 = WriteMem(b5818, x5767_x5766).name("x5768_b5820_b5818").ctrl(x5769).srcCtx("BlackScholes.scala:118:34") // StreamWrite(x5759,x5767,b3433)
    val x5768_b5821_b5819 = WriteMem(b5819, Const(128)).name("x5768_b5821_b5819").ctrl(x5769).srcCtx("BlackScholes.scala:118:34") // StreamWrite(x5759,x5767,b3433)
    val x5770 = Counter(min=Const(0), max=Const(32), step=Const(1), par=16).name("x5770").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // CounterNew(Const(0),Const(32),Const(1),Const(16))
    val x5771 = CounterChain(List(x5770)).name("x5771").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // CounterChainNew(List(x5770))
    val x5777 = LoopController(style=InnerPipe, level=InnerControl, cchain=x5771).name("x5777").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // UnrolledForeach(List(b3433),x5771,Block(Const(())),List(List(b3785)),List(List(b3786)))
    val b3785 = CounterIter(x5770, None).name("b3785").ctrl(x5777) // b3785
    val b3786 = Const(true).name("b3786").ctrl(x5777) // b3786
    val x5772 = OpDef(op=BitAnd, inputs=List(b3786, b3433)).name("x5772").ctrl(x5777).srcCtx("UnrollingBase.scala:28:66") // And(b3786,b3433)
    val x5773 = LoadBanks(List(x5441_d0_b0), List(b3785)).name("x5773").ctrl(x5777).srcCtx("BlackScholes.scala:118:34") // ParSRAMLoad(x5441,List(List(b3785)),List(x5772))
    val x5775_x5774 = x5773 // x5774 = VectorApply(x5773,0)
    // x5775 = SimpleStruct(ArrayBuffer((_1,x5774), (_2,Const(true))))
    val x5776_x5776_x5760 = WriteMem(x5760, x5775_x5774).name("x5776_x5776_x5760").ctrl(x5777).srcCtx("BlackScholes.scala:118:34") // ParStreamWrite(x5760,List(x5775),List(x5772))
    val x5778 = FringeDenseStore(dram=List(x5425), cmdStream=List(b5818, b5819), dataStream=List(x5760), ackStream=List(x5761)).name("x5778").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // FringeDenseStore(x5425,x5759,x5760,x5761)
    val x5780 = UnitController(style=SeqPipe, level=InnerControl).name("x5780").ctrl(x5781).srcCtx("BlackScholes.scala:118:34") // UnitPipe(List(b3433),Block(Const(())))
    val x5779_x5779 = ReadMem(x5761).name("x5779_x5779").ctrl(x5780).srcCtx("BlackScholes.scala:118:34") // StreamRead(x5761,b3433)
    
  }
}
