#!/bin/bash

APPS=()
APPS+=('DotProduct')
APPS+=('OuterProduct')
APPS+=('TPCHQ6')
APPS+=('GDA')
APPS+=('GEMM_Blocked')
APPS+=('LogReg')
APPS+=('SGD_minibatch')
APPS+=('Kmeans')
APPS+=('SPMV_ELL')
APPS+=('P4')
APPS+=('DoubleLoad')
APPS+=('PensieveStream')
APPS+=('BlackScholes')
APPS+=('lenet_loops')

thread_count=4

logDir=out/regression/

RED='\033[0;31m'
Cyan='\033[0;36m'
NC='\033[0m'

if [[ $1 == *"s" ]]; then
    for log in $logDir/*.log; do
      echo -e "${Cyan}${log}${NC}========="
      fail=$(grep "\[fail\]\|\[error\]" $log)
      success=$(grep "success" $log)
      if [[ $fail || $success ]]; then
        echo $fail$success
      else
        tail $log
      fi
    done

elif [[ $1 == *"r" ]]; then
    mkdir -p $logDir
    pids=()
    runningApps=()
    for APP in ${APPS[@]}; do
      echo running $APP &
      log=$logDir/$APP.log
      [ -e $log ] && rm $log
      bin/pir $APP $@ > $log 2>&1 &
      pids+=($!)
      runningApps+=($APP)
      sleep 1
      if [[ ${#pids[@]} -ge $thread_count ]]; then
         # wait for all pids
         echo numer of process running ${#pids[@]} waiting ...
         for pid in ${pids[*]}; do
             wait $pid
         done
         # print status of APPS just finished
         for APP in ${runningApps[@]}; do
           log=$logDir/$APP.log
           echo -e "${Cyan}${log}${NC}========="
           fail=$(grep "\[fail\]\|\[error\]" $log)
           success=$(grep "success" $log)
           if [[ $fail || $success ]]; then
             echo $fail$success
           else
             tail $log
           fi
           if [[ $fail ]]; then
             exit
           fi
         done
         # clear pids and runningApps
         pids=()
      fi
    done
    echo waiting for everyone ... 
    for pid in ${pids[*]}; do
        wait $pid
    done

    # print status at the end
    for APP in ${APPS[@]}; do
      log=$logDir/$APP.log
      echo -e "${Cyan}${log}${NC}========="
      fail=$(grep "\[fail\]\|\[error\]" $log)
      success=$(grep "success" $log)
      if [[ $fail || $success ]]; then
        echo $fail$success
      else
        tail $log
      fi
    done
    
fi
