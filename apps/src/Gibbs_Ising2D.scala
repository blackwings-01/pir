import pir.graph.{Mux =>_, _}
import pir.codegen._
import pir.plasticine.config._
import pir.Design
import pir.util.enums._
import pir.util._
import pir.PIRApp

object Gibbs_Ising2D extends PIRApp {
  def main(top:Top) = {
    val bus_1512_s = Scalar("bus_1512")
    val bus_1522_s = Scalar("bus_1522")
    val exp_lut_oc = OffChip("exp_lut")
    val x2931_9_s = Scalar("x2931_9")
    val x2931_11_s = Scalar("x2931_11")
    val x2954_x2967_data_s = Scalar("x2954_x2967_data")
    val x2931_4_s = Scalar("x2931_4")
    val exp_lut_da = DRAMAddress("exp_lut", "exp_lut")
    val x2976_0_s = Scalar("x2976_0")
    val bus_1538_s = Scalar("bus_1538")
    val grid_dram_oc = OffChip("grid_dram")
    val x2931_2_s = Scalar("x2931_2")
    val exp_posbias_argin = ArgIn("exp_posbias")
    val x2931_x3230_s = Scalar("x2931_x3230")
    val x2933_x2943_data_s = Scalar("x2933_x2943_data")
    val x2931_10_s = Scalar("x2931_10")
    val x2931_6_s = Scalar("x2931_6")
    val x2931_7_s = Scalar("x2931_7")
    val x2930_2_s = Scalar("x2930_2")
    val x2979_b3328_x2991_b3330_s = Scalar("x2979_b3328_x2991_b3330")
    val x2980_x2993_data_s = Scalar("x2980_x2993_data")
    val x3008_x3019_s = Scalar("x3008_x3019")
    val bus_1479_s = Scalar("bus_1479")
    val x2931_x3080_s = Scalar("x2931_x3080")
    val x2953_b3322_x2965_b3324_s = Scalar("x2953_b3322_x2965_b3324")
    val grid_dram_da = DRAMAddress("grid_dram", "grid_dram")
    val x3009_x3024_s = Scalar("x3009_x3024")
    val x2931_3_s = Scalar("x2931_3")
    val x2930_3_s = Scalar("x2930_3")
    val x3237_b3389_x3250_b3391_s = Scalar("x3237_b3389_x3250_b3391")
    val bus_1472_s = Scalar("bus_1472")
    val x2931_0_s = Scalar("x2931_0")
    val x2932_b3318_x2941_b3320_s = Scalar("x2932_b3318_x2941_b3320")
    val bias_dram_oc = OffChip("bias_dram")
    val bus_1456_s = Scalar("bus_1456")
    val bus_1489_s = Scalar("bus_1489")
    val x3237_b3390_x3250_b3392_s = Scalar("x3237_b3390_x3250_b3392")
    val x2931_x3180_s = Scalar("x2931_x3180")
    val x3010_x3029_s = Scalar("x3010_x3029")
    val bus_1439_s = Scalar("bus_1439")
    val x2931_x3130_s = Scalar("x2931_x3130")
    val bus_1505_s = Scalar("bus_1505")
    val bus_1446_s = Scalar("bus_1446")
    val x3007_x3014_s = Scalar("x3007_x3014")
    val x2931_8_s = Scalar("x2931_8")
    val x2930_0_s = Scalar("x2930_0")
    val x2930_1_s = Scalar("x2930_1")
    val x2979_b3327_x2991_b3329_s = Scalar("x2979_b3327_x2991_b3329")
    val x2932_b3317_x2941_b3319_s = Scalar("x2932_b3317_x2941_b3319")
    val exp_negbias_argin = ArgIn("exp_negbias")
    val bias_dram_da = DRAMAddress("bias_dram", "bias_dram")
    val bus_1545_s = Scalar("bus_1545")
    val x2931_5_s = Scalar("x2931_5")
    val x2931_1_s = Scalar("x2931_1")
    val x2953_b3321_x2965_b3323_s = Scalar("x2953_b3321_x2965_b3323")
    val bus_1423_s = Scalar("bus_1423")
    val iters_argin = ArgIn("iters")
    val x3264 = Sequential(name="x3264",parent=top) { implicit CU => 
      val x3264_unit = CounterChain(name = "x3264_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x2930_dsp0 = MemoryPipeline(name="x2930_dsp0",parent="x3264") { implicit CU => 
      val x3035 = CU.temp(None)
      val x3041 = CU.temp(None)
      val x3058 = CU.temp(None)
      val x3057 = CU.temp(None)
      val x3045 = CU.temp(None)
      val x3056 = CU.temp(None)
      val x3049 = CU.temp(None)
      val x3055 = CU.temp(None)
      val x2948 = ScalarFIFO(size=1,name="x2948").wtPort(x2933_x2943_data_s)
      val x3039 = ScalarFIFO(size=1,name="x3039").wtPort(x2931_8_s)
      val x3047 = ScalarFIFO(size=1,name="x3047").wtPort(x2931_3_s)
      val x3043 = ScalarFIFO(size=1,name="x3043").wtPort(x2931_7_s)
      val x3051 = ScalarFIFO(size=1,name="x3051").wtPort(x2931_2_s)
      val x3053 = ScalarFIFO(size=1,name="x3053").wtPort(x2931_1_s)
      val x2945 = CounterChain.copy("x2949", "x2945")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3034 = CounterChain.copy("x3081", "x3034")
      val x2930 = SRAM(size=9,name="x2930",banking = Strided(1)).wtPort(x2948.readPort).rdPort(x2930_0_s).wtAddr(x2945(0))
      RAStage(operands=List(CU.ctr(x3034(0)), Const(1)), op=FixSub, results=List(x3049))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3045))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3035))
      RAStage(operands=List(CU.ctr(x3034(0)), Const(1)), op=FixAdd, results=List(x3041))
      RAStage(operands=List(CU.load(x3039), CU.load(x3043)), op=FixAdd, results=List(x3055))
      RAStage(operands=List(x3055, CU.load(x3047)), op=FixAdd, results=List(x3056))
      RAStage(operands=List(x3056, CU.load(x3051)), op=FixAdd, results=List(x3057))
      RAStage(operands=List(x3057, CU.load(x3053)), op=FixMul, results=List(x3058))
      RAStage(operands=List(x3058, Const(4)), op=FixAdd, results=List(x2930.readAddr))
    }
    val x2930_dsp1 = MemoryPipeline(name="x2930_dsp1",parent="x3264") { implicit CU => 
      val x3107 = CU.temp(None)
      val x3108 = CU.temp(None)
      val x3106 = CU.temp(None)
      val x3095 = CU.temp(None)
      val x3099 = CU.temp(None)
      val x3091 = CU.temp(None)
      val x3105 = CU.temp(None)
      val x3085 = CU.temp(None)
      val x2948 = ScalarFIFO(size=1,name="x2948").wtPort(x2933_x2943_data_s)
      val x3093 = ScalarFIFO(size=1,name="x3093").wtPort(x2931_7_s)
      val x3103 = ScalarFIFO(size=1,name="x3103").wtPort(x2931_1_s)
      val x3097 = ScalarFIFO(size=1,name="x3097").wtPort(x2931_4_s)
      val x3101 = ScalarFIFO(size=1,name="x3101").wtPort(x2931_2_s)
      val x3089 = ScalarFIFO(size=1,name="x3089").wtPort(x2931_9_s)
      val x2945 = CounterChain.copy("x2949", "x2945")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3084 = CounterChain.copy("x3131", "x3084")
      val x2930 = SRAM(size=9,name="x2930",banking = Strided(1)).wtPort(x2948.readPort).rdPort(x2930_1_s).wtAddr(x2945(0))
      RAStage(operands=List(CU.ctr(x3084(0)), Const(1)), op=FixSub, results=List(x3099))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3095))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3085))
      RAStage(operands=List(CU.ctr(x3084(0)), Const(1)), op=FixAdd, results=List(x3091))
      RAStage(operands=List(CU.load(x3089), CU.load(x3093)), op=FixAdd, results=List(x3105))
      RAStage(operands=List(x3105, CU.load(x3097)), op=FixAdd, results=List(x3106))
      RAStage(operands=List(x3106, CU.load(x3101)), op=FixAdd, results=List(x3107))
      RAStage(operands=List(x3107, CU.load(x3103)), op=FixMul, results=List(x3108))
      RAStage(operands=List(x3108, Const(4)), op=FixAdd, results=List(x2930.readAddr))
    }
    val x2930_dsp2 = MemoryPipeline(name="x2930_dsp2",parent="x3264") { implicit CU => 
      val x3145 = CU.temp(None)
      val x3149 = CU.temp(None)
      val x3158 = CU.temp(None)
      val x3157 = CU.temp(None)
      val x3141 = CU.temp(None)
      val x3156 = CU.temp(None)
      val x3135 = CU.temp(None)
      val x3155 = CU.temp(None)
      val x3139 = ScalarFIFO(size=1,name="x3139").wtPort(x2931_10_s)
      val x3151 = ScalarFIFO(size=1,name="x3151").wtPort(x2931_2_s)
      val x2948 = ScalarFIFO(size=1,name="x2948").wtPort(x2933_x2943_data_s)
      val x3143 = ScalarFIFO(size=1,name="x3143").wtPort(x2931_7_s)
      val x3153 = ScalarFIFO(size=1,name="x3153").wtPort(x2931_1_s)
      val x3147 = ScalarFIFO(size=1,name="x3147").wtPort(x2931_5_s)
      val x2945 = CounterChain.copy("x2949", "x2945")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3134 = CounterChain.copy("x3181", "x3134")
      val x2930 = SRAM(size=9,name="x2930",banking = Strided(1)).wtPort(x2948.readPort).rdPort(x2930_2_s).wtAddr(x2945(0))
      RAStage(operands=List(CU.ctr(x3134(0)), Const(1)), op=FixSub, results=List(x3149))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3145))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3135))
      RAStage(operands=List(CU.ctr(x3134(0)), Const(1)), op=FixAdd, results=List(x3141))
      RAStage(operands=List(CU.load(x3139), CU.load(x3143)), op=FixAdd, results=List(x3155))
      RAStage(operands=List(x3155, CU.load(x3147)), op=FixAdd, results=List(x3156))
      RAStage(operands=List(x3156, CU.load(x3151)), op=FixAdd, results=List(x3157))
      RAStage(operands=List(x3157, CU.load(x3153)), op=FixMul, results=List(x3158))
      RAStage(operands=List(x3158, Const(4)), op=FixAdd, results=List(x2930.readAddr))
    }
    val x2930_dsp3 = MemoryPipeline(name="x2930_dsp3",parent="x3264") { implicit CU => 
      val x3195 = CU.temp(None)
      val x3191 = CU.temp(None)
      val x3185 = CU.temp(None)
      val x3205 = CU.temp(None)
      val x3208 = CU.temp(None)
      val x3206 = CU.temp(None)
      val x3199 = CU.temp(None)
      val x3207 = CU.temp(None)
      val x3189 = ScalarFIFO(size=1,name="x3189").wtPort(x2931_11_s)
      val x3203 = ScalarFIFO(size=1,name="x3203").wtPort(x2931_1_s)
      val x3197 = ScalarFIFO(size=1,name="x3197").wtPort(x2931_6_s)
      val x2948 = ScalarFIFO(size=1,name="x2948").wtPort(x2933_x2943_data_s)
      val x3201 = ScalarFIFO(size=1,name="x3201").wtPort(x2931_2_s)
      val x3193 = ScalarFIFO(size=1,name="x3193").wtPort(x2931_7_s)
      val x2945 = CounterChain.copy("x2949", "x2945")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x2930 = SRAM(size=9,name="x2930",banking = Strided(1)).wtPort(x2948.readPort).rdPort(x2930_3_s).wtAddr(x2945(0))
      RAStage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixSub, results=List(x3199))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3195))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3185))
      RAStage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixAdd, results=List(x3191))
      RAStage(operands=List(CU.load(x3189), CU.load(x3193)), op=FixAdd, results=List(x3205))
      RAStage(operands=List(x3205, CU.load(x3197)), op=FixAdd, results=List(x3206))
      RAStage(operands=List(x3206, CU.load(x3201)), op=FixAdd, results=List(x3207))
      RAStage(operands=List(x3207, CU.load(x3203)), op=FixMul, results=List(x3208))
      RAStage(operands=List(x3208, Const(4)), op=FixAdd, results=List(x2930.readAddr))
    }
    val x2931_dsp0 = MemoryPipeline(name="x2931_dsp0",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val b3393 = CU.temp(None)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3253 = CounterChain.copy("x3259", "x3253")
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3236 = CounterChain.copy("x3263", "x3236")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_0_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3236(0)), Const(64)), op=FixMul, results=List(b3393))
      RAStage(operands=List(b3393, CU.ctr(x3253(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp1 = MemoryPipeline(name="x2931_dsp1",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val b3383 = CU.temp(None)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_1_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3383))
      RAStage(operands=List(b3383, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp2 = MemoryPipeline(name="x2931_dsp2",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val x3200 = CU.temp(None)
      val b3381 = CU.temp(None)
      val x3199 = CU.temp(None)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_2_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixSub, results=List(x3199))
      RAStage(operands=List(x3199, Const(64)), op=FixMod, results=List(x3200))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3381))
      RAStage(operands=List(b3381, x3200), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp3 = MemoryPipeline(name="x2931_dsp3",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val x3045 = CU.temp(None)
      val b3337 = CU.temp(None)
      val x3046 = CU.temp(None)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3034 = CounterChain.copy("x3081", "x3034")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_3_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3045))
      RAStage(operands=List(x3045, Const(32)), op=FixMod, results=List(x3046))
      RAStage(operands=List(x3046, Const(64)), op=FixMul, results=List(b3337))
      RAStage(operands=List(b3337, CU.ctr(x3034(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp4 = MemoryPipeline(name="x2931_dsp4",parent="x3264") { implicit CU => 
      val b3351 = CU.temp(None)
      val b3387 = CU.temp(None)
      val x3095 = CU.temp(None)
      val x3096 = CU.temp(None)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3084 = CounterChain.copy("x3131", "x3084")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_4_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3095))
      RAStage(operands=List(x3095, Const(32)), op=FixMod, results=List(x3096))
      RAStage(operands=List(x3096, Const(64)), op=FixMul, results=List(b3351))
      RAStage(operands=List(b3351, CU.ctr(x3084(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp5 = MemoryPipeline(name="x2931_dsp5",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val x3145 = CU.temp(None)
      val x3146 = CU.temp(None)
      val b3365 = CU.temp(None)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3134 = CounterChain.copy("x3181", "x3134")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_5_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3145))
      RAStage(operands=List(x3145, Const(32)), op=FixMod, results=List(x3146))
      RAStage(operands=List(x3146, Const(64)), op=FixMul, results=List(b3365))
      RAStage(operands=List(b3365, CU.ctr(x3134(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp6 = MemoryPipeline(name="x2931_dsp6",parent="x3264") { implicit CU => 
      val x3195 = CU.temp(None)
      val b3379 = CU.temp(None)
      val b3387 = CU.temp(None)
      val x3196 = CU.temp(None)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_6_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List(x3195))
      RAStage(operands=List(x3195, Const(32)), op=FixMod, results=List(x3196))
      RAStage(operands=List(x3196, Const(64)), op=FixMul, results=List(b3379))
      RAStage(operands=List(b3379, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp7 = MemoryPipeline(name="x2931_dsp7",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val x3191 = CU.temp(None)
      val x3192 = CU.temp(None)
      val b3377 = CU.temp(None)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_7_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixAdd, results=List(x3191))
      RAStage(operands=List(x3191, Const(64)), op=FixMod, results=List(x3192))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3377))
      RAStage(operands=List(b3377, x3192), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp8 = MemoryPipeline(name="x2931_dsp8",parent="x3264") { implicit CU => 
      val x3035 = CU.temp(None)
      val b3387 = CU.temp(None)
      val b3333 = CU.temp(None)
      val x3036 = CU.temp(None)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3034 = CounterChain.copy("x3081", "x3034")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_8_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3035))
      RAStage(operands=List(x3035, Const(32)), op=FixMod, results=List(x3036))
      RAStage(operands=List(x3036, Const(64)), op=FixMul, results=List(b3333))
      RAStage(operands=List(b3333, CU.ctr(x3034(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp9 = MemoryPipeline(name="x2931_dsp9",parent="x3264") { implicit CU => 
      val x3086 = CU.temp(None)
      val b3387 = CU.temp(None)
      val b3347 = CU.temp(None)
      val x3085 = CU.temp(None)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3084 = CounterChain.copy("x3131", "x3084")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_9_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3085))
      RAStage(operands=List(x3085, Const(32)), op=FixMod, results=List(x3086))
      RAStage(operands=List(x3086, Const(64)), op=FixMul, results=List(b3347))
      RAStage(operands=List(b3347, CU.ctr(x3084(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp10 = MemoryPipeline(name="x2931_dsp10",parent="x3264") { implicit CU => 
      val b3387 = CU.temp(None)
      val x3136 = CU.temp(None)
      val b3361 = CU.temp(None)
      val x3135 = CU.temp(None)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3134 = CounterChain.copy("x3181", "x3134")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_10_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3135))
      RAStage(operands=List(x3135, Const(32)), op=FixMod, results=List(x3136))
      RAStage(operands=List(x3136, Const(64)), op=FixMul, results=List(b3361))
      RAStage(operands=List(b3361, CU.ctr(x3134(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2931_dsp11 = MemoryPipeline(name="x2931_dsp11",parent="x3264") { implicit CU => 
      val b3375 = CU.temp(None)
      val b3387 = CU.temp(None)
      val x3185 = CU.temp(None)
      val x3186 = CU.temp(None)
      val x3230 = ScalarFIFO(size=1,name="x3230").wtPort(x2931_x3230_s)
      val x3080 = ScalarFIFO(size=1,name="x3080").wtPort(x2931_x3080_s)
      val x3180 = ScalarFIFO(size=1,name="x3180").wtPort(x2931_x3180_s)
      val x2973 = ScalarFIFO(size=1,name="x2973").wtPort(x2954_x2967_data_s)
      val x3130 = ScalarFIFO(size=1,name="x3130").wtPort(x2931_x3130_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2931 = SRAM(size=2048,name="x2931",banking = Strided(1)).wtPort(x2973.readPort).wtPort(x3080.readPort).wtPort(x3130.readPort).wtPort(x3180.readPort).wtPort(x3230.readPort).rdPort(x2931_11_s)
      WAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3387))
      WAStage(operands=List(b3387, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List(x3185))
      RAStage(operands=List(x3185, Const(32)), op=FixMod, results=List(x3186))
      RAStage(operands=List(x3186, Const(64)), op=FixMul, results=List(b3375))
      RAStage(operands=List(b3375, CU.ctr(x3184(0))), op=FixAdd, results=List(x2931.readAddr))
    }
    val x2950 = StreamController(name="x2950",parent=x3264) { implicit CU => 
      val x2950_unit = CounterChain(name = "x2950_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
    }
    val x2942_0 = Pipeline(name="x2942_0",parent=x2950) { implicit CU => 
      val x2935 = CU.temp(None)
      val x2937 = ScalarBuffer(name="x2937").wtPort(exp_lut_da)
      val x2942_unit = CounterChain(name = "x2942_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(Const(0), Const(3)), op=FixSla, results=List(x2935))
      Stage(operands=List(x2935, CU.load(x2937)), op=FixAdd, results=List(CU.scalarOut(x2932_b3317_x2941_b3319_s)))
      Stage(operands=List(Const(72)), op=Bypass, results=List(CU.scalarOut(x2932_b3318_x2941_b3320_s)))
    }
    val x2943 = MemoryController(name="x2943",parent=x2950,offchip=exp_lut_oc, mctpe=TileLoad) { implicit CU => 
      val x2932_b3318 = ScalarFIFO(size=1,name="size").wtPort(x2932_b3318_x2941_b3320_s)
      val x2932_b3317 = ScalarFIFO(size=1,name="offset").wtPort(x2932_b3317_x2941_b3319_s)
      CU.newSout("data", x2933_x2943_data_s)
    }
    val x2949 = Pipeline(name="x2949",parent=x2950) { implicit CU => 
      val ctr1 = Counter(min=Const(0), max=Const(9), step=Const(1), par=1) // Counter
      val x2945 = CounterChain(name = "x2945", ctr1).iter(9)
    }
    val x2975 = StreamController(name="x2975",parent=x3264) { implicit CU => 
      val ctr2 = Counter(min=Const(0), max=Const(32), step=Const(1), par=1) // Counter
      val x2952 = CounterChain(name = "x2952", ctr2).iter(32)
    }
    val x2966_0 = Pipeline(name="x2966_0",parent=x2975) { implicit CU => 
      val x2956 = CU.temp(None)
      val x2958 = CU.temp(None)
      val x2959 = CU.temp(None)
      val x2961 = ScalarBuffer(name="x2961").wtPort(grid_dram_da)
      val x2952 = CounterChain.copy("x2975", "x2952")
      val x2966_unit = CounterChain(name = "x2966_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x2952(0)), Const(6)), op=FixSla, results=List(x2956))
      Stage(operands=List(x2956, Const(0)), op=FixAdd, results=List(x2958))
      Stage(operands=List(x2958, Const(2)), op=FixSla, results=List(x2959))
      Stage(operands=List(x2959, CU.load(x2961)), op=FixAdd, results=List(CU.scalarOut(x2953_b3321_x2965_b3323_s)))
      Stage(operands=List(Const(256)), op=Bypass, results=List(CU.scalarOut(x2953_b3322_x2965_b3324_s)))
    }
    val x2967 = MemoryController(name="x2967",parent=x2975,offchip=grid_dram_oc, mctpe=TileLoad) { implicit CU => 
      val x2953_b3322 = ScalarFIFO(size=1,name="size").wtPort(x2953_b3322_x2965_b3324_s)
      val x2953_b3321 = ScalarFIFO(size=1,name="offset").wtPort(x2953_b3321_x2965_b3323_s)
      CU.newSout("data", x2954_x2967_data_s)
    }
    val x2976_dsp0 = MemoryPipeline(name="x2976_dsp0",parent="x3264") { implicit CU => 
      val b3385 = CU.temp(None)
      val b3331 = CU.temp(None)
      val x2999 = ScalarFIFO(size=1,name="x2999").wtPort(x2980_x2993_data_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x2995 = CounterChain.copy("x3000", "x2995")
      val x2978 = CounterChain.copy("x3001", "x2978")
      val x2976 = SRAM(size=2048,name="x2976",banking = Strided(1)).wtPort(x2999.readPort).rdPort(x2976_0_s)
      WAStage(operands=List(CU.ctr(x2978(0)), Const(64)), op=FixMul, results=List(b3331))
      WAStage(operands=List(b3331, CU.ctr(x2995(0))), op=FixAdd, results=List(x2976.writeAddr))
      RAStage(operands=List(CU.ctr(x3006(0)), Const(64)), op=FixMul, results=List(b3385))
      RAStage(operands=List(b3385, CU.ctr(x3184(0))), op=FixAdd, results=List(x2976.readAddr))
    }
    val x3001 = StreamController(name="x3001",parent=x3264) { implicit CU => 
      val ctr4 = Counter(min=Const(0), max=Const(32), step=Const(1), par=1) // Counter
      val x2978 = CounterChain(name = "x2978", ctr4).iter(32)
    }
    val x2992_0 = Pipeline(name="x2992_0",parent=x3001) { implicit CU => 
      val x2984 = CU.temp(None)
      val x2985 = CU.temp(None)
      val x2982 = CU.temp(None)
      val x2987 = ScalarBuffer(name="x2987").wtPort(bias_dram_da)
      val x2978 = CounterChain.copy("x3001", "x2978")
      val x2992_unit = CounterChain(name = "x2992_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x2978(0)), Const(6)), op=FixSla, results=List(x2982))
      Stage(operands=List(x2982, Const(0)), op=FixAdd, results=List(x2984))
      Stage(operands=List(x2984, Const(2)), op=FixSla, results=List(x2985))
      Stage(operands=List(x2985, CU.load(x2987)), op=FixAdd, results=List(CU.scalarOut(x2979_b3327_x2991_b3329_s)))
      Stage(operands=List(Const(256)), op=Bypass, results=List(CU.scalarOut(x2979_b3328_x2991_b3330_s)))
    }
    val x2993 = MemoryController(name="x2993",parent=x3001,offchip=bias_dram_oc, mctpe=TileLoad) { implicit CU => 
      val x2979_b3327 = ScalarFIFO(size=1,name="offset").wtPort(x2979_b3327_x2991_b3329_s)
      val x2979_b3328 = ScalarFIFO(size=1,name="size").wtPort(x2979_b3328_x2991_b3330_s)
      CU.newSout("data", x2980_x2993_data_s)
    }
    val x3000 = Pipeline(name="x3000",parent=x3001) { implicit CU => 
      val ctr5 = Counter(min=Const(0), max=Const(64), step=Const(1), par=16) // Counter
      val x2995 = CounterChain(name = "x2995", ctr5).iter(4)
    }
    val x3234 = MetaPipeline(name="x3234",parent=x3264) { implicit CU => 
      val x2912 = ScalarBuffer(name="x2912").wtPort(iters_argin)
      val ctr6 = Counter(min=Const(0), max=x2912.readPort, step=Const(1), par=1) // Counter
      val x3004 = CounterChain(name = "x3004", ctr6).iter(1)
    }
    val x3233 = MetaPipeline(name="x3233",parent=x3234) { implicit CU => 
      val ctr7 = Counter(min=Const(0), max=Const(32), step=Const(1), par=4) // Counter
      val x3006 = CounterChain(name = "x3006", ctr7).iter(8)
    }
    val x3015_0 = Pipeline(name="x3015_0",parent=x3233) { implicit CU => 
      val x3011 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3015_unit = CounterChain(name = "x3015_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x3006(0)), Const(4)), op=FixMod, results=List(x3011))
      Stage(operands=List(x3011), op=FixNeg, results=List(CU.scalarOut(x3007_x3014_s)))
    }
    val x3020_0 = Pipeline(name="x3020_0",parent=x3233) { implicit CU => 
      val x3016 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3020_unit = CounterChain(name = "x3020_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x3006(0)), Const(4)), op=FixMod, results=List(x3016))
      Stage(operands=List(x3016), op=FixNeg, results=List(CU.scalarOut(x3008_x3019_s)))
    }
    val x3025_0 = Pipeline(name="x3025_0",parent=x3233) { implicit CU => 
      val x3021 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3025_unit = CounterChain(name = "x3025_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x3006(0)), Const(4)), op=FixMod, results=List(x3021))
      Stage(operands=List(x3021), op=FixNeg, results=List(CU.scalarOut(x3009_x3024_s)))
    }
    val x3030_0 = Pipeline(name="x3030_0",parent=x3233) { implicit CU => 
      val x3026 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3030_unit = CounterChain(name = "x3030_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x3006(0)), Const(4)), op=FixMod, results=List(x3026))
      Stage(operands=List(x3026), op=FixNeg, results=List(CU.scalarOut(x3010_x3029_s)))
    }
    val x3081 = StreamController(name="x3081",parent=x3233) { implicit CU => 
      val x3007 = ScalarBuffer(name="x3007").wtPort(x3007_x3014_s)
      val ctr8 = Counter(min=x3007.readPort, max=Const(64), step=Const(1), par=1) // Counter
      val x3034 = CounterChain(name = "x3034", ctr8).iter(64)
    }
    val x3081_0 = Pipeline(name="x3081_0",parent=x3081) { implicit CU => 
      val x3073 = CU.temp(None)
      val x3074 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3034 = CounterChain.copy("x3081", "x3034")
      Stage(operands=List(Const(0), CU.ctr(x3034(0))), op=FixLt, results=List(x3073))
      Stage(operands=List(CU.ctr(x3034(0)), Const(64)), op=FixLt, results=List(x3074))
      Stage(operands=List(x3073, x3074), op=BitAnd, results=List(CU.scalarOut(bus_1423_s)))
      Stage(operands=List(CU.ctr(x3034(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List())
    }
    val x3081_1 = Pipeline(name="x3081_1",parent=x3081) { implicit CU => 
      val x3057 = CU.temp(None)
      val x3056 = CU.temp(None)
      val x3055 = CU.temp(None)
      val x3053 = ScalarFIFO(size=1,name="x3053").wtPort(x2931_1_s)
      val x3047 = ScalarFIFO(size=1,name="x3047").wtPort(x2931_3_s)
      val x3051 = ScalarFIFO(size=1,name="x3051").wtPort(x2931_2_s)
      val x3039 = ScalarFIFO(size=1,name="x3039").wtPort(x2931_8_s)
      val x3043 = ScalarFIFO(size=1,name="x3043").wtPort(x2931_7_s)
      val x3062 = ScalarFIFO(size=1,name="x3062").wtPort(x2976_0_s)
      val x3034 = CounterChain.copy("x3081", "x3034")
      Stage(operands=List(CU.ctr(x3034(0)), Const(1)), op=FixAdd, results=List())
      Stage(operands=List(CU.load(x3039), CU.load(x3043)), op=FixAdd, results=List(x3055))
      Stage(operands=List(x3055, CU.load(x3047)), op=FixAdd, results=List(x3056))
      Stage(operands=List(x3056, CU.load(x3051)), op=FixAdd, results=List(x3057))
      Stage(operands=List(x3057, CU.load(x3053)), op=FixMul, results=List())
      Stage(operands=List(CU.load(x3062), CU.load(x3053)), op=FixMul, results=List(CU.scalarOut(bus_1439_s)))
    }
    val x3081_2 = Pipeline(name="x3081_2",parent=x3081) { implicit CU => 
      val x3068 = CU.temp(None)
      val x3072 = CU.temp(None)
      val x3065 = CU.temp(None)
      val x3071 = CU.temp(None)
      val x3069 = CU.temp(None)
      val x3064 = ScalarFIFO(size=1,name="x3064").wtPort(bus_1439_s)
      val x2914 = ScalarBuffer(name="x2914").wtPort(exp_posbias_argin)
      val x3060 = ScalarFIFO(size=1,name="x3060").wtPort(x2930_0_s)
      val x2913 = ScalarBuffer(name="x2913").wtPort(exp_negbias_argin)
      Stage(operands=List(CU.load(x3064), Const(0)), op=FixLt, results=List(x3065))
      Stage(operands=List(x3065, CU.load(x2914), CU.load(x2913)), op=Mux, results=List(x3068))
      Stage(operands=List(CU.load(x3060), x3068), op=FixMul, results=List(x3069))
      Stage(operands=List(Const(1), x3069), op=FixLt, results=List(x3071))
      Stage(operands=List(x3071, Const(1), Const(1)), op=Mux, results=List(x3072))
      Stage(operands=List(x3072, Const(1)), op=FixEql, results=List(CU.scalarOut(bus_1446_s)))
    }
    val x3081_3 = Pipeline(name="x3081_3",parent=x3081) { implicit CU => 
      val x3078 = CU.temp(None)
      val x3077 = CU.temp(None)
      val x3053 = ScalarFIFO(size=1,name="x3053").wtPort(x2931_1_s)
      val x3075 = ScalarFIFO(size=1,name="x3075").wtPort(bus_1423_s)
      val x3076 = ScalarFIFO(size=1,name="x3076").wtPort(bus_1446_s)
      Stage(operands=List(CU.load(x3075), CU.load(x3076)), op=BitAnd, results=List(x3077))
      Stage(operands=List(CU.load(x3053)), op=FixNeg, results=List(x3078))
      Stage(operands=List(x3077, x3078, CU.load(x3053)), op=Mux, results=List(CU.scalarOut(x2931_x3080_s)))
    }
    val x3131 = StreamController(name="x3131",parent=x3233) { implicit CU => 
      val x3008 = ScalarBuffer(name="x3008").wtPort(x3008_x3019_s)
      val ctr9 = Counter(min=x3008.readPort, max=Const(64), step=Const(1), par=1) // Counter
      val x3084 = CounterChain(name = "x3084", ctr9).iter(64)
    }
    val x3131_0 = Pipeline(name="x3131_0",parent=x3131) { implicit CU => 
      val x3124 = CU.temp(None)
      val x3123 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3084 = CounterChain.copy("x3131", "x3084")
      Stage(operands=List(Const(0), CU.ctr(x3084(0))), op=FixLt, results=List(x3123))
      Stage(operands=List(CU.ctr(x3084(0)), Const(64)), op=FixLt, results=List(x3124))
      Stage(operands=List(x3123, x3124), op=BitAnd, results=List(CU.scalarOut(bus_1456_s)))
      Stage(operands=List(CU.ctr(x3084(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List())
    }
    val x3131_1 = Pipeline(name="x3131_1",parent=x3131) { implicit CU => 
      val x3107 = CU.temp(None)
      val x3106 = CU.temp(None)
      val x3105 = CU.temp(None)
      val x3093 = ScalarFIFO(size=1,name="x3093").wtPort(x2931_7_s)
      val x3103 = ScalarFIFO(size=1,name="x3103").wtPort(x2931_1_s)
      val x3089 = ScalarFIFO(size=1,name="x3089").wtPort(x2931_9_s)
      val x3097 = ScalarFIFO(size=1,name="x3097").wtPort(x2931_4_s)
      val x3101 = ScalarFIFO(size=1,name="x3101").wtPort(x2931_2_s)
      val x3112 = ScalarFIFO(size=1,name="x3112").wtPort(x2976_0_s)
      val x3084 = CounterChain.copy("x3131", "x3084")
      Stage(operands=List(CU.ctr(x3084(0)), Const(1)), op=FixAdd, results=List())
      Stage(operands=List(CU.load(x3089), CU.load(x3093)), op=FixAdd, results=List(x3105))
      Stage(operands=List(x3105, CU.load(x3097)), op=FixAdd, results=List(x3106))
      Stage(operands=List(x3106, CU.load(x3101)), op=FixAdd, results=List(x3107))
      Stage(operands=List(x3107, CU.load(x3103)), op=FixMul, results=List())
      Stage(operands=List(CU.load(x3112), CU.load(x3103)), op=FixMul, results=List(CU.scalarOut(bus_1472_s)))
    }
    val x3131_2 = Pipeline(name="x3131_2",parent=x3131) { implicit CU => 
      val x3115 = CU.temp(None)
      val x3121 = CU.temp(None)
      val x3118 = CU.temp(None)
      val x3122 = CU.temp(None)
      val x3119 = CU.temp(None)
      val x3114 = ScalarFIFO(size=1,name="x3114").wtPort(bus_1472_s)
      val x2914 = ScalarBuffer(name="x2914").wtPort(exp_posbias_argin)
      val x3110 = ScalarFIFO(size=1,name="x3110").wtPort(x2930_1_s)
      val x2913 = ScalarBuffer(name="x2913").wtPort(exp_negbias_argin)
      Stage(operands=List(CU.load(x3114), Const(0)), op=FixLt, results=List(x3115))
      Stage(operands=List(x3115, CU.load(x2914), CU.load(x2913)), op=Mux, results=List(x3118))
      Stage(operands=List(CU.load(x3110), x3118), op=FixMul, results=List(x3119))
      Stage(operands=List(Const(1), x3119), op=FixLt, results=List(x3121))
      Stage(operands=List(x3121, Const(1), Const(1)), op=Mux, results=List(x3122))
      Stage(operands=List(x3122, Const(1)), op=FixEql, results=List(CU.scalarOut(bus_1479_s)))
    }
    val x3131_3 = Pipeline(name="x3131_3",parent=x3131) { implicit CU => 
      val x3127 = CU.temp(None)
      val x3128 = CU.temp(None)
      val x3125 = ScalarFIFO(size=1,name="x3125").wtPort(bus_1456_s)
      val x3103 = ScalarFIFO(size=1,name="x3103").wtPort(x2931_1_s)
      val x3126 = ScalarFIFO(size=1,name="x3126").wtPort(bus_1479_s)
      Stage(operands=List(CU.load(x3125), CU.load(x3126)), op=BitAnd, results=List(x3127))
      Stage(operands=List(CU.load(x3103)), op=FixNeg, results=List(x3128))
      Stage(operands=List(x3127, x3128, CU.load(x3103)), op=Mux, results=List(CU.scalarOut(x2931_x3130_s)))
    }
    val x3181 = StreamController(name="x3181",parent=x3233) { implicit CU => 
      val x3009 = ScalarBuffer(name="x3009").wtPort(x3009_x3024_s)
      val ctr10 = Counter(min=x3009.readPort, max=Const(64), step=Const(1), par=1) // Counter
      val x3134 = CounterChain(name = "x3134", ctr10).iter(64)
    }
    val x3181_0 = Pipeline(name="x3181_0",parent=x3181) { implicit CU => 
      val x3173 = CU.temp(None)
      val x3174 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3134 = CounterChain.copy("x3181", "x3134")
      Stage(operands=List(Const(0), CU.ctr(x3134(0))), op=FixLt, results=List(x3173))
      Stage(operands=List(CU.ctr(x3134(0)), Const(64)), op=FixLt, results=List(x3174))
      Stage(operands=List(x3173, x3174), op=BitAnd, results=List(CU.scalarOut(bus_1489_s)))
      Stage(operands=List(CU.ctr(x3134(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List())
    }
    val x3181_1 = Pipeline(name="x3181_1",parent=x3181) { implicit CU => 
      val x3157 = CU.temp(None)
      val x3156 = CU.temp(None)
      val x3155 = CU.temp(None)
      val x3139 = ScalarFIFO(size=1,name="x3139").wtPort(x2931_10_s)
      val x3151 = ScalarFIFO(size=1,name="x3151").wtPort(x2931_2_s)
      val x3153 = ScalarFIFO(size=1,name="x3153").wtPort(x2931_1_s)
      val x3162 = ScalarFIFO(size=1,name="x3162").wtPort(x2976_0_s)
      val x3143 = ScalarFIFO(size=1,name="x3143").wtPort(x2931_7_s)
      val x3147 = ScalarFIFO(size=1,name="x3147").wtPort(x2931_5_s)
      val x3134 = CounterChain.copy("x3181", "x3134")
      Stage(operands=List(CU.ctr(x3134(0)), Const(1)), op=FixAdd, results=List())
      Stage(operands=List(CU.load(x3139), CU.load(x3143)), op=FixAdd, results=List(x3155))
      Stage(operands=List(x3155, CU.load(x3147)), op=FixAdd, results=List(x3156))
      Stage(operands=List(x3156, CU.load(x3151)), op=FixAdd, results=List(x3157))
      Stage(operands=List(x3157, CU.load(x3153)), op=FixMul, results=List())
      Stage(operands=List(CU.load(x3162), CU.load(x3153)), op=FixMul, results=List(CU.scalarOut(bus_1505_s)))
    }
    val x3181_2 = Pipeline(name="x3181_2",parent=x3181) { implicit CU => 
      val x3168 = CU.temp(None)
      val x3165 = CU.temp(None)
      val x3171 = CU.temp(None)
      val x3172 = CU.temp(None)
      val x3169 = CU.temp(None)
      val x3160 = ScalarFIFO(size=1,name="x3160").wtPort(x2930_2_s)
      val x2914 = ScalarBuffer(name="x2914").wtPort(exp_posbias_argin)
      val x3164 = ScalarFIFO(size=1,name="x3164").wtPort(bus_1505_s)
      val x2913 = ScalarBuffer(name="x2913").wtPort(exp_negbias_argin)
      Stage(operands=List(CU.load(x3164), Const(0)), op=FixLt, results=List(x3165))
      Stage(operands=List(x3165, CU.load(x2914), CU.load(x2913)), op=Mux, results=List(x3168))
      Stage(operands=List(CU.load(x3160), x3168), op=FixMul, results=List(x3169))
      Stage(operands=List(Const(1), x3169), op=FixLt, results=List(x3171))
      Stage(operands=List(x3171, Const(1), Const(1)), op=Mux, results=List(x3172))
      Stage(operands=List(x3172, Const(1)), op=FixEql, results=List(CU.scalarOut(bus_1512_s)))
    }
    val x3181_3 = Pipeline(name="x3181_3",parent=x3181) { implicit CU => 
      val x3178 = CU.temp(None)
      val x3177 = CU.temp(None)
      val x3175 = ScalarFIFO(size=1,name="x3175").wtPort(bus_1489_s)
      val x3153 = ScalarFIFO(size=1,name="x3153").wtPort(x2931_1_s)
      val x3176 = ScalarFIFO(size=1,name="x3176").wtPort(bus_1512_s)
      Stage(operands=List(CU.load(x3175), CU.load(x3176)), op=BitAnd, results=List(x3177))
      Stage(operands=List(CU.load(x3153)), op=FixNeg, results=List(x3178))
      Stage(operands=List(x3177, x3178, CU.load(x3153)), op=Mux, results=List(CU.scalarOut(x2931_x3180_s)))
    }
    val x3231 = StreamController(name="x3231",parent=x3233) { implicit CU => 
      val x3010 = ScalarBuffer(name="x3010").wtPort(x3010_x3029_s)
      val ctr11 = Counter(min=x3010.readPort, max=Const(64), step=Const(1), par=1) // Counter
      val x3184 = CounterChain(name = "x3184", ctr11).iter(64)
    }
    val x3231_0 = Pipeline(name="x3231_0",parent=x3231) { implicit CU => 
      val x3223 = CU.temp(None)
      val x3224 = CU.temp(None)
      val x3006 = CounterChain.copy("x3233", "x3006")
      val x3184 = CounterChain.copy("x3231", "x3184")
      Stage(operands=List(Const(0), CU.ctr(x3184(0))), op=FixLt, results=List(x3223))
      Stage(operands=List(CU.ctr(x3184(0)), Const(64)), op=FixLt, results=List(x3224))
      Stage(operands=List(x3223, x3224), op=BitAnd, results=List(CU.scalarOut(bus_1522_s)))
      Stage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixSub, results=List())
      Stage(operands=List(CU.ctr(x3006(0)), Const(1)), op=FixAdd, results=List())
    }
    val x3231_1 = Pipeline(name="x3231_1",parent=x3231) { implicit CU => 
      val x3205 = CU.temp(None)
      val x3206 = CU.temp(None)
      val x3207 = CU.temp(None)
      val x3212 = ScalarFIFO(size=1,name="x3212").wtPort(x2976_0_s)
      val x3193 = ScalarFIFO(size=1,name="x3193").wtPort(x2931_7_s)
      val x3189 = ScalarFIFO(size=1,name="x3189").wtPort(x2931_11_s)
      val x3201 = ScalarFIFO(size=1,name="x3201").wtPort(x2931_2_s)
      val x3203 = ScalarFIFO(size=1,name="x3203").wtPort(x2931_1_s)
      val x3197 = ScalarFIFO(size=1,name="x3197").wtPort(x2931_6_s)
      val x3184 = CounterChain.copy("x3231", "x3184")
      Stage(operands=List(CU.ctr(x3184(0)), Const(1)), op=FixAdd, results=List())
      Stage(operands=List(CU.load(x3189), CU.load(x3193)), op=FixAdd, results=List(x3205))
      Stage(operands=List(x3205, CU.load(x3197)), op=FixAdd, results=List(x3206))
      Stage(operands=List(x3206, CU.load(x3201)), op=FixAdd, results=List(x3207))
      Stage(operands=List(x3207, CU.load(x3203)), op=FixMul, results=List())
      Stage(operands=List(CU.load(x3212), CU.load(x3203)), op=FixMul, results=List(CU.scalarOut(bus_1538_s)))
    }
    val x3231_2 = Pipeline(name="x3231_2",parent=x3231) { implicit CU => 
      val x3221 = CU.temp(None)
      val x3219 = CU.temp(None)
      val x3222 = CU.temp(None)
      val x3215 = CU.temp(None)
      val x3218 = CU.temp(None)
      val x3214 = ScalarFIFO(size=1,name="x3214").wtPort(bus_1538_s)
      val x3210 = ScalarFIFO(size=1,name="x3210").wtPort(x2930_3_s)
      val x2914 = ScalarBuffer(name="x2914").wtPort(exp_posbias_argin)
      val x2913 = ScalarBuffer(name="x2913").wtPort(exp_negbias_argin)
      Stage(operands=List(CU.load(x3214), Const(0)), op=FixLt, results=List(x3215))
      Stage(operands=List(x3215, CU.load(x2914), CU.load(x2913)), op=Mux, results=List(x3218))
      Stage(operands=List(CU.load(x3210), x3218), op=FixMul, results=List(x3219))
      Stage(operands=List(Const(1), x3219), op=FixLt, results=List(x3221))
      Stage(operands=List(x3221, Const(1), Const(1)), op=Mux, results=List(x3222))
      Stage(operands=List(x3222, Const(1)), op=FixEql, results=List(CU.scalarOut(bus_1545_s)))
    }
    val x3231_3 = Pipeline(name="x3231_3",parent=x3231) { implicit CU => 
      val x3227 = CU.temp(None)
      val x3228 = CU.temp(None)
      val x3226 = ScalarFIFO(size=1,name="x3226").wtPort(bus_1545_s)
      val x3203 = ScalarFIFO(size=1,name="x3203").wtPort(x2931_1_s)
      val x3225 = ScalarFIFO(size=1,name="x3225").wtPort(bus_1522_s)
      Stage(operands=List(CU.load(x3225), CU.load(x3226)), op=BitAnd, results=List(x3227))
      Stage(operands=List(CU.load(x3203)), op=FixNeg, results=List(x3228))
      Stage(operands=List(x3227, x3228, CU.load(x3203)), op=Mux, results=List(CU.scalarOut(x2931_x3230_s)))
    }
    val x3263 = StreamController(name="x3263",parent=x3264) { implicit CU => 
      val ctr12 = Counter(min=Const(0), max=Const(32), step=Const(1), par=1) // Counter
      val x3236 = CounterChain(name = "x3236", ctr12).iter(32)
    }
    val x3251_0 = Pipeline(name="x3251_0",parent=x3263) { implicit CU => 
      val x3244 = CU.temp(None)
      val x3241 = CU.temp(None)
      val x3243 = CU.temp(None)
      val x3246 = ScalarBuffer(name="x3246").wtPort(grid_dram_da)
      val x3236 = CounterChain.copy("x3263", "x3236")
      val x3251_unit = CounterChain(name = "x3251_unit", Counter(Const(0), Const(1), Const(1), par=1)).iter(1l)
      Stage(operands=List(CU.ctr(x3236(0)), Const(6)), op=FixSla, results=List(x3241))
      Stage(operands=List(x3241, Const(0)), op=FixAdd, results=List(x3243))
      Stage(operands=List(x3243, Const(2)), op=FixSla, results=List(x3244))
      Stage(operands=List(x3244, CU.load(x3246)), op=FixAdd, results=List(CU.scalarOut(x3237_b3389_x3250_b3391_s)))
      Stage(operands=List(Const(256)), op=Bypass, results=List(CU.scalarOut(x3237_b3390_x3250_b3392_s)))
    }
    val x3259 = Pipeline(name="x3259",parent=x3263) { implicit CU => 
      val ctr13 = Counter(min=Const(0), max=Const(64), step=Const(1), par=16) // Counter
      val x3253 = CounterChain(name = "x3253", ctr13).iter(4)
    }
    val x3260 = MemoryController(name="x3260",parent=x3263,offchip=grid_dram_oc, mctpe=TileStore) { implicit CU => 
      val x3238 = ScalarFIFO(size=1,name="data").wtPort(x2931_0_s)
      val x3237_b3390 = ScalarFIFO(size=1,name="size").wtPort(x3237_b3390_x3250_b3392_s)
      val x3237_b3389 = ScalarFIFO(size=1,name="offset").wtPort(x3237_b3389_x3250_b3391_s)
    }
    
  }
}
